// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orc_proto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "orc_proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace orc {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* IntegerStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IntegerStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* DoubleStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DoubleStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* StringStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StringStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* BucketStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BucketStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* DecimalStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DecimalStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* DateStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DateStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* TimestampStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TimestampStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* BinaryStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BinaryStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* ColumnStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ColumnStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* RowIndexEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RowIndexEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* RowIndex_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RowIndex_reflection_ = NULL;
const ::google::protobuf::Descriptor* BloomFilter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BloomFilter_reflection_ = NULL;
const ::google::protobuf::Descriptor* BloomFilterIndex_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BloomFilterIndex_reflection_ = NULL;
const ::google::protobuf::Descriptor* Stream_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Stream_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Stream_Kind_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ColumnEncoding_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ColumnEncoding_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ColumnEncoding_Kind_descriptor_ = NULL;
const ::google::protobuf::Descriptor* StripeFooter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StripeFooter_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Type_Kind_descriptor_ = NULL;
const ::google::protobuf::Descriptor* StripeInformation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StripeInformation_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserMetadataItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserMetadataItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* StripeStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StripeStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* Metadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Metadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* Footer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Footer_reflection_ = NULL;
const ::google::protobuf::Descriptor* PostScript_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PostScript_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileTail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileTail_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CompressionKind_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_orc_5fproto_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_orc_5fproto_2eproto() {
  protobuf_AddDesc_orc_5fproto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "orc_proto.proto");
  GOOGLE_CHECK(file != NULL);
  IntegerStatistics_descriptor_ = file->message_type(0);
  static const int IntegerStatistics_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntegerStatistics, minimum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntegerStatistics, maximum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntegerStatistics, sum_),
  };
  IntegerStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IntegerStatistics_descriptor_,
      IntegerStatistics::internal_default_instance(),
      IntegerStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntegerStatistics, _has_bits_),
      -1,
      -1,
      sizeof(IntegerStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntegerStatistics, _internal_metadata_));
  DoubleStatistics_descriptor_ = file->message_type(1);
  static const int DoubleStatistics_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoubleStatistics, minimum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoubleStatistics, maximum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoubleStatistics, sum_),
  };
  DoubleStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DoubleStatistics_descriptor_,
      DoubleStatistics::internal_default_instance(),
      DoubleStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoubleStatistics, _has_bits_),
      -1,
      -1,
      sizeof(DoubleStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoubleStatistics, _internal_metadata_));
  StringStatistics_descriptor_ = file->message_type(2);
  static const int StringStatistics_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStatistics, minimum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStatistics, maximum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStatistics, sum_),
  };
  StringStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StringStatistics_descriptor_,
      StringStatistics::internal_default_instance(),
      StringStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStatistics, _has_bits_),
      -1,
      -1,
      sizeof(StringStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStatistics, _internal_metadata_));
  BucketStatistics_descriptor_ = file->message_type(3);
  static const int BucketStatistics_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketStatistics, count_),
  };
  BucketStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BucketStatistics_descriptor_,
      BucketStatistics::internal_default_instance(),
      BucketStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketStatistics, _has_bits_),
      -1,
      -1,
      sizeof(BucketStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketStatistics, _internal_metadata_));
  DecimalStatistics_descriptor_ = file->message_type(4);
  static const int DecimalStatistics_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecimalStatistics, minimum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecimalStatistics, maximum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecimalStatistics, sum_),
  };
  DecimalStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DecimalStatistics_descriptor_,
      DecimalStatistics::internal_default_instance(),
      DecimalStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecimalStatistics, _has_bits_),
      -1,
      -1,
      sizeof(DecimalStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecimalStatistics, _internal_metadata_));
  DateStatistics_descriptor_ = file->message_type(5);
  static const int DateStatistics_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DateStatistics, minimum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DateStatistics, maximum_),
  };
  DateStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DateStatistics_descriptor_,
      DateStatistics::internal_default_instance(),
      DateStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DateStatistics, _has_bits_),
      -1,
      -1,
      sizeof(DateStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DateStatistics, _internal_metadata_));
  TimestampStatistics_descriptor_ = file->message_type(6);
  static const int TimestampStatistics_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimestampStatistics, minimum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimestampStatistics, maximum_),
  };
  TimestampStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TimestampStatistics_descriptor_,
      TimestampStatistics::internal_default_instance(),
      TimestampStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimestampStatistics, _has_bits_),
      -1,
      -1,
      sizeof(TimestampStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimestampStatistics, _internal_metadata_));
  BinaryStatistics_descriptor_ = file->message_type(7);
  static const int BinaryStatistics_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryStatistics, sum_),
  };
  BinaryStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BinaryStatistics_descriptor_,
      BinaryStatistics::internal_default_instance(),
      BinaryStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryStatistics, _has_bits_),
      -1,
      -1,
      sizeof(BinaryStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BinaryStatistics, _internal_metadata_));
  ColumnStatistics_descriptor_ = file->message_type(8);
  static const int ColumnStatistics_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnStatistics, numberofvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnStatistics, intstatistics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnStatistics, doublestatistics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnStatistics, stringstatistics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnStatistics, bucketstatistics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnStatistics, decimalstatistics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnStatistics, datestatistics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnStatistics, binarystatistics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnStatistics, timestampstatistics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnStatistics, hasnull_),
  };
  ColumnStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ColumnStatistics_descriptor_,
      ColumnStatistics::internal_default_instance(),
      ColumnStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnStatistics, _has_bits_),
      -1,
      -1,
      sizeof(ColumnStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnStatistics, _internal_metadata_));
  RowIndexEntry_descriptor_ = file->message_type(9);
  static const int RowIndexEntry_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowIndexEntry, positions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowIndexEntry, statistics_),
  };
  RowIndexEntry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RowIndexEntry_descriptor_,
      RowIndexEntry::internal_default_instance(),
      RowIndexEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowIndexEntry, _has_bits_),
      -1,
      -1,
      sizeof(RowIndexEntry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowIndexEntry, _internal_metadata_));
  RowIndex_descriptor_ = file->message_type(10);
  static const int RowIndex_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowIndex, entry_),
  };
  RowIndex_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RowIndex_descriptor_,
      RowIndex::internal_default_instance(),
      RowIndex_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowIndex, _has_bits_),
      -1,
      -1,
      sizeof(RowIndex),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RowIndex, _internal_metadata_));
  BloomFilter_descriptor_ = file->message_type(11);
  static const int BloomFilter_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BloomFilter, numhashfunctions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BloomFilter, bitset_),
  };
  BloomFilter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BloomFilter_descriptor_,
      BloomFilter::internal_default_instance(),
      BloomFilter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BloomFilter, _has_bits_),
      -1,
      -1,
      sizeof(BloomFilter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BloomFilter, _internal_metadata_));
  BloomFilterIndex_descriptor_ = file->message_type(12);
  static const int BloomFilterIndex_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BloomFilterIndex, bloomfilter_),
  };
  BloomFilterIndex_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BloomFilterIndex_descriptor_,
      BloomFilterIndex::internal_default_instance(),
      BloomFilterIndex_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BloomFilterIndex, _has_bits_),
      -1,
      -1,
      sizeof(BloomFilterIndex),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BloomFilterIndex, _internal_metadata_));
  Stream_descriptor_ = file->message_type(13);
  static const int Stream_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stream, kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stream, column_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stream, length_),
  };
  Stream_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Stream_descriptor_,
      Stream::internal_default_instance(),
      Stream_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stream, _has_bits_),
      -1,
      -1,
      sizeof(Stream),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stream, _internal_metadata_));
  Stream_Kind_descriptor_ = Stream_descriptor_->enum_type(0);
  ColumnEncoding_descriptor_ = file->message_type(14);
  static const int ColumnEncoding_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnEncoding, kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnEncoding, dictionarysize_),
  };
  ColumnEncoding_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ColumnEncoding_descriptor_,
      ColumnEncoding::internal_default_instance(),
      ColumnEncoding_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnEncoding, _has_bits_),
      -1,
      -1,
      sizeof(ColumnEncoding),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ColumnEncoding, _internal_metadata_));
  ColumnEncoding_Kind_descriptor_ = ColumnEncoding_descriptor_->enum_type(0);
  StripeFooter_descriptor_ = file->message_type(15);
  static const int StripeFooter_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeFooter, streams_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeFooter, columns_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeFooter, writertimezone_),
  };
  StripeFooter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StripeFooter_descriptor_,
      StripeFooter::internal_default_instance(),
      StripeFooter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeFooter, _has_bits_),
      -1,
      -1,
      sizeof(StripeFooter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeFooter, _internal_metadata_));
  Type_descriptor_ = file->message_type(16);
  static const int Type_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, subtypes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, fieldnames_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, maximumlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, precision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, scale_),
  };
  Type_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type_descriptor_,
      Type::internal_default_instance(),
      Type_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, _has_bits_),
      -1,
      -1,
      sizeof(Type),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, _internal_metadata_));
  Type_Kind_descriptor_ = Type_descriptor_->enum_type(0);
  StripeInformation_descriptor_ = file->message_type(17);
  static const int StripeInformation_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeInformation, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeInformation, indexlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeInformation, datalength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeInformation, footerlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeInformation, numberofrows_),
  };
  StripeInformation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StripeInformation_descriptor_,
      StripeInformation::internal_default_instance(),
      StripeInformation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeInformation, _has_bits_),
      -1,
      -1,
      sizeof(StripeInformation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeInformation, _internal_metadata_));
  UserMetadataItem_descriptor_ = file->message_type(18);
  static const int UserMetadataItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMetadataItem, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMetadataItem, value_),
  };
  UserMetadataItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserMetadataItem_descriptor_,
      UserMetadataItem::internal_default_instance(),
      UserMetadataItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMetadataItem, _has_bits_),
      -1,
      -1,
      sizeof(UserMetadataItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMetadataItem, _internal_metadata_));
  StripeStatistics_descriptor_ = file->message_type(19);
  static const int StripeStatistics_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeStatistics, colstats_),
  };
  StripeStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StripeStatistics_descriptor_,
      StripeStatistics::internal_default_instance(),
      StripeStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeStatistics, _has_bits_),
      -1,
      -1,
      sizeof(StripeStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StripeStatistics, _internal_metadata_));
  Metadata_descriptor_ = file->message_type(20);
  static const int Metadata_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, stripestats_),
  };
  Metadata_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Metadata_descriptor_,
      Metadata::internal_default_instance(),
      Metadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, _has_bits_),
      -1,
      -1,
      sizeof(Metadata),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, _internal_metadata_));
  Footer_descriptor_ = file->message_type(21);
  static const int Footer_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footer, headerlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footer, contentlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footer, stripes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footer, types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footer, metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footer, numberofrows_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footer, statistics_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footer, rowindexstride_),
  };
  Footer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Footer_descriptor_,
      Footer::internal_default_instance(),
      Footer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footer, _has_bits_),
      -1,
      -1,
      sizeof(Footer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Footer, _internal_metadata_));
  PostScript_descriptor_ = file->message_type(22);
  static const int PostScript_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostScript, footerlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostScript, compression_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostScript, compressionblocksize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostScript, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostScript, metadatalength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostScript, writerversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostScript, magic_),
  };
  PostScript_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PostScript_descriptor_,
      PostScript::internal_default_instance(),
      PostScript_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostScript, _has_bits_),
      -1,
      -1,
      sizeof(PostScript),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostScript, _internal_metadata_));
  FileTail_descriptor_ = file->message_type(23);
  static const int FileTail_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileTail, postscript_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileTail, footer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileTail, filelength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileTail, postscriptlength_),
  };
  FileTail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FileTail_descriptor_,
      FileTail::internal_default_instance(),
      FileTail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileTail, _has_bits_),
      -1,
      -1,
      sizeof(FileTail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileTail, _internal_metadata_));
  CompressionKind_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_orc_5fproto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IntegerStatistics_descriptor_, IntegerStatistics::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DoubleStatistics_descriptor_, DoubleStatistics::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StringStatistics_descriptor_, StringStatistics::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BucketStatistics_descriptor_, BucketStatistics::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DecimalStatistics_descriptor_, DecimalStatistics::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DateStatistics_descriptor_, DateStatistics::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TimestampStatistics_descriptor_, TimestampStatistics::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BinaryStatistics_descriptor_, BinaryStatistics::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ColumnStatistics_descriptor_, ColumnStatistics::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RowIndexEntry_descriptor_, RowIndexEntry::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RowIndex_descriptor_, RowIndex::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BloomFilter_descriptor_, BloomFilter::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BloomFilterIndex_descriptor_, BloomFilterIndex::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Stream_descriptor_, Stream::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ColumnEncoding_descriptor_, ColumnEncoding::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StripeFooter_descriptor_, StripeFooter::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type_descriptor_, Type::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StripeInformation_descriptor_, StripeInformation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserMetadataItem_descriptor_, UserMetadataItem::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StripeStatistics_descriptor_, StripeStatistics::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Metadata_descriptor_, Metadata::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Footer_descriptor_, Footer::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PostScript_descriptor_, PostScript::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FileTail_descriptor_, FileTail::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_orc_5fproto_2eproto() {
  IntegerStatistics_default_instance_.Shutdown();
  delete IntegerStatistics_reflection_;
  DoubleStatistics_default_instance_.Shutdown();
  delete DoubleStatistics_reflection_;
  StringStatistics_default_instance_.Shutdown();
  delete StringStatistics_reflection_;
  BucketStatistics_default_instance_.Shutdown();
  delete BucketStatistics_reflection_;
  DecimalStatistics_default_instance_.Shutdown();
  delete DecimalStatistics_reflection_;
  DateStatistics_default_instance_.Shutdown();
  delete DateStatistics_reflection_;
  TimestampStatistics_default_instance_.Shutdown();
  delete TimestampStatistics_reflection_;
  BinaryStatistics_default_instance_.Shutdown();
  delete BinaryStatistics_reflection_;
  ColumnStatistics_default_instance_.Shutdown();
  delete ColumnStatistics_reflection_;
  RowIndexEntry_default_instance_.Shutdown();
  delete RowIndexEntry_reflection_;
  RowIndex_default_instance_.Shutdown();
  delete RowIndex_reflection_;
  BloomFilter_default_instance_.Shutdown();
  delete BloomFilter_reflection_;
  BloomFilterIndex_default_instance_.Shutdown();
  delete BloomFilterIndex_reflection_;
  Stream_default_instance_.Shutdown();
  delete Stream_reflection_;
  ColumnEncoding_default_instance_.Shutdown();
  delete ColumnEncoding_reflection_;
  StripeFooter_default_instance_.Shutdown();
  delete StripeFooter_reflection_;
  Type_default_instance_.Shutdown();
  delete Type_reflection_;
  StripeInformation_default_instance_.Shutdown();
  delete StripeInformation_reflection_;
  UserMetadataItem_default_instance_.Shutdown();
  delete UserMetadataItem_reflection_;
  StripeStatistics_default_instance_.Shutdown();
  delete StripeStatistics_reflection_;
  Metadata_default_instance_.Shutdown();
  delete Metadata_reflection_;
  Footer_default_instance_.Shutdown();
  delete Footer_reflection_;
  PostScript_default_instance_.Shutdown();
  delete PostScript_reflection_;
  FileTail_default_instance_.Shutdown();
  delete FileTail_reflection_;
}

void protobuf_InitDefaults_orc_5fproto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  IntegerStatistics_default_instance_.DefaultConstruct();
  DoubleStatistics_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  StringStatistics_default_instance_.DefaultConstruct();
  BucketStatistics_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  DecimalStatistics_default_instance_.DefaultConstruct();
  DateStatistics_default_instance_.DefaultConstruct();
  TimestampStatistics_default_instance_.DefaultConstruct();
  BinaryStatistics_default_instance_.DefaultConstruct();
  ColumnStatistics_default_instance_.DefaultConstruct();
  RowIndexEntry_default_instance_.DefaultConstruct();
  RowIndex_default_instance_.DefaultConstruct();
  BloomFilter_default_instance_.DefaultConstruct();
  BloomFilterIndex_default_instance_.DefaultConstruct();
  Stream_default_instance_.DefaultConstruct();
  ColumnEncoding_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  StripeFooter_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Type_default_instance_.DefaultConstruct();
  StripeInformation_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UserMetadataItem_default_instance_.DefaultConstruct();
  StripeStatistics_default_instance_.DefaultConstruct();
  Metadata_default_instance_.DefaultConstruct();
  Footer_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PostScript_default_instance_.DefaultConstruct();
  FileTail_default_instance_.DefaultConstruct();
  IntegerStatistics_default_instance_.get_mutable()->InitAsDefaultInstance();
  DoubleStatistics_default_instance_.get_mutable()->InitAsDefaultInstance();
  StringStatistics_default_instance_.get_mutable()->InitAsDefaultInstance();
  BucketStatistics_default_instance_.get_mutable()->InitAsDefaultInstance();
  DecimalStatistics_default_instance_.get_mutable()->InitAsDefaultInstance();
  DateStatistics_default_instance_.get_mutable()->InitAsDefaultInstance();
  TimestampStatistics_default_instance_.get_mutable()->InitAsDefaultInstance();
  BinaryStatistics_default_instance_.get_mutable()->InitAsDefaultInstance();
  ColumnStatistics_default_instance_.get_mutable()->InitAsDefaultInstance();
  RowIndexEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  RowIndex_default_instance_.get_mutable()->InitAsDefaultInstance();
  BloomFilter_default_instance_.get_mutable()->InitAsDefaultInstance();
  BloomFilterIndex_default_instance_.get_mutable()->InitAsDefaultInstance();
  Stream_default_instance_.get_mutable()->InitAsDefaultInstance();
  ColumnEncoding_default_instance_.get_mutable()->InitAsDefaultInstance();
  StripeFooter_default_instance_.get_mutable()->InitAsDefaultInstance();
  Type_default_instance_.get_mutable()->InitAsDefaultInstance();
  StripeInformation_default_instance_.get_mutable()->InitAsDefaultInstance();
  UserMetadataItem_default_instance_.get_mutable()->InitAsDefaultInstance();
  StripeStatistics_default_instance_.get_mutable()->InitAsDefaultInstance();
  Metadata_default_instance_.get_mutable()->InitAsDefaultInstance();
  Footer_default_instance_.get_mutable()->InitAsDefaultInstance();
  PostScript_default_instance_.get_mutable()->InitAsDefaultInstance();
  FileTail_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_orc_5fproto_2eproto_once_);
void protobuf_InitDefaults_orc_5fproto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_orc_5fproto_2eproto_once_,
                 &protobuf_InitDefaults_orc_5fproto_2eproto_impl);
}
void protobuf_AddDesc_orc_5fproto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_orc_5fproto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017orc_proto.proto\022\torc.proto\"B\n\021IntegerS"
    "tatistics\022\017\n\007minimum\030\001 \001(\022\022\017\n\007maximum\030\002 "
    "\001(\022\022\013\n\003sum\030\003 \001(\022\"A\n\020DoubleStatistics\022\017\n\007"
    "minimum\030\001 \001(\001\022\017\n\007maximum\030\002 \001(\001\022\013\n\003sum\030\003 "
    "\001(\001\"A\n\020StringStatistics\022\017\n\007minimum\030\001 \001(\t"
    "\022\017\n\007maximum\030\002 \001(\t\022\013\n\003sum\030\003 \001(\022\"%\n\020Bucket"
    "Statistics\022\021\n\005count\030\001 \003(\004B\002\020\001\"B\n\021Decimal"
    "Statistics\022\017\n\007minimum\030\001 \001(\t\022\017\n\007maximum\030\002"
    " \001(\t\022\013\n\003sum\030\003 \001(\t\"2\n\016DateStatistics\022\017\n\007m"
    "inimum\030\001 \001(\021\022\017\n\007maximum\030\002 \001(\021\"7\n\023Timesta"
    "mpStatistics\022\017\n\007minimum\030\001 \001(\022\022\017\n\007maximum"
    "\030\002 \001(\022\"\037\n\020BinaryStatistics\022\013\n\003sum\030\001 \001(\022\""
    "\365\003\n\020ColumnStatistics\022\026\n\016numberOfValues\030\001"
    " \001(\004\0223\n\rintStatistics\030\002 \001(\0132\034.orc.proto."
    "IntegerStatistics\0225\n\020doubleStatistics\030\003 "
    "\001(\0132\033.orc.proto.DoubleStatistics\0225\n\020stri"
    "ngStatistics\030\004 \001(\0132\033.orc.proto.StringSta"
    "tistics\0225\n\020bucketStatistics\030\005 \001(\0132\033.orc."
    "proto.BucketStatistics\0227\n\021decimalStatist"
    "ics\030\006 \001(\0132\034.orc.proto.DecimalStatistics\022"
    "1\n\016dateStatistics\030\007 \001(\0132\031.orc.proto.Date"
    "Statistics\0225\n\020binaryStatistics\030\010 \001(\0132\033.o"
    "rc.proto.BinaryStatistics\022;\n\023timestampSt"
    "atistics\030\t \001(\0132\036.orc.proto.TimestampStat"
    "istics\022\017\n\007hasNull\030\n \001(\010\"W\n\rRowIndexEntry"
    "\022\025\n\tpositions\030\001 \003(\004B\002\020\001\022/\n\nstatistics\030\002 "
    "\001(\0132\033.orc.proto.ColumnStatistics\"3\n\010RowI"
    "ndex\022\'\n\005entry\030\001 \003(\0132\030.orc.proto.RowIndex"
    "Entry\"7\n\013BloomFilter\022\030\n\020numHashFunctions"
    "\030\001 \001(\r\022\016\n\006bitset\030\002 \003(\006\"\?\n\020BloomFilterInd"
    "ex\022+\n\013bloomFilter\030\001 \003(\0132\026.orc.proto.Bloo"
    "mFilter\"\325\001\n\006Stream\022$\n\004kind\030\001 \001(\0162\026.orc.p"
    "roto.Stream.Kind\022\016\n\006column\030\002 \001(\r\022\016\n\006leng"
    "th\030\003 \001(\004\"\204\001\n\004Kind\022\013\n\007PRESENT\020\000\022\010\n\004DATA\020\001"
    "\022\n\n\006LENGTH\020\002\022\023\n\017DICTIONARY_DATA\020\003\022\024\n\020DIC"
    "TIONARY_COUNT\020\004\022\r\n\tSECONDARY\020\005\022\r\n\tROW_IN"
    "DEX\020\006\022\020\n\014BLOOM_FILTER\020\007\"\234\001\n\016ColumnEncodi"
    "ng\022,\n\004kind\030\001 \001(\0162\036.orc.proto.ColumnEncod"
    "ing.Kind\022\026\n\016dictionarySize\030\002 \001(\r\"D\n\004Kind"
    "\022\n\n\006DIRECT\020\000\022\016\n\nDICTIONARY\020\001\022\r\n\tDIRECT_V"
    "2\020\002\022\021\n\rDICTIONARY_V2\020\003\"v\n\014StripeFooter\022\""
    "\n\007streams\030\001 \003(\0132\021.orc.proto.Stream\022*\n\007co"
    "lumns\030\002 \003(\0132\031.orc.proto.ColumnEncoding\022\026"
    "\n\016writerTimezone\030\003 \001(\t\"\341\002\n\004Type\022\"\n\004kind\030"
    "\001 \001(\0162\024.orc.proto.Type.Kind\022\024\n\010subtypes\030"
    "\002 \003(\rB\002\020\001\022\022\n\nfieldNames\030\003 \003(\t\022\025\n\rmaximum"
    "Length\030\004 \001(\r\022\021\n\tprecision\030\005 \001(\r\022\r\n\005scale"
    "\030\006 \001(\r\"\321\001\n\004Kind\022\013\n\007BOOLEAN\020\000\022\010\n\004BYTE\020\001\022\t"
    "\n\005SHORT\020\002\022\007\n\003INT\020\003\022\010\n\004LONG\020\004\022\t\n\005FLOAT\020\005\022"
    "\n\n\006DOUBLE\020\006\022\n\n\006STRING\020\007\022\n\n\006BINARY\020\010\022\r\n\tT"
    "IMESTAMP\020\t\022\010\n\004LIST\020\n\022\007\n\003MAP\020\013\022\n\n\006STRUCT\020"
    "\014\022\t\n\005UNION\020\r\022\013\n\007DECIMAL\020\016\022\010\n\004DATE\020\017\022\013\n\007V"
    "ARCHAR\020\020\022\010\n\004CHAR\020\021\"x\n\021StripeInformation\022"
    "\016\n\006offset\030\001 \001(\004\022\023\n\013indexLength\030\002 \001(\004\022\022\n\n"
    "dataLength\030\003 \001(\004\022\024\n\014footerLength\030\004 \001(\004\022\024"
    "\n\014numberOfRows\030\005 \001(\004\"/\n\020UserMetadataItem"
    "\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\014\"A\n\020StripeS"
    "tatistics\022-\n\010colStats\030\001 \003(\0132\033.orc.proto."
    "ColumnStatistics\"<\n\010Metadata\0220\n\013stripeSt"
    "ats\030\001 \003(\0132\033.orc.proto.StripeStatistics\"\222"
    "\002\n\006Footer\022\024\n\014headerLength\030\001 \001(\004\022\025\n\rconte"
    "ntLength\030\002 \001(\004\022-\n\007stripes\030\003 \003(\0132\034.orc.pr"
    "oto.StripeInformation\022\036\n\005types\030\004 \003(\0132\017.o"
    "rc.proto.Type\022-\n\010metadata\030\005 \003(\0132\033.orc.pr"
    "oto.UserMetadataItem\022\024\n\014numberOfRows\030\006 \001"
    "(\004\022/\n\nstatistics\030\007 \003(\0132\033.orc.proto.Colum"
    "nStatistics\022\026\n\016rowIndexStride\030\010 \001(\r\"\305\001\n\n"
    "PostScript\022\024\n\014footerLength\030\001 \001(\004\022/\n\013comp"
    "ression\030\002 \001(\0162\032.orc.proto.CompressionKin"
    "d\022\034\n\024compressionBlockSize\030\003 \001(\004\022\023\n\007versi"
    "on\030\004 \003(\rB\002\020\001\022\026\n\016metadataLength\030\005 \001(\004\022\025\n\r"
    "writerVersion\030\006 \001(\r\022\016\n\005magic\030\300> \001(\t\"\206\001\n\010"
    "FileTail\022)\n\npostscript\030\001 \001(\0132\025.orc.proto"
    ".PostScript\022!\n\006footer\030\002 \001(\0132\021.orc.proto."
    "Footer\022\022\n\nfileLength\030\003 \001(\004\022\030\n\020postscript"
    "Length\030\004 \001(\004*:\n\017CompressionKind\022\010\n\004NONE\020"
    "\000\022\010\n\004ZLIB\020\001\022\n\n\006SNAPPY\020\002\022\007\n\003LZO\020\003B\"\n org."
    "apache.hadoop.hive.ql.io.orc", 3108);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "orc_proto.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_orc_5fproto_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_orc_5fproto_2eproto_once_);
void protobuf_AddDesc_orc_5fproto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_orc_5fproto_2eproto_once_,
                 &protobuf_AddDesc_orc_5fproto_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_orc_5fproto_2eproto {
  StaticDescriptorInitializer_orc_5fproto_2eproto() {
    protobuf_AddDesc_orc_5fproto_2eproto();
  }
} static_descriptor_initializer_orc_5fproto_2eproto_;
const ::google::protobuf::EnumDescriptor* CompressionKind_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompressionKind_descriptor_;
}
bool CompressionKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntegerStatistics::kMinimumFieldNumber;
const int IntegerStatistics::kMaximumFieldNumber;
const int IntegerStatistics::kSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntegerStatistics::IntegerStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.IntegerStatistics)
}

void IntegerStatistics::InitAsDefaultInstance() {
}

IntegerStatistics::IntegerStatistics(const IntegerStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.IntegerStatistics)
}

void IntegerStatistics::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&minimum_, 0, reinterpret_cast<char*>(&sum_) -
    reinterpret_cast<char*>(&minimum_) + sizeof(sum_));
}

IntegerStatistics::~IntegerStatistics() {
  // @@protoc_insertion_point(destructor:orc.proto.IntegerStatistics)
  SharedDtor();
}

void IntegerStatistics::SharedDtor() {
}

void IntegerStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IntegerStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IntegerStatistics_descriptor_;
}

const IntegerStatistics& IntegerStatistics::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<IntegerStatistics> IntegerStatistics_default_instance_;

IntegerStatistics* IntegerStatistics::New(::google::protobuf::Arena* arena) const {
  IntegerStatistics* n = new IntegerStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IntegerStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.IntegerStatistics)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(IntegerStatistics, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<IntegerStatistics*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(minimum_, sum_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool IntegerStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.IntegerStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 minimum = 1;
      case 1: {
        if (tag == 8) {
          set_has_minimum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &minimum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_maximum;
        break;
      }

      // optional sint64 maximum = 2;
      case 2: {
        if (tag == 16) {
         parse_maximum:
          set_has_maximum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &maximum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sum;
        break;
      }

      // optional sint64 sum = 3;
      case 3: {
        if (tag == 24) {
         parse_sum:
          set_has_sum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &sum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.IntegerStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.IntegerStatistics)
  return false;
#undef DO_
}

void IntegerStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.IntegerStatistics)
  // optional sint64 minimum = 1;
  if (has_minimum()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->minimum(), output);
  }

  // optional sint64 maximum = 2;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->maximum(), output);
  }

  // optional sint64 sum = 3;
  if (has_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->sum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.IntegerStatistics)
}

::google::protobuf::uint8* IntegerStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.IntegerStatistics)
  // optional sint64 minimum = 1;
  if (has_minimum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->minimum(), target);
  }

  // optional sint64 maximum = 2;
  if (has_maximum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->maximum(), target);
  }

  // optional sint64 sum = 3;
  if (has_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->sum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.IntegerStatistics)
  return target;
}

size_t IntegerStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.IntegerStatistics)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional sint64 minimum = 1;
    if (has_minimum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->minimum());
    }

    // optional sint64 maximum = 2;
    if (has_maximum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->maximum());
    }

    // optional sint64 sum = 3;
    if (has_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->sum());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IntegerStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.IntegerStatistics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IntegerStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IntegerStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.IntegerStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.IntegerStatistics)
    UnsafeMergeFrom(*source);
  }
}

void IntegerStatistics::MergeFrom(const IntegerStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.IntegerStatistics)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void IntegerStatistics::UnsafeMergeFrom(const IntegerStatistics& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_minimum()) {
      set_minimum(from.minimum());
    }
    if (from.has_maximum()) {
      set_maximum(from.maximum());
    }
    if (from.has_sum()) {
      set_sum(from.sum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void IntegerStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.IntegerStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntegerStatistics::CopyFrom(const IntegerStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.IntegerStatistics)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool IntegerStatistics::IsInitialized() const {

  return true;
}

void IntegerStatistics::Swap(IntegerStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntegerStatistics::InternalSwap(IntegerStatistics* other) {
  std::swap(minimum_, other->minimum_);
  std::swap(maximum_, other->maximum_);
  std::swap(sum_, other->sum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IntegerStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IntegerStatistics_descriptor_;
  metadata.reflection = IntegerStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IntegerStatistics

// optional sint64 minimum = 1;
bool IntegerStatistics::has_minimum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void IntegerStatistics::set_has_minimum() {
  _has_bits_[0] |= 0x00000001u;
}
void IntegerStatistics::clear_has_minimum() {
  _has_bits_[0] &= ~0x00000001u;
}
void IntegerStatistics::clear_minimum() {
  minimum_ = GOOGLE_LONGLONG(0);
  clear_has_minimum();
}
::google::protobuf::int64 IntegerStatistics::minimum() const {
  // @@protoc_insertion_point(field_get:orc.proto.IntegerStatistics.minimum)
  return minimum_;
}
void IntegerStatistics::set_minimum(::google::protobuf::int64 value) {
  set_has_minimum();
  minimum_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.IntegerStatistics.minimum)
}

// optional sint64 maximum = 2;
bool IntegerStatistics::has_maximum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void IntegerStatistics::set_has_maximum() {
  _has_bits_[0] |= 0x00000002u;
}
void IntegerStatistics::clear_has_maximum() {
  _has_bits_[0] &= ~0x00000002u;
}
void IntegerStatistics::clear_maximum() {
  maximum_ = GOOGLE_LONGLONG(0);
  clear_has_maximum();
}
::google::protobuf::int64 IntegerStatistics::maximum() const {
  // @@protoc_insertion_point(field_get:orc.proto.IntegerStatistics.maximum)
  return maximum_;
}
void IntegerStatistics::set_maximum(::google::protobuf::int64 value) {
  set_has_maximum();
  maximum_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.IntegerStatistics.maximum)
}

// optional sint64 sum = 3;
bool IntegerStatistics::has_sum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void IntegerStatistics::set_has_sum() {
  _has_bits_[0] |= 0x00000004u;
}
void IntegerStatistics::clear_has_sum() {
  _has_bits_[0] &= ~0x00000004u;
}
void IntegerStatistics::clear_sum() {
  sum_ = GOOGLE_LONGLONG(0);
  clear_has_sum();
}
::google::protobuf::int64 IntegerStatistics::sum() const {
  // @@protoc_insertion_point(field_get:orc.proto.IntegerStatistics.sum)
  return sum_;
}
void IntegerStatistics::set_sum(::google::protobuf::int64 value) {
  set_has_sum();
  sum_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.IntegerStatistics.sum)
}

inline const IntegerStatistics* IntegerStatistics::internal_default_instance() {
  return &IntegerStatistics_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoubleStatistics::kMinimumFieldNumber;
const int DoubleStatistics::kMaximumFieldNumber;
const int DoubleStatistics::kSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoubleStatistics::DoubleStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.DoubleStatistics)
}

void DoubleStatistics::InitAsDefaultInstance() {
}

DoubleStatistics::DoubleStatistics(const DoubleStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.DoubleStatistics)
}

void DoubleStatistics::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&minimum_, 0, reinterpret_cast<char*>(&sum_) -
    reinterpret_cast<char*>(&minimum_) + sizeof(sum_));
}

DoubleStatistics::~DoubleStatistics() {
  // @@protoc_insertion_point(destructor:orc.proto.DoubleStatistics)
  SharedDtor();
}

void DoubleStatistics::SharedDtor() {
}

void DoubleStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DoubleStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DoubleStatistics_descriptor_;
}

const DoubleStatistics& DoubleStatistics::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DoubleStatistics> DoubleStatistics_default_instance_;

DoubleStatistics* DoubleStatistics::New(::google::protobuf::Arena* arena) const {
  DoubleStatistics* n = new DoubleStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DoubleStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.DoubleStatistics)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DoubleStatistics, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DoubleStatistics*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(minimum_, sum_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DoubleStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.DoubleStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double minimum = 1;
      case 1: {
        if (tag == 9) {
          set_has_minimum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &minimum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_maximum;
        break;
      }

      // optional double maximum = 2;
      case 2: {
        if (tag == 17) {
         parse_maximum:
          set_has_maximum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &maximum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_sum;
        break;
      }

      // optional double sum = 3;
      case 3: {
        if (tag == 25) {
         parse_sum:
          set_has_sum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.DoubleStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.DoubleStatistics)
  return false;
#undef DO_
}

void DoubleStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.DoubleStatistics)
  // optional double minimum = 1;
  if (has_minimum()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->minimum(), output);
  }

  // optional double maximum = 2;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->maximum(), output);
  }

  // optional double sum = 3;
  if (has_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->sum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.DoubleStatistics)
}

::google::protobuf::uint8* DoubleStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.DoubleStatistics)
  // optional double minimum = 1;
  if (has_minimum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->minimum(), target);
  }

  // optional double maximum = 2;
  if (has_maximum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->maximum(), target);
  }

  // optional double sum = 3;
  if (has_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->sum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.DoubleStatistics)
  return target;
}

size_t DoubleStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.DoubleStatistics)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional double minimum = 1;
    if (has_minimum()) {
      total_size += 1 + 8;
    }

    // optional double maximum = 2;
    if (has_maximum()) {
      total_size += 1 + 8;
    }

    // optional double sum = 3;
    if (has_sum()) {
      total_size += 1 + 8;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DoubleStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.DoubleStatistics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DoubleStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoubleStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.DoubleStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.DoubleStatistics)
    UnsafeMergeFrom(*source);
  }
}

void DoubleStatistics::MergeFrom(const DoubleStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.DoubleStatistics)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DoubleStatistics::UnsafeMergeFrom(const DoubleStatistics& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_minimum()) {
      set_minimum(from.minimum());
    }
    if (from.has_maximum()) {
      set_maximum(from.maximum());
    }
    if (from.has_sum()) {
      set_sum(from.sum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void DoubleStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.DoubleStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoubleStatistics::CopyFrom(const DoubleStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.DoubleStatistics)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DoubleStatistics::IsInitialized() const {

  return true;
}

void DoubleStatistics::Swap(DoubleStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoubleStatistics::InternalSwap(DoubleStatistics* other) {
  std::swap(minimum_, other->minimum_);
  std::swap(maximum_, other->maximum_);
  std::swap(sum_, other->sum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DoubleStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DoubleStatistics_descriptor_;
  metadata.reflection = DoubleStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DoubleStatistics

// optional double minimum = 1;
bool DoubleStatistics::has_minimum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DoubleStatistics::set_has_minimum() {
  _has_bits_[0] |= 0x00000001u;
}
void DoubleStatistics::clear_has_minimum() {
  _has_bits_[0] &= ~0x00000001u;
}
void DoubleStatistics::clear_minimum() {
  minimum_ = 0;
  clear_has_minimum();
}
double DoubleStatistics::minimum() const {
  // @@protoc_insertion_point(field_get:orc.proto.DoubleStatistics.minimum)
  return minimum_;
}
void DoubleStatistics::set_minimum(double value) {
  set_has_minimum();
  minimum_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.DoubleStatistics.minimum)
}

// optional double maximum = 2;
bool DoubleStatistics::has_maximum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DoubleStatistics::set_has_maximum() {
  _has_bits_[0] |= 0x00000002u;
}
void DoubleStatistics::clear_has_maximum() {
  _has_bits_[0] &= ~0x00000002u;
}
void DoubleStatistics::clear_maximum() {
  maximum_ = 0;
  clear_has_maximum();
}
double DoubleStatistics::maximum() const {
  // @@protoc_insertion_point(field_get:orc.proto.DoubleStatistics.maximum)
  return maximum_;
}
void DoubleStatistics::set_maximum(double value) {
  set_has_maximum();
  maximum_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.DoubleStatistics.maximum)
}

// optional double sum = 3;
bool DoubleStatistics::has_sum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DoubleStatistics::set_has_sum() {
  _has_bits_[0] |= 0x00000004u;
}
void DoubleStatistics::clear_has_sum() {
  _has_bits_[0] &= ~0x00000004u;
}
void DoubleStatistics::clear_sum() {
  sum_ = 0;
  clear_has_sum();
}
double DoubleStatistics::sum() const {
  // @@protoc_insertion_point(field_get:orc.proto.DoubleStatistics.sum)
  return sum_;
}
void DoubleStatistics::set_sum(double value) {
  set_has_sum();
  sum_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.DoubleStatistics.sum)
}

inline const DoubleStatistics* DoubleStatistics::internal_default_instance() {
  return &DoubleStatistics_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringStatistics::kMinimumFieldNumber;
const int StringStatistics::kMaximumFieldNumber;
const int StringStatistics::kSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringStatistics::StringStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.StringStatistics)
}

void StringStatistics::InitAsDefaultInstance() {
}

StringStatistics::StringStatistics(const StringStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.StringStatistics)
}

void StringStatistics::SharedCtor() {
  _cached_size_ = 0;
  minimum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maximum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sum_ = GOOGLE_LONGLONG(0);
}

StringStatistics::~StringStatistics() {
  // @@protoc_insertion_point(destructor:orc.proto.StringStatistics)
  SharedDtor();
}

void StringStatistics::SharedDtor() {
  minimum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maximum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StringStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StringStatistics_descriptor_;
}

const StringStatistics& StringStatistics::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<StringStatistics> StringStatistics_default_instance_;

StringStatistics* StringStatistics::New(::google::protobuf::Arena* arena) const {
  StringStatistics* n = new StringStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.StringStatistics)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_minimum()) {
      minimum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_maximum()) {
      maximum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    sum_ = GOOGLE_LONGLONG(0);
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StringStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.StringStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string minimum = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_minimum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->minimum().data(), this->minimum().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orc.proto.StringStatistics.minimum");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_maximum;
        break;
      }

      // optional string maximum = 2;
      case 2: {
        if (tag == 18) {
         parse_maximum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_maximum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->maximum().data(), this->maximum().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orc.proto.StringStatistics.maximum");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sum;
        break;
      }

      // optional sint64 sum = 3;
      case 3: {
        if (tag == 24) {
         parse_sum:
          set_has_sum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &sum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.StringStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.StringStatistics)
  return false;
#undef DO_
}

void StringStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.StringStatistics)
  // optional string minimum = 1;
  if (has_minimum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->minimum().data(), this->minimum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.StringStatistics.minimum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->minimum(), output);
  }

  // optional string maximum = 2;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->maximum().data(), this->maximum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.StringStatistics.maximum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->maximum(), output);
  }

  // optional sint64 sum = 3;
  if (has_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->sum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.StringStatistics)
}

::google::protobuf::uint8* StringStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.StringStatistics)
  // optional string minimum = 1;
  if (has_minimum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->minimum().data(), this->minimum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.StringStatistics.minimum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->minimum(), target);
  }

  // optional string maximum = 2;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->maximum().data(), this->maximum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.StringStatistics.maximum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->maximum(), target);
  }

  // optional sint64 sum = 3;
  if (has_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->sum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.StringStatistics)
  return target;
}

size_t StringStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.StringStatistics)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string minimum = 1;
    if (has_minimum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->minimum());
    }

    // optional string maximum = 2;
    if (has_maximum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->maximum());
    }

    // optional sint64 sum = 3;
    if (has_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->sum());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.StringStatistics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StringStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.StringStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.StringStatistics)
    UnsafeMergeFrom(*source);
  }
}

void StringStatistics::MergeFrom(const StringStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.StringStatistics)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void StringStatistics::UnsafeMergeFrom(const StringStatistics& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_minimum()) {
      set_has_minimum();
      minimum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.minimum_);
    }
    if (from.has_maximum()) {
      set_has_maximum();
      maximum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.maximum_);
    }
    if (from.has_sum()) {
      set_sum(from.sum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void StringStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.StringStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringStatistics::CopyFrom(const StringStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.StringStatistics)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool StringStatistics::IsInitialized() const {

  return true;
}

void StringStatistics::Swap(StringStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringStatistics::InternalSwap(StringStatistics* other) {
  minimum_.Swap(&other->minimum_);
  maximum_.Swap(&other->maximum_);
  std::swap(sum_, other->sum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StringStatistics_descriptor_;
  metadata.reflection = StringStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringStatistics

// optional string minimum = 1;
bool StringStatistics::has_minimum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StringStatistics::set_has_minimum() {
  _has_bits_[0] |= 0x00000001u;
}
void StringStatistics::clear_has_minimum() {
  _has_bits_[0] &= ~0x00000001u;
}
void StringStatistics::clear_minimum() {
  minimum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_minimum();
}
const ::std::string& StringStatistics::minimum() const {
  // @@protoc_insertion_point(field_get:orc.proto.StringStatistics.minimum)
  return minimum_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringStatistics::set_minimum(const ::std::string& value) {
  set_has_minimum();
  minimum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:orc.proto.StringStatistics.minimum)
}
void StringStatistics::set_minimum(const char* value) {
  set_has_minimum();
  minimum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:orc.proto.StringStatistics.minimum)
}
void StringStatistics::set_minimum(const char* value, size_t size) {
  set_has_minimum();
  minimum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:orc.proto.StringStatistics.minimum)
}
::std::string* StringStatistics::mutable_minimum() {
  set_has_minimum();
  // @@protoc_insertion_point(field_mutable:orc.proto.StringStatistics.minimum)
  return minimum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringStatistics::release_minimum() {
  // @@protoc_insertion_point(field_release:orc.proto.StringStatistics.minimum)
  clear_has_minimum();
  return minimum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringStatistics::set_allocated_minimum(::std::string* minimum) {
  if (minimum != NULL) {
    set_has_minimum();
  } else {
    clear_has_minimum();
  }
  minimum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), minimum);
  // @@protoc_insertion_point(field_set_allocated:orc.proto.StringStatistics.minimum)
}

// optional string maximum = 2;
bool StringStatistics::has_maximum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StringStatistics::set_has_maximum() {
  _has_bits_[0] |= 0x00000002u;
}
void StringStatistics::clear_has_maximum() {
  _has_bits_[0] &= ~0x00000002u;
}
void StringStatistics::clear_maximum() {
  maximum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_maximum();
}
const ::std::string& StringStatistics::maximum() const {
  // @@protoc_insertion_point(field_get:orc.proto.StringStatistics.maximum)
  return maximum_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringStatistics::set_maximum(const ::std::string& value) {
  set_has_maximum();
  maximum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:orc.proto.StringStatistics.maximum)
}
void StringStatistics::set_maximum(const char* value) {
  set_has_maximum();
  maximum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:orc.proto.StringStatistics.maximum)
}
void StringStatistics::set_maximum(const char* value, size_t size) {
  set_has_maximum();
  maximum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:orc.proto.StringStatistics.maximum)
}
::std::string* StringStatistics::mutable_maximum() {
  set_has_maximum();
  // @@protoc_insertion_point(field_mutable:orc.proto.StringStatistics.maximum)
  return maximum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringStatistics::release_maximum() {
  // @@protoc_insertion_point(field_release:orc.proto.StringStatistics.maximum)
  clear_has_maximum();
  return maximum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringStatistics::set_allocated_maximum(::std::string* maximum) {
  if (maximum != NULL) {
    set_has_maximum();
  } else {
    clear_has_maximum();
  }
  maximum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), maximum);
  // @@protoc_insertion_point(field_set_allocated:orc.proto.StringStatistics.maximum)
}

// optional sint64 sum = 3;
bool StringStatistics::has_sum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void StringStatistics::set_has_sum() {
  _has_bits_[0] |= 0x00000004u;
}
void StringStatistics::clear_has_sum() {
  _has_bits_[0] &= ~0x00000004u;
}
void StringStatistics::clear_sum() {
  sum_ = GOOGLE_LONGLONG(0);
  clear_has_sum();
}
::google::protobuf::int64 StringStatistics::sum() const {
  // @@protoc_insertion_point(field_get:orc.proto.StringStatistics.sum)
  return sum_;
}
void StringStatistics::set_sum(::google::protobuf::int64 value) {
  set_has_sum();
  sum_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.StringStatistics.sum)
}

inline const StringStatistics* StringStatistics::internal_default_instance() {
  return &StringStatistics_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BucketStatistics::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BucketStatistics::BucketStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.BucketStatistics)
}

void BucketStatistics::InitAsDefaultInstance() {
}

BucketStatistics::BucketStatistics(const BucketStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.BucketStatistics)
}

void BucketStatistics::SharedCtor() {
  _cached_size_ = 0;
}

BucketStatistics::~BucketStatistics() {
  // @@protoc_insertion_point(destructor:orc.proto.BucketStatistics)
  SharedDtor();
}

void BucketStatistics::SharedDtor() {
}

void BucketStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BucketStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BucketStatistics_descriptor_;
}

const BucketStatistics& BucketStatistics::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BucketStatistics> BucketStatistics_default_instance_;

BucketStatistics* BucketStatistics::New(::google::protobuf::Arena* arena) const {
  BucketStatistics* n = new BucketStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BucketStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.BucketStatistics)
  count_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BucketStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.BucketStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 count = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_count())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_count())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.BucketStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.BucketStatistics)
  return false;
#undef DO_
}

void BucketStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.BucketStatistics)
  // repeated uint64 count = 1 [packed = true];
  if (this->count_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_count_cached_byte_size_);
  }
  for (int i = 0; i < this->count_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->count(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.BucketStatistics)
}

::google::protobuf::uint8* BucketStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.BucketStatistics)
  // repeated uint64 count = 1 [packed = true];
  if (this->count_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _count_cached_byte_size_, target);
  }
  for (int i = 0; i < this->count_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->count(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.BucketStatistics)
  return target;
}

size_t BucketStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.BucketStatistics)
  size_t total_size = 0;

  // repeated uint64 count = 1 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->count_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->count(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _count_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BucketStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.BucketStatistics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BucketStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BucketStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.BucketStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.BucketStatistics)
    UnsafeMergeFrom(*source);
  }
}

void BucketStatistics::MergeFrom(const BucketStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.BucketStatistics)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BucketStatistics::UnsafeMergeFrom(const BucketStatistics& from) {
  GOOGLE_DCHECK(&from != this);
  count_.UnsafeMergeFrom(from.count_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void BucketStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.BucketStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BucketStatistics::CopyFrom(const BucketStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.BucketStatistics)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BucketStatistics::IsInitialized() const {

  return true;
}

void BucketStatistics::Swap(BucketStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BucketStatistics::InternalSwap(BucketStatistics* other) {
  count_.UnsafeArenaSwap(&other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BucketStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BucketStatistics_descriptor_;
  metadata.reflection = BucketStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BucketStatistics

// repeated uint64 count = 1 [packed = true];
int BucketStatistics::count_size() const {
  return count_.size();
}
void BucketStatistics::clear_count() {
  count_.Clear();
}
::google::protobuf::uint64 BucketStatistics::count(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.BucketStatistics.count)
  return count_.Get(index);
}
void BucketStatistics::set_count(int index, ::google::protobuf::uint64 value) {
  count_.Set(index, value);
  // @@protoc_insertion_point(field_set:orc.proto.BucketStatistics.count)
}
void BucketStatistics::add_count(::google::protobuf::uint64 value) {
  count_.Add(value);
  // @@protoc_insertion_point(field_add:orc.proto.BucketStatistics.count)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BucketStatistics::count() const {
  // @@protoc_insertion_point(field_list:orc.proto.BucketStatistics.count)
  return count_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BucketStatistics::mutable_count() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.BucketStatistics.count)
  return &count_;
}

inline const BucketStatistics* BucketStatistics::internal_default_instance() {
  return &BucketStatistics_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecimalStatistics::kMinimumFieldNumber;
const int DecimalStatistics::kMaximumFieldNumber;
const int DecimalStatistics::kSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecimalStatistics::DecimalStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.DecimalStatistics)
}

void DecimalStatistics::InitAsDefaultInstance() {
}

DecimalStatistics::DecimalStatistics(const DecimalStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.DecimalStatistics)
}

void DecimalStatistics::SharedCtor() {
  _cached_size_ = 0;
  minimum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maximum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DecimalStatistics::~DecimalStatistics() {
  // @@protoc_insertion_point(destructor:orc.proto.DecimalStatistics)
  SharedDtor();
}

void DecimalStatistics::SharedDtor() {
  minimum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maximum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DecimalStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DecimalStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DecimalStatistics_descriptor_;
}

const DecimalStatistics& DecimalStatistics::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DecimalStatistics> DecimalStatistics_default_instance_;

DecimalStatistics* DecimalStatistics::New(::google::protobuf::Arena* arena) const {
  DecimalStatistics* n = new DecimalStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DecimalStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.DecimalStatistics)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_minimum()) {
      minimum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_maximum()) {
      maximum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sum()) {
      sum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DecimalStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.DecimalStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string minimum = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_minimum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->minimum().data(), this->minimum().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orc.proto.DecimalStatistics.minimum");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_maximum;
        break;
      }

      // optional string maximum = 2;
      case 2: {
        if (tag == 18) {
         parse_maximum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_maximum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->maximum().data(), this->maximum().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orc.proto.DecimalStatistics.maximum");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sum;
        break;
      }

      // optional string sum = 3;
      case 3: {
        if (tag == 26) {
         parse_sum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sum().data(), this->sum().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orc.proto.DecimalStatistics.sum");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.DecimalStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.DecimalStatistics)
  return false;
#undef DO_
}

void DecimalStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.DecimalStatistics)
  // optional string minimum = 1;
  if (has_minimum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->minimum().data(), this->minimum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.DecimalStatistics.minimum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->minimum(), output);
  }

  // optional string maximum = 2;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->maximum().data(), this->maximum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.DecimalStatistics.maximum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->maximum(), output);
  }

  // optional string sum = 3;
  if (has_sum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sum().data(), this->sum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.DecimalStatistics.sum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.DecimalStatistics)
}

::google::protobuf::uint8* DecimalStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.DecimalStatistics)
  // optional string minimum = 1;
  if (has_minimum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->minimum().data(), this->minimum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.DecimalStatistics.minimum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->minimum(), target);
  }

  // optional string maximum = 2;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->maximum().data(), this->maximum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.DecimalStatistics.maximum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->maximum(), target);
  }

  // optional string sum = 3;
  if (has_sum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sum().data(), this->sum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.DecimalStatistics.sum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.DecimalStatistics)
  return target;
}

size_t DecimalStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.DecimalStatistics)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string minimum = 1;
    if (has_minimum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->minimum());
    }

    // optional string maximum = 2;
    if (has_maximum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->maximum());
    }

    // optional string sum = 3;
    if (has_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sum());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DecimalStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.DecimalStatistics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DecimalStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DecimalStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.DecimalStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.DecimalStatistics)
    UnsafeMergeFrom(*source);
  }
}

void DecimalStatistics::MergeFrom(const DecimalStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.DecimalStatistics)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DecimalStatistics::UnsafeMergeFrom(const DecimalStatistics& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_minimum()) {
      set_has_minimum();
      minimum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.minimum_);
    }
    if (from.has_maximum()) {
      set_has_maximum();
      maximum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.maximum_);
    }
    if (from.has_sum()) {
      set_has_sum();
      sum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sum_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void DecimalStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.DecimalStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecimalStatistics::CopyFrom(const DecimalStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.DecimalStatistics)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DecimalStatistics::IsInitialized() const {

  return true;
}

void DecimalStatistics::Swap(DecimalStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecimalStatistics::InternalSwap(DecimalStatistics* other) {
  minimum_.Swap(&other->minimum_);
  maximum_.Swap(&other->maximum_);
  sum_.Swap(&other->sum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DecimalStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DecimalStatistics_descriptor_;
  metadata.reflection = DecimalStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DecimalStatistics

// optional string minimum = 1;
bool DecimalStatistics::has_minimum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DecimalStatistics::set_has_minimum() {
  _has_bits_[0] |= 0x00000001u;
}
void DecimalStatistics::clear_has_minimum() {
  _has_bits_[0] &= ~0x00000001u;
}
void DecimalStatistics::clear_minimum() {
  minimum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_minimum();
}
const ::std::string& DecimalStatistics::minimum() const {
  // @@protoc_insertion_point(field_get:orc.proto.DecimalStatistics.minimum)
  return minimum_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DecimalStatistics::set_minimum(const ::std::string& value) {
  set_has_minimum();
  minimum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:orc.proto.DecimalStatistics.minimum)
}
void DecimalStatistics::set_minimum(const char* value) {
  set_has_minimum();
  minimum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:orc.proto.DecimalStatistics.minimum)
}
void DecimalStatistics::set_minimum(const char* value, size_t size) {
  set_has_minimum();
  minimum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:orc.proto.DecimalStatistics.minimum)
}
::std::string* DecimalStatistics::mutable_minimum() {
  set_has_minimum();
  // @@protoc_insertion_point(field_mutable:orc.proto.DecimalStatistics.minimum)
  return minimum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DecimalStatistics::release_minimum() {
  // @@protoc_insertion_point(field_release:orc.proto.DecimalStatistics.minimum)
  clear_has_minimum();
  return minimum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DecimalStatistics::set_allocated_minimum(::std::string* minimum) {
  if (minimum != NULL) {
    set_has_minimum();
  } else {
    clear_has_minimum();
  }
  minimum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), minimum);
  // @@protoc_insertion_point(field_set_allocated:orc.proto.DecimalStatistics.minimum)
}

// optional string maximum = 2;
bool DecimalStatistics::has_maximum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DecimalStatistics::set_has_maximum() {
  _has_bits_[0] |= 0x00000002u;
}
void DecimalStatistics::clear_has_maximum() {
  _has_bits_[0] &= ~0x00000002u;
}
void DecimalStatistics::clear_maximum() {
  maximum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_maximum();
}
const ::std::string& DecimalStatistics::maximum() const {
  // @@protoc_insertion_point(field_get:orc.proto.DecimalStatistics.maximum)
  return maximum_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DecimalStatistics::set_maximum(const ::std::string& value) {
  set_has_maximum();
  maximum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:orc.proto.DecimalStatistics.maximum)
}
void DecimalStatistics::set_maximum(const char* value) {
  set_has_maximum();
  maximum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:orc.proto.DecimalStatistics.maximum)
}
void DecimalStatistics::set_maximum(const char* value, size_t size) {
  set_has_maximum();
  maximum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:orc.proto.DecimalStatistics.maximum)
}
::std::string* DecimalStatistics::mutable_maximum() {
  set_has_maximum();
  // @@protoc_insertion_point(field_mutable:orc.proto.DecimalStatistics.maximum)
  return maximum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DecimalStatistics::release_maximum() {
  // @@protoc_insertion_point(field_release:orc.proto.DecimalStatistics.maximum)
  clear_has_maximum();
  return maximum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DecimalStatistics::set_allocated_maximum(::std::string* maximum) {
  if (maximum != NULL) {
    set_has_maximum();
  } else {
    clear_has_maximum();
  }
  maximum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), maximum);
  // @@protoc_insertion_point(field_set_allocated:orc.proto.DecimalStatistics.maximum)
}

// optional string sum = 3;
bool DecimalStatistics::has_sum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DecimalStatistics::set_has_sum() {
  _has_bits_[0] |= 0x00000004u;
}
void DecimalStatistics::clear_has_sum() {
  _has_bits_[0] &= ~0x00000004u;
}
void DecimalStatistics::clear_sum() {
  sum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sum();
}
const ::std::string& DecimalStatistics::sum() const {
  // @@protoc_insertion_point(field_get:orc.proto.DecimalStatistics.sum)
  return sum_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DecimalStatistics::set_sum(const ::std::string& value) {
  set_has_sum();
  sum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:orc.proto.DecimalStatistics.sum)
}
void DecimalStatistics::set_sum(const char* value) {
  set_has_sum();
  sum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:orc.proto.DecimalStatistics.sum)
}
void DecimalStatistics::set_sum(const char* value, size_t size) {
  set_has_sum();
  sum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:orc.proto.DecimalStatistics.sum)
}
::std::string* DecimalStatistics::mutable_sum() {
  set_has_sum();
  // @@protoc_insertion_point(field_mutable:orc.proto.DecimalStatistics.sum)
  return sum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DecimalStatistics::release_sum() {
  // @@protoc_insertion_point(field_release:orc.proto.DecimalStatistics.sum)
  clear_has_sum();
  return sum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DecimalStatistics::set_allocated_sum(::std::string* sum) {
  if (sum != NULL) {
    set_has_sum();
  } else {
    clear_has_sum();
  }
  sum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sum);
  // @@protoc_insertion_point(field_set_allocated:orc.proto.DecimalStatistics.sum)
}

inline const DecimalStatistics* DecimalStatistics::internal_default_instance() {
  return &DecimalStatistics_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DateStatistics::kMinimumFieldNumber;
const int DateStatistics::kMaximumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DateStatistics::DateStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.DateStatistics)
}

void DateStatistics::InitAsDefaultInstance() {
}

DateStatistics::DateStatistics(const DateStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.DateStatistics)
}

void DateStatistics::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&minimum_, 0, reinterpret_cast<char*>(&maximum_) -
    reinterpret_cast<char*>(&minimum_) + sizeof(maximum_));
}

DateStatistics::~DateStatistics() {
  // @@protoc_insertion_point(destructor:orc.proto.DateStatistics)
  SharedDtor();
}

void DateStatistics::SharedDtor() {
}

void DateStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DateStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DateStatistics_descriptor_;
}

const DateStatistics& DateStatistics::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<DateStatistics> DateStatistics_default_instance_;

DateStatistics* DateStatistics::New(::google::protobuf::Arena* arena) const {
  DateStatistics* n = new DateStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DateStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.DateStatistics)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DateStatistics, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DateStatistics*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(minimum_, maximum_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DateStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.DateStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 minimum = 1;
      case 1: {
        if (tag == 8) {
          set_has_minimum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &minimum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_maximum;
        break;
      }

      // optional sint32 maximum = 2;
      case 2: {
        if (tag == 16) {
         parse_maximum:
          set_has_maximum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &maximum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.DateStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.DateStatistics)
  return false;
#undef DO_
}

void DateStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.DateStatistics)
  // optional sint32 minimum = 1;
  if (has_minimum()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->minimum(), output);
  }

  // optional sint32 maximum = 2;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->maximum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.DateStatistics)
}

::google::protobuf::uint8* DateStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.DateStatistics)
  // optional sint32 minimum = 1;
  if (has_minimum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->minimum(), target);
  }

  // optional sint32 maximum = 2;
  if (has_maximum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->maximum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.DateStatistics)
  return target;
}

size_t DateStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.DateStatistics)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 minimum = 1;
    if (has_minimum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->minimum());
    }

    // optional sint32 maximum = 2;
    if (has_maximum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->maximum());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DateStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.DateStatistics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DateStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DateStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.DateStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.DateStatistics)
    UnsafeMergeFrom(*source);
  }
}

void DateStatistics::MergeFrom(const DateStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.DateStatistics)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void DateStatistics::UnsafeMergeFrom(const DateStatistics& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_minimum()) {
      set_minimum(from.minimum());
    }
    if (from.has_maximum()) {
      set_maximum(from.maximum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void DateStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.DateStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DateStatistics::CopyFrom(const DateStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.DateStatistics)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool DateStatistics::IsInitialized() const {

  return true;
}

void DateStatistics::Swap(DateStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DateStatistics::InternalSwap(DateStatistics* other) {
  std::swap(minimum_, other->minimum_);
  std::swap(maximum_, other->maximum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DateStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DateStatistics_descriptor_;
  metadata.reflection = DateStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DateStatistics

// optional sint32 minimum = 1;
bool DateStatistics::has_minimum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DateStatistics::set_has_minimum() {
  _has_bits_[0] |= 0x00000001u;
}
void DateStatistics::clear_has_minimum() {
  _has_bits_[0] &= ~0x00000001u;
}
void DateStatistics::clear_minimum() {
  minimum_ = 0;
  clear_has_minimum();
}
::google::protobuf::int32 DateStatistics::minimum() const {
  // @@protoc_insertion_point(field_get:orc.proto.DateStatistics.minimum)
  return minimum_;
}
void DateStatistics::set_minimum(::google::protobuf::int32 value) {
  set_has_minimum();
  minimum_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.DateStatistics.minimum)
}

// optional sint32 maximum = 2;
bool DateStatistics::has_maximum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DateStatistics::set_has_maximum() {
  _has_bits_[0] |= 0x00000002u;
}
void DateStatistics::clear_has_maximum() {
  _has_bits_[0] &= ~0x00000002u;
}
void DateStatistics::clear_maximum() {
  maximum_ = 0;
  clear_has_maximum();
}
::google::protobuf::int32 DateStatistics::maximum() const {
  // @@protoc_insertion_point(field_get:orc.proto.DateStatistics.maximum)
  return maximum_;
}
void DateStatistics::set_maximum(::google::protobuf::int32 value) {
  set_has_maximum();
  maximum_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.DateStatistics.maximum)
}

inline const DateStatistics* DateStatistics::internal_default_instance() {
  return &DateStatistics_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimestampStatistics::kMinimumFieldNumber;
const int TimestampStatistics::kMaximumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimestampStatistics::TimestampStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.TimestampStatistics)
}

void TimestampStatistics::InitAsDefaultInstance() {
}

TimestampStatistics::TimestampStatistics(const TimestampStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.TimestampStatistics)
}

void TimestampStatistics::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&minimum_, 0, reinterpret_cast<char*>(&maximum_) -
    reinterpret_cast<char*>(&minimum_) + sizeof(maximum_));
}

TimestampStatistics::~TimestampStatistics() {
  // @@protoc_insertion_point(destructor:orc.proto.TimestampStatistics)
  SharedDtor();
}

void TimestampStatistics::SharedDtor() {
}

void TimestampStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimestampStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TimestampStatistics_descriptor_;
}

const TimestampStatistics& TimestampStatistics::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TimestampStatistics> TimestampStatistics_default_instance_;

TimestampStatistics* TimestampStatistics::New(::google::protobuf::Arena* arena) const {
  TimestampStatistics* n = new TimestampStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimestampStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.TimestampStatistics)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TimestampStatistics, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TimestampStatistics*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(minimum_, maximum_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TimestampStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.TimestampStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 minimum = 1;
      case 1: {
        if (tag == 8) {
          set_has_minimum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &minimum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_maximum;
        break;
      }

      // optional sint64 maximum = 2;
      case 2: {
        if (tag == 16) {
         parse_maximum:
          set_has_maximum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &maximum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.TimestampStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.TimestampStatistics)
  return false;
#undef DO_
}

void TimestampStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.TimestampStatistics)
  // optional sint64 minimum = 1;
  if (has_minimum()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->minimum(), output);
  }

  // optional sint64 maximum = 2;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->maximum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.TimestampStatistics)
}

::google::protobuf::uint8* TimestampStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.TimestampStatistics)
  // optional sint64 minimum = 1;
  if (has_minimum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->minimum(), target);
  }

  // optional sint64 maximum = 2;
  if (has_maximum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->maximum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.TimestampStatistics)
  return target;
}

size_t TimestampStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.TimestampStatistics)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional sint64 minimum = 1;
    if (has_minimum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->minimum());
    }

    // optional sint64 maximum = 2;
    if (has_maximum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->maximum());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimestampStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.TimestampStatistics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TimestampStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimestampStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.TimestampStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.TimestampStatistics)
    UnsafeMergeFrom(*source);
  }
}

void TimestampStatistics::MergeFrom(const TimestampStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.TimestampStatistics)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TimestampStatistics::UnsafeMergeFrom(const TimestampStatistics& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_minimum()) {
      set_minimum(from.minimum());
    }
    if (from.has_maximum()) {
      set_maximum(from.maximum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TimestampStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.TimestampStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimestampStatistics::CopyFrom(const TimestampStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.TimestampStatistics)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TimestampStatistics::IsInitialized() const {

  return true;
}

void TimestampStatistics::Swap(TimestampStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimestampStatistics::InternalSwap(TimestampStatistics* other) {
  std::swap(minimum_, other->minimum_);
  std::swap(maximum_, other->maximum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimestampStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TimestampStatistics_descriptor_;
  metadata.reflection = TimestampStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimestampStatistics

// optional sint64 minimum = 1;
bool TimestampStatistics::has_minimum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TimestampStatistics::set_has_minimum() {
  _has_bits_[0] |= 0x00000001u;
}
void TimestampStatistics::clear_has_minimum() {
  _has_bits_[0] &= ~0x00000001u;
}
void TimestampStatistics::clear_minimum() {
  minimum_ = GOOGLE_LONGLONG(0);
  clear_has_minimum();
}
::google::protobuf::int64 TimestampStatistics::minimum() const {
  // @@protoc_insertion_point(field_get:orc.proto.TimestampStatistics.minimum)
  return minimum_;
}
void TimestampStatistics::set_minimum(::google::protobuf::int64 value) {
  set_has_minimum();
  minimum_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.TimestampStatistics.minimum)
}

// optional sint64 maximum = 2;
bool TimestampStatistics::has_maximum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TimestampStatistics::set_has_maximum() {
  _has_bits_[0] |= 0x00000002u;
}
void TimestampStatistics::clear_has_maximum() {
  _has_bits_[0] &= ~0x00000002u;
}
void TimestampStatistics::clear_maximum() {
  maximum_ = GOOGLE_LONGLONG(0);
  clear_has_maximum();
}
::google::protobuf::int64 TimestampStatistics::maximum() const {
  // @@protoc_insertion_point(field_get:orc.proto.TimestampStatistics.maximum)
  return maximum_;
}
void TimestampStatistics::set_maximum(::google::protobuf::int64 value) {
  set_has_maximum();
  maximum_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.TimestampStatistics.maximum)
}

inline const TimestampStatistics* TimestampStatistics::internal_default_instance() {
  return &TimestampStatistics_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BinaryStatistics::kSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BinaryStatistics::BinaryStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.BinaryStatistics)
}

void BinaryStatistics::InitAsDefaultInstance() {
}

BinaryStatistics::BinaryStatistics(const BinaryStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.BinaryStatistics)
}

void BinaryStatistics::SharedCtor() {
  _cached_size_ = 0;
  sum_ = GOOGLE_LONGLONG(0);
}

BinaryStatistics::~BinaryStatistics() {
  // @@protoc_insertion_point(destructor:orc.proto.BinaryStatistics)
  SharedDtor();
}

void BinaryStatistics::SharedDtor() {
}

void BinaryStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BinaryStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BinaryStatistics_descriptor_;
}

const BinaryStatistics& BinaryStatistics::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BinaryStatistics> BinaryStatistics_default_instance_;

BinaryStatistics* BinaryStatistics::New(::google::protobuf::Arena* arena) const {
  BinaryStatistics* n = new BinaryStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BinaryStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.BinaryStatistics)
  sum_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BinaryStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.BinaryStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 sum = 1;
      case 1: {
        if (tag == 8) {
          set_has_sum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &sum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.BinaryStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.BinaryStatistics)
  return false;
#undef DO_
}

void BinaryStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.BinaryStatistics)
  // optional sint64 sum = 1;
  if (has_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->sum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.BinaryStatistics)
}

::google::protobuf::uint8* BinaryStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.BinaryStatistics)
  // optional sint64 sum = 1;
  if (has_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->sum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.BinaryStatistics)
  return target;
}

size_t BinaryStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.BinaryStatistics)
  size_t total_size = 0;

  // optional sint64 sum = 1;
  if (has_sum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->sum());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BinaryStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.BinaryStatistics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BinaryStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BinaryStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.BinaryStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.BinaryStatistics)
    UnsafeMergeFrom(*source);
  }
}

void BinaryStatistics::MergeFrom(const BinaryStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.BinaryStatistics)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BinaryStatistics::UnsafeMergeFrom(const BinaryStatistics& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sum()) {
      set_sum(from.sum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void BinaryStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.BinaryStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BinaryStatistics::CopyFrom(const BinaryStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.BinaryStatistics)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BinaryStatistics::IsInitialized() const {

  return true;
}

void BinaryStatistics::Swap(BinaryStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BinaryStatistics::InternalSwap(BinaryStatistics* other) {
  std::swap(sum_, other->sum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BinaryStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BinaryStatistics_descriptor_;
  metadata.reflection = BinaryStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BinaryStatistics

// optional sint64 sum = 1;
bool BinaryStatistics::has_sum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BinaryStatistics::set_has_sum() {
  _has_bits_[0] |= 0x00000001u;
}
void BinaryStatistics::clear_has_sum() {
  _has_bits_[0] &= ~0x00000001u;
}
void BinaryStatistics::clear_sum() {
  sum_ = GOOGLE_LONGLONG(0);
  clear_has_sum();
}
::google::protobuf::int64 BinaryStatistics::sum() const {
  // @@protoc_insertion_point(field_get:orc.proto.BinaryStatistics.sum)
  return sum_;
}
void BinaryStatistics::set_sum(::google::protobuf::int64 value) {
  set_has_sum();
  sum_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.BinaryStatistics.sum)
}

inline const BinaryStatistics* BinaryStatistics::internal_default_instance() {
  return &BinaryStatistics_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColumnStatistics::kNumberOfValuesFieldNumber;
const int ColumnStatistics::kIntStatisticsFieldNumber;
const int ColumnStatistics::kDoubleStatisticsFieldNumber;
const int ColumnStatistics::kStringStatisticsFieldNumber;
const int ColumnStatistics::kBucketStatisticsFieldNumber;
const int ColumnStatistics::kDecimalStatisticsFieldNumber;
const int ColumnStatistics::kDateStatisticsFieldNumber;
const int ColumnStatistics::kBinaryStatisticsFieldNumber;
const int ColumnStatistics::kTimestampStatisticsFieldNumber;
const int ColumnStatistics::kHasNullFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColumnStatistics::ColumnStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.ColumnStatistics)
}

void ColumnStatistics::InitAsDefaultInstance() {
  intstatistics_ = const_cast< ::orc::proto::IntegerStatistics*>(
      ::orc::proto::IntegerStatistics::internal_default_instance());
  doublestatistics_ = const_cast< ::orc::proto::DoubleStatistics*>(
      ::orc::proto::DoubleStatistics::internal_default_instance());
  stringstatistics_ = const_cast< ::orc::proto::StringStatistics*>(
      ::orc::proto::StringStatistics::internal_default_instance());
  bucketstatistics_ = const_cast< ::orc::proto::BucketStatistics*>(
      ::orc::proto::BucketStatistics::internal_default_instance());
  decimalstatistics_ = const_cast< ::orc::proto::DecimalStatistics*>(
      ::orc::proto::DecimalStatistics::internal_default_instance());
  datestatistics_ = const_cast< ::orc::proto::DateStatistics*>(
      ::orc::proto::DateStatistics::internal_default_instance());
  binarystatistics_ = const_cast< ::orc::proto::BinaryStatistics*>(
      ::orc::proto::BinaryStatistics::internal_default_instance());
  timestampstatistics_ = const_cast< ::orc::proto::TimestampStatistics*>(
      ::orc::proto::TimestampStatistics::internal_default_instance());
}

ColumnStatistics::ColumnStatistics(const ColumnStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.ColumnStatistics)
}

void ColumnStatistics::SharedCtor() {
  _cached_size_ = 0;
  intstatistics_ = NULL;
  doublestatistics_ = NULL;
  stringstatistics_ = NULL;
  bucketstatistics_ = NULL;
  decimalstatistics_ = NULL;
  datestatistics_ = NULL;
  binarystatistics_ = NULL;
  timestampstatistics_ = NULL;
  ::memset(&numberofvalues_, 0, reinterpret_cast<char*>(&hasnull_) -
    reinterpret_cast<char*>(&numberofvalues_) + sizeof(hasnull_));
}

ColumnStatistics::~ColumnStatistics() {
  // @@protoc_insertion_point(destructor:orc.proto.ColumnStatistics)
  SharedDtor();
}

void ColumnStatistics::SharedDtor() {
  if (this != &ColumnStatistics_default_instance_.get()) {
    delete intstatistics_;
    delete doublestatistics_;
    delete stringstatistics_;
    delete bucketstatistics_;
    delete decimalstatistics_;
    delete datestatistics_;
    delete binarystatistics_;
    delete timestampstatistics_;
  }
}

void ColumnStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ColumnStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ColumnStatistics_descriptor_;
}

const ColumnStatistics& ColumnStatistics::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ColumnStatistics> ColumnStatistics_default_instance_;

ColumnStatistics* ColumnStatistics::New(::google::protobuf::Arena* arena) const {
  ColumnStatistics* n = new ColumnStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ColumnStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.ColumnStatistics)
  if (_has_bits_[0 / 32] & 255u) {
    numberofvalues_ = GOOGLE_ULONGLONG(0);
    if (has_intstatistics()) {
      if (intstatistics_ != NULL) intstatistics_->::orc::proto::IntegerStatistics::Clear();
    }
    if (has_doublestatistics()) {
      if (doublestatistics_ != NULL) doublestatistics_->::orc::proto::DoubleStatistics::Clear();
    }
    if (has_stringstatistics()) {
      if (stringstatistics_ != NULL) stringstatistics_->::orc::proto::StringStatistics::Clear();
    }
    if (has_bucketstatistics()) {
      if (bucketstatistics_ != NULL) bucketstatistics_->::orc::proto::BucketStatistics::Clear();
    }
    if (has_decimalstatistics()) {
      if (decimalstatistics_ != NULL) decimalstatistics_->::orc::proto::DecimalStatistics::Clear();
    }
    if (has_datestatistics()) {
      if (datestatistics_ != NULL) datestatistics_->::orc::proto::DateStatistics::Clear();
    }
    if (has_binarystatistics()) {
      if (binarystatistics_ != NULL) binarystatistics_->::orc::proto::BinaryStatistics::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_timestampstatistics()) {
      if (timestampstatistics_ != NULL) timestampstatistics_->::orc::proto::TimestampStatistics::Clear();
    }
    hasnull_ = false;
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ColumnStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.ColumnStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 numberOfValues = 1;
      case 1: {
        if (tag == 8) {
          set_has_numberofvalues();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numberofvalues_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_intStatistics;
        break;
      }

      // optional .orc.proto.IntegerStatistics intStatistics = 2;
      case 2: {
        if (tag == 18) {
         parse_intStatistics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_doubleStatistics;
        break;
      }

      // optional .orc.proto.DoubleStatistics doubleStatistics = 3;
      case 3: {
        if (tag == 26) {
         parse_doubleStatistics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_doublestatistics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_stringStatistics;
        break;
      }

      // optional .orc.proto.StringStatistics stringStatistics = 4;
      case 4: {
        if (tag == 34) {
         parse_stringStatistics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stringstatistics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_bucketStatistics;
        break;
      }

      // optional .orc.proto.BucketStatistics bucketStatistics = 5;
      case 5: {
        if (tag == 42) {
         parse_bucketStatistics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bucketstatistics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_decimalStatistics;
        break;
      }

      // optional .orc.proto.DecimalStatistics decimalStatistics = 6;
      case 6: {
        if (tag == 50) {
         parse_decimalStatistics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decimalstatistics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_dateStatistics;
        break;
      }

      // optional .orc.proto.DateStatistics dateStatistics = 7;
      case 7: {
        if (tag == 58) {
         parse_dateStatistics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_datestatistics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_binaryStatistics;
        break;
      }

      // optional .orc.proto.BinaryStatistics binaryStatistics = 8;
      case 8: {
        if (tag == 66) {
         parse_binaryStatistics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_binarystatistics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_timestampStatistics;
        break;
      }

      // optional .orc.proto.TimestampStatistics timestampStatistics = 9;
      case 9: {
        if (tag == 74) {
         parse_timestampStatistics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timestampstatistics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_hasNull;
        break;
      }

      // optional bool hasNull = 10;
      case 10: {
        if (tag == 80) {
         parse_hasNull:
          set_has_hasnull();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasnull_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.ColumnStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.ColumnStatistics)
  return false;
#undef DO_
}

void ColumnStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.ColumnStatistics)
  // optional uint64 numberOfValues = 1;
  if (has_numberofvalues()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->numberofvalues(), output);
  }

  // optional .orc.proto.IntegerStatistics intStatistics = 2;
  if (has_intstatistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->intstatistics_, output);
  }

  // optional .orc.proto.DoubleStatistics doubleStatistics = 3;
  if (has_doublestatistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->doublestatistics_, output);
  }

  // optional .orc.proto.StringStatistics stringStatistics = 4;
  if (has_stringstatistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->stringstatistics_, output);
  }

  // optional .orc.proto.BucketStatistics bucketStatistics = 5;
  if (has_bucketstatistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->bucketstatistics_, output);
  }

  // optional .orc.proto.DecimalStatistics decimalStatistics = 6;
  if (has_decimalstatistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->decimalstatistics_, output);
  }

  // optional .orc.proto.DateStatistics dateStatistics = 7;
  if (has_datestatistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->datestatistics_, output);
  }

  // optional .orc.proto.BinaryStatistics binaryStatistics = 8;
  if (has_binarystatistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->binarystatistics_, output);
  }

  // optional .orc.proto.TimestampStatistics timestampStatistics = 9;
  if (has_timestampstatistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->timestampstatistics_, output);
  }

  // optional bool hasNull = 10;
  if (has_hasnull()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->hasnull(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.ColumnStatistics)
}

::google::protobuf::uint8* ColumnStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.ColumnStatistics)
  // optional uint64 numberOfValues = 1;
  if (has_numberofvalues()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->numberofvalues(), target);
  }

  // optional .orc.proto.IntegerStatistics intStatistics = 2;
  if (has_intstatistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->intstatistics_, false, target);
  }

  // optional .orc.proto.DoubleStatistics doubleStatistics = 3;
  if (has_doublestatistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->doublestatistics_, false, target);
  }

  // optional .orc.proto.StringStatistics stringStatistics = 4;
  if (has_stringstatistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->stringstatistics_, false, target);
  }

  // optional .orc.proto.BucketStatistics bucketStatistics = 5;
  if (has_bucketstatistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->bucketstatistics_, false, target);
  }

  // optional .orc.proto.DecimalStatistics decimalStatistics = 6;
  if (has_decimalstatistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->decimalstatistics_, false, target);
  }

  // optional .orc.proto.DateStatistics dateStatistics = 7;
  if (has_datestatistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->datestatistics_, false, target);
  }

  // optional .orc.proto.BinaryStatistics binaryStatistics = 8;
  if (has_binarystatistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->binarystatistics_, false, target);
  }

  // optional .orc.proto.TimestampStatistics timestampStatistics = 9;
  if (has_timestampstatistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->timestampstatistics_, false, target);
  }

  // optional bool hasNull = 10;
  if (has_hasnull()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->hasnull(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.ColumnStatistics)
  return target;
}

size_t ColumnStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.ColumnStatistics)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint64 numberOfValues = 1;
    if (has_numberofvalues()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->numberofvalues());
    }

    // optional .orc.proto.IntegerStatistics intStatistics = 2;
    if (has_intstatistics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->intstatistics_);
    }

    // optional .orc.proto.DoubleStatistics doubleStatistics = 3;
    if (has_doublestatistics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->doublestatistics_);
    }

    // optional .orc.proto.StringStatistics stringStatistics = 4;
    if (has_stringstatistics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->stringstatistics_);
    }

    // optional .orc.proto.BucketStatistics bucketStatistics = 5;
    if (has_bucketstatistics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bucketstatistics_);
    }

    // optional .orc.proto.DecimalStatistics decimalStatistics = 6;
    if (has_decimalstatistics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->decimalstatistics_);
    }

    // optional .orc.proto.DateStatistics dateStatistics = 7;
    if (has_datestatistics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->datestatistics_);
    }

    // optional .orc.proto.BinaryStatistics binaryStatistics = 8;
    if (has_binarystatistics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->binarystatistics_);
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional .orc.proto.TimestampStatistics timestampStatistics = 9;
    if (has_timestampstatistics()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->timestampstatistics_);
    }

    // optional bool hasNull = 10;
    if (has_hasnull()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ColumnStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.ColumnStatistics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ColumnStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ColumnStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.ColumnStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.ColumnStatistics)
    UnsafeMergeFrom(*source);
  }
}

void ColumnStatistics::MergeFrom(const ColumnStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.ColumnStatistics)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ColumnStatistics::UnsafeMergeFrom(const ColumnStatistics& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_numberofvalues()) {
      set_numberofvalues(from.numberofvalues());
    }
    if (from.has_intstatistics()) {
      mutable_intstatistics()->::orc::proto::IntegerStatistics::MergeFrom(from.intstatistics());
    }
    if (from.has_doublestatistics()) {
      mutable_doublestatistics()->::orc::proto::DoubleStatistics::MergeFrom(from.doublestatistics());
    }
    if (from.has_stringstatistics()) {
      mutable_stringstatistics()->::orc::proto::StringStatistics::MergeFrom(from.stringstatistics());
    }
    if (from.has_bucketstatistics()) {
      mutable_bucketstatistics()->::orc::proto::BucketStatistics::MergeFrom(from.bucketstatistics());
    }
    if (from.has_decimalstatistics()) {
      mutable_decimalstatistics()->::orc::proto::DecimalStatistics::MergeFrom(from.decimalstatistics());
    }
    if (from.has_datestatistics()) {
      mutable_datestatistics()->::orc::proto::DateStatistics::MergeFrom(from.datestatistics());
    }
    if (from.has_binarystatistics()) {
      mutable_binarystatistics()->::orc::proto::BinaryStatistics::MergeFrom(from.binarystatistics());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_timestampstatistics()) {
      mutable_timestampstatistics()->::orc::proto::TimestampStatistics::MergeFrom(from.timestampstatistics());
    }
    if (from.has_hasnull()) {
      set_hasnull(from.hasnull());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ColumnStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.ColumnStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColumnStatistics::CopyFrom(const ColumnStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.ColumnStatistics)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ColumnStatistics::IsInitialized() const {

  return true;
}

void ColumnStatistics::Swap(ColumnStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ColumnStatistics::InternalSwap(ColumnStatistics* other) {
  std::swap(numberofvalues_, other->numberofvalues_);
  std::swap(intstatistics_, other->intstatistics_);
  std::swap(doublestatistics_, other->doublestatistics_);
  std::swap(stringstatistics_, other->stringstatistics_);
  std::swap(bucketstatistics_, other->bucketstatistics_);
  std::swap(decimalstatistics_, other->decimalstatistics_);
  std::swap(datestatistics_, other->datestatistics_);
  std::swap(binarystatistics_, other->binarystatistics_);
  std::swap(timestampstatistics_, other->timestampstatistics_);
  std::swap(hasnull_, other->hasnull_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ColumnStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ColumnStatistics_descriptor_;
  metadata.reflection = ColumnStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ColumnStatistics

// optional uint64 numberOfValues = 1;
bool ColumnStatistics::has_numberofvalues() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ColumnStatistics::set_has_numberofvalues() {
  _has_bits_[0] |= 0x00000001u;
}
void ColumnStatistics::clear_has_numberofvalues() {
  _has_bits_[0] &= ~0x00000001u;
}
void ColumnStatistics::clear_numberofvalues() {
  numberofvalues_ = GOOGLE_ULONGLONG(0);
  clear_has_numberofvalues();
}
::google::protobuf::uint64 ColumnStatistics::numberofvalues() const {
  // @@protoc_insertion_point(field_get:orc.proto.ColumnStatistics.numberOfValues)
  return numberofvalues_;
}
void ColumnStatistics::set_numberofvalues(::google::protobuf::uint64 value) {
  set_has_numberofvalues();
  numberofvalues_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.ColumnStatistics.numberOfValues)
}

// optional .orc.proto.IntegerStatistics intStatistics = 2;
bool ColumnStatistics::has_intstatistics() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ColumnStatistics::set_has_intstatistics() {
  _has_bits_[0] |= 0x00000002u;
}
void ColumnStatistics::clear_has_intstatistics() {
  _has_bits_[0] &= ~0x00000002u;
}
void ColumnStatistics::clear_intstatistics() {
  if (intstatistics_ != NULL) intstatistics_->::orc::proto::IntegerStatistics::Clear();
  clear_has_intstatistics();
}
const ::orc::proto::IntegerStatistics& ColumnStatistics::intstatistics() const {
  // @@protoc_insertion_point(field_get:orc.proto.ColumnStatistics.intStatistics)
  return intstatistics_ != NULL ? *intstatistics_
                         : *::orc::proto::IntegerStatistics::internal_default_instance();
}
::orc::proto::IntegerStatistics* ColumnStatistics::mutable_intstatistics() {
  set_has_intstatistics();
  if (intstatistics_ == NULL) {
    intstatistics_ = new ::orc::proto::IntegerStatistics;
  }
  // @@protoc_insertion_point(field_mutable:orc.proto.ColumnStatistics.intStatistics)
  return intstatistics_;
}
::orc::proto::IntegerStatistics* ColumnStatistics::release_intstatistics() {
  // @@protoc_insertion_point(field_release:orc.proto.ColumnStatistics.intStatistics)
  clear_has_intstatistics();
  ::orc::proto::IntegerStatistics* temp = intstatistics_;
  intstatistics_ = NULL;
  return temp;
}
void ColumnStatistics::set_allocated_intstatistics(::orc::proto::IntegerStatistics* intstatistics) {
  delete intstatistics_;
  intstatistics_ = intstatistics;
  if (intstatistics) {
    set_has_intstatistics();
  } else {
    clear_has_intstatistics();
  }
  // @@protoc_insertion_point(field_set_allocated:orc.proto.ColumnStatistics.intStatistics)
}

// optional .orc.proto.DoubleStatistics doubleStatistics = 3;
bool ColumnStatistics::has_doublestatistics() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ColumnStatistics::set_has_doublestatistics() {
  _has_bits_[0] |= 0x00000004u;
}
void ColumnStatistics::clear_has_doublestatistics() {
  _has_bits_[0] &= ~0x00000004u;
}
void ColumnStatistics::clear_doublestatistics() {
  if (doublestatistics_ != NULL) doublestatistics_->::orc::proto::DoubleStatistics::Clear();
  clear_has_doublestatistics();
}
const ::orc::proto::DoubleStatistics& ColumnStatistics::doublestatistics() const {
  // @@protoc_insertion_point(field_get:orc.proto.ColumnStatistics.doubleStatistics)
  return doublestatistics_ != NULL ? *doublestatistics_
                         : *::orc::proto::DoubleStatistics::internal_default_instance();
}
::orc::proto::DoubleStatistics* ColumnStatistics::mutable_doublestatistics() {
  set_has_doublestatistics();
  if (doublestatistics_ == NULL) {
    doublestatistics_ = new ::orc::proto::DoubleStatistics;
  }
  // @@protoc_insertion_point(field_mutable:orc.proto.ColumnStatistics.doubleStatistics)
  return doublestatistics_;
}
::orc::proto::DoubleStatistics* ColumnStatistics::release_doublestatistics() {
  // @@protoc_insertion_point(field_release:orc.proto.ColumnStatistics.doubleStatistics)
  clear_has_doublestatistics();
  ::orc::proto::DoubleStatistics* temp = doublestatistics_;
  doublestatistics_ = NULL;
  return temp;
}
void ColumnStatistics::set_allocated_doublestatistics(::orc::proto::DoubleStatistics* doublestatistics) {
  delete doublestatistics_;
  doublestatistics_ = doublestatistics;
  if (doublestatistics) {
    set_has_doublestatistics();
  } else {
    clear_has_doublestatistics();
  }
  // @@protoc_insertion_point(field_set_allocated:orc.proto.ColumnStatistics.doubleStatistics)
}

// optional .orc.proto.StringStatistics stringStatistics = 4;
bool ColumnStatistics::has_stringstatistics() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ColumnStatistics::set_has_stringstatistics() {
  _has_bits_[0] |= 0x00000008u;
}
void ColumnStatistics::clear_has_stringstatistics() {
  _has_bits_[0] &= ~0x00000008u;
}
void ColumnStatistics::clear_stringstatistics() {
  if (stringstatistics_ != NULL) stringstatistics_->::orc::proto::StringStatistics::Clear();
  clear_has_stringstatistics();
}
const ::orc::proto::StringStatistics& ColumnStatistics::stringstatistics() const {
  // @@protoc_insertion_point(field_get:orc.proto.ColumnStatistics.stringStatistics)
  return stringstatistics_ != NULL ? *stringstatistics_
                         : *::orc::proto::StringStatistics::internal_default_instance();
}
::orc::proto::StringStatistics* ColumnStatistics::mutable_stringstatistics() {
  set_has_stringstatistics();
  if (stringstatistics_ == NULL) {
    stringstatistics_ = new ::orc::proto::StringStatistics;
  }
  // @@protoc_insertion_point(field_mutable:orc.proto.ColumnStatistics.stringStatistics)
  return stringstatistics_;
}
::orc::proto::StringStatistics* ColumnStatistics::release_stringstatistics() {
  // @@protoc_insertion_point(field_release:orc.proto.ColumnStatistics.stringStatistics)
  clear_has_stringstatistics();
  ::orc::proto::StringStatistics* temp = stringstatistics_;
  stringstatistics_ = NULL;
  return temp;
}
void ColumnStatistics::set_allocated_stringstatistics(::orc::proto::StringStatistics* stringstatistics) {
  delete stringstatistics_;
  stringstatistics_ = stringstatistics;
  if (stringstatistics) {
    set_has_stringstatistics();
  } else {
    clear_has_stringstatistics();
  }
  // @@protoc_insertion_point(field_set_allocated:orc.proto.ColumnStatistics.stringStatistics)
}

// optional .orc.proto.BucketStatistics bucketStatistics = 5;
bool ColumnStatistics::has_bucketstatistics() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ColumnStatistics::set_has_bucketstatistics() {
  _has_bits_[0] |= 0x00000010u;
}
void ColumnStatistics::clear_has_bucketstatistics() {
  _has_bits_[0] &= ~0x00000010u;
}
void ColumnStatistics::clear_bucketstatistics() {
  if (bucketstatistics_ != NULL) bucketstatistics_->::orc::proto::BucketStatistics::Clear();
  clear_has_bucketstatistics();
}
const ::orc::proto::BucketStatistics& ColumnStatistics::bucketstatistics() const {
  // @@protoc_insertion_point(field_get:orc.proto.ColumnStatistics.bucketStatistics)
  return bucketstatistics_ != NULL ? *bucketstatistics_
                         : *::orc::proto::BucketStatistics::internal_default_instance();
}
::orc::proto::BucketStatistics* ColumnStatistics::mutable_bucketstatistics() {
  set_has_bucketstatistics();
  if (bucketstatistics_ == NULL) {
    bucketstatistics_ = new ::orc::proto::BucketStatistics;
  }
  // @@protoc_insertion_point(field_mutable:orc.proto.ColumnStatistics.bucketStatistics)
  return bucketstatistics_;
}
::orc::proto::BucketStatistics* ColumnStatistics::release_bucketstatistics() {
  // @@protoc_insertion_point(field_release:orc.proto.ColumnStatistics.bucketStatistics)
  clear_has_bucketstatistics();
  ::orc::proto::BucketStatistics* temp = bucketstatistics_;
  bucketstatistics_ = NULL;
  return temp;
}
void ColumnStatistics::set_allocated_bucketstatistics(::orc::proto::BucketStatistics* bucketstatistics) {
  delete bucketstatistics_;
  bucketstatistics_ = bucketstatistics;
  if (bucketstatistics) {
    set_has_bucketstatistics();
  } else {
    clear_has_bucketstatistics();
  }
  // @@protoc_insertion_point(field_set_allocated:orc.proto.ColumnStatistics.bucketStatistics)
}

// optional .orc.proto.DecimalStatistics decimalStatistics = 6;
bool ColumnStatistics::has_decimalstatistics() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ColumnStatistics::set_has_decimalstatistics() {
  _has_bits_[0] |= 0x00000020u;
}
void ColumnStatistics::clear_has_decimalstatistics() {
  _has_bits_[0] &= ~0x00000020u;
}
void ColumnStatistics::clear_decimalstatistics() {
  if (decimalstatistics_ != NULL) decimalstatistics_->::orc::proto::DecimalStatistics::Clear();
  clear_has_decimalstatistics();
}
const ::orc::proto::DecimalStatistics& ColumnStatistics::decimalstatistics() const {
  // @@protoc_insertion_point(field_get:orc.proto.ColumnStatistics.decimalStatistics)
  return decimalstatistics_ != NULL ? *decimalstatistics_
                         : *::orc::proto::DecimalStatistics::internal_default_instance();
}
::orc::proto::DecimalStatistics* ColumnStatistics::mutable_decimalstatistics() {
  set_has_decimalstatistics();
  if (decimalstatistics_ == NULL) {
    decimalstatistics_ = new ::orc::proto::DecimalStatistics;
  }
  // @@protoc_insertion_point(field_mutable:orc.proto.ColumnStatistics.decimalStatistics)
  return decimalstatistics_;
}
::orc::proto::DecimalStatistics* ColumnStatistics::release_decimalstatistics() {
  // @@protoc_insertion_point(field_release:orc.proto.ColumnStatistics.decimalStatistics)
  clear_has_decimalstatistics();
  ::orc::proto::DecimalStatistics* temp = decimalstatistics_;
  decimalstatistics_ = NULL;
  return temp;
}
void ColumnStatistics::set_allocated_decimalstatistics(::orc::proto::DecimalStatistics* decimalstatistics) {
  delete decimalstatistics_;
  decimalstatistics_ = decimalstatistics;
  if (decimalstatistics) {
    set_has_decimalstatistics();
  } else {
    clear_has_decimalstatistics();
  }
  // @@protoc_insertion_point(field_set_allocated:orc.proto.ColumnStatistics.decimalStatistics)
}

// optional .orc.proto.DateStatistics dateStatistics = 7;
bool ColumnStatistics::has_datestatistics() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ColumnStatistics::set_has_datestatistics() {
  _has_bits_[0] |= 0x00000040u;
}
void ColumnStatistics::clear_has_datestatistics() {
  _has_bits_[0] &= ~0x00000040u;
}
void ColumnStatistics::clear_datestatistics() {
  if (datestatistics_ != NULL) datestatistics_->::orc::proto::DateStatistics::Clear();
  clear_has_datestatistics();
}
const ::orc::proto::DateStatistics& ColumnStatistics::datestatistics() const {
  // @@protoc_insertion_point(field_get:orc.proto.ColumnStatistics.dateStatistics)
  return datestatistics_ != NULL ? *datestatistics_
                         : *::orc::proto::DateStatistics::internal_default_instance();
}
::orc::proto::DateStatistics* ColumnStatistics::mutable_datestatistics() {
  set_has_datestatistics();
  if (datestatistics_ == NULL) {
    datestatistics_ = new ::orc::proto::DateStatistics;
  }
  // @@protoc_insertion_point(field_mutable:orc.proto.ColumnStatistics.dateStatistics)
  return datestatistics_;
}
::orc::proto::DateStatistics* ColumnStatistics::release_datestatistics() {
  // @@protoc_insertion_point(field_release:orc.proto.ColumnStatistics.dateStatistics)
  clear_has_datestatistics();
  ::orc::proto::DateStatistics* temp = datestatistics_;
  datestatistics_ = NULL;
  return temp;
}
void ColumnStatistics::set_allocated_datestatistics(::orc::proto::DateStatistics* datestatistics) {
  delete datestatistics_;
  datestatistics_ = datestatistics;
  if (datestatistics) {
    set_has_datestatistics();
  } else {
    clear_has_datestatistics();
  }
  // @@protoc_insertion_point(field_set_allocated:orc.proto.ColumnStatistics.dateStatistics)
}

// optional .orc.proto.BinaryStatistics binaryStatistics = 8;
bool ColumnStatistics::has_binarystatistics() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ColumnStatistics::set_has_binarystatistics() {
  _has_bits_[0] |= 0x00000080u;
}
void ColumnStatistics::clear_has_binarystatistics() {
  _has_bits_[0] &= ~0x00000080u;
}
void ColumnStatistics::clear_binarystatistics() {
  if (binarystatistics_ != NULL) binarystatistics_->::orc::proto::BinaryStatistics::Clear();
  clear_has_binarystatistics();
}
const ::orc::proto::BinaryStatistics& ColumnStatistics::binarystatistics() const {
  // @@protoc_insertion_point(field_get:orc.proto.ColumnStatistics.binaryStatistics)
  return binarystatistics_ != NULL ? *binarystatistics_
                         : *::orc::proto::BinaryStatistics::internal_default_instance();
}
::orc::proto::BinaryStatistics* ColumnStatistics::mutable_binarystatistics() {
  set_has_binarystatistics();
  if (binarystatistics_ == NULL) {
    binarystatistics_ = new ::orc::proto::BinaryStatistics;
  }
  // @@protoc_insertion_point(field_mutable:orc.proto.ColumnStatistics.binaryStatistics)
  return binarystatistics_;
}
::orc::proto::BinaryStatistics* ColumnStatistics::release_binarystatistics() {
  // @@protoc_insertion_point(field_release:orc.proto.ColumnStatistics.binaryStatistics)
  clear_has_binarystatistics();
  ::orc::proto::BinaryStatistics* temp = binarystatistics_;
  binarystatistics_ = NULL;
  return temp;
}
void ColumnStatistics::set_allocated_binarystatistics(::orc::proto::BinaryStatistics* binarystatistics) {
  delete binarystatistics_;
  binarystatistics_ = binarystatistics;
  if (binarystatistics) {
    set_has_binarystatistics();
  } else {
    clear_has_binarystatistics();
  }
  // @@protoc_insertion_point(field_set_allocated:orc.proto.ColumnStatistics.binaryStatistics)
}

// optional .orc.proto.TimestampStatistics timestampStatistics = 9;
bool ColumnStatistics::has_timestampstatistics() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ColumnStatistics::set_has_timestampstatistics() {
  _has_bits_[0] |= 0x00000100u;
}
void ColumnStatistics::clear_has_timestampstatistics() {
  _has_bits_[0] &= ~0x00000100u;
}
void ColumnStatistics::clear_timestampstatistics() {
  if (timestampstatistics_ != NULL) timestampstatistics_->::orc::proto::TimestampStatistics::Clear();
  clear_has_timestampstatistics();
}
const ::orc::proto::TimestampStatistics& ColumnStatistics::timestampstatistics() const {
  // @@protoc_insertion_point(field_get:orc.proto.ColumnStatistics.timestampStatistics)
  return timestampstatistics_ != NULL ? *timestampstatistics_
                         : *::orc::proto::TimestampStatistics::internal_default_instance();
}
::orc::proto::TimestampStatistics* ColumnStatistics::mutable_timestampstatistics() {
  set_has_timestampstatistics();
  if (timestampstatistics_ == NULL) {
    timestampstatistics_ = new ::orc::proto::TimestampStatistics;
  }
  // @@protoc_insertion_point(field_mutable:orc.proto.ColumnStatistics.timestampStatistics)
  return timestampstatistics_;
}
::orc::proto::TimestampStatistics* ColumnStatistics::release_timestampstatistics() {
  // @@protoc_insertion_point(field_release:orc.proto.ColumnStatistics.timestampStatistics)
  clear_has_timestampstatistics();
  ::orc::proto::TimestampStatistics* temp = timestampstatistics_;
  timestampstatistics_ = NULL;
  return temp;
}
void ColumnStatistics::set_allocated_timestampstatistics(::orc::proto::TimestampStatistics* timestampstatistics) {
  delete timestampstatistics_;
  timestampstatistics_ = timestampstatistics;
  if (timestampstatistics) {
    set_has_timestampstatistics();
  } else {
    clear_has_timestampstatistics();
  }
  // @@protoc_insertion_point(field_set_allocated:orc.proto.ColumnStatistics.timestampStatistics)
}

// optional bool hasNull = 10;
bool ColumnStatistics::has_hasnull() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ColumnStatistics::set_has_hasnull() {
  _has_bits_[0] |= 0x00000200u;
}
void ColumnStatistics::clear_has_hasnull() {
  _has_bits_[0] &= ~0x00000200u;
}
void ColumnStatistics::clear_hasnull() {
  hasnull_ = false;
  clear_has_hasnull();
}
bool ColumnStatistics::hasnull() const {
  // @@protoc_insertion_point(field_get:orc.proto.ColumnStatistics.hasNull)
  return hasnull_;
}
void ColumnStatistics::set_hasnull(bool value) {
  set_has_hasnull();
  hasnull_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.ColumnStatistics.hasNull)
}

inline const ColumnStatistics* ColumnStatistics::internal_default_instance() {
  return &ColumnStatistics_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RowIndexEntry::kPositionsFieldNumber;
const int RowIndexEntry::kStatisticsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RowIndexEntry::RowIndexEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.RowIndexEntry)
}

void RowIndexEntry::InitAsDefaultInstance() {
  statistics_ = const_cast< ::orc::proto::ColumnStatistics*>(
      ::orc::proto::ColumnStatistics::internal_default_instance());
}

RowIndexEntry::RowIndexEntry(const RowIndexEntry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.RowIndexEntry)
}

void RowIndexEntry::SharedCtor() {
  _cached_size_ = 0;
  statistics_ = NULL;
}

RowIndexEntry::~RowIndexEntry() {
  // @@protoc_insertion_point(destructor:orc.proto.RowIndexEntry)
  SharedDtor();
}

void RowIndexEntry::SharedDtor() {
  if (this != &RowIndexEntry_default_instance_.get()) {
    delete statistics_;
  }
}

void RowIndexEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowIndexEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RowIndexEntry_descriptor_;
}

const RowIndexEntry& RowIndexEntry::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RowIndexEntry> RowIndexEntry_default_instance_;

RowIndexEntry* RowIndexEntry::New(::google::protobuf::Arena* arena) const {
  RowIndexEntry* n = new RowIndexEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RowIndexEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.RowIndexEntry)
  if (has_statistics()) {
    if (statistics_ != NULL) statistics_->::orc::proto::ColumnStatistics::Clear();
  }
  positions_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RowIndexEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.RowIndexEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 positions = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_positions())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_positions())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_statistics;
        break;
      }

      // optional .orc.proto.ColumnStatistics statistics = 2;
      case 2: {
        if (tag == 18) {
         parse_statistics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_statistics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.RowIndexEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.RowIndexEntry)
  return false;
#undef DO_
}

void RowIndexEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.RowIndexEntry)
  // repeated uint64 positions = 1 [packed = true];
  if (this->positions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_positions_cached_byte_size_);
  }
  for (int i = 0; i < this->positions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->positions(i), output);
  }

  // optional .orc.proto.ColumnStatistics statistics = 2;
  if (has_statistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->statistics_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.RowIndexEntry)
}

::google::protobuf::uint8* RowIndexEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.RowIndexEntry)
  // repeated uint64 positions = 1 [packed = true];
  if (this->positions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _positions_cached_byte_size_, target);
  }
  for (int i = 0; i < this->positions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->positions(i), target);
  }

  // optional .orc.proto.ColumnStatistics statistics = 2;
  if (has_statistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->statistics_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.RowIndexEntry)
  return target;
}

size_t RowIndexEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.RowIndexEntry)
  size_t total_size = 0;

  // optional .orc.proto.ColumnStatistics statistics = 2;
  if (has_statistics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->statistics_);
  }

  // repeated uint64 positions = 1 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->positions_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->positions(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _positions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowIndexEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.RowIndexEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RowIndexEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RowIndexEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.RowIndexEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.RowIndexEntry)
    UnsafeMergeFrom(*source);
  }
}

void RowIndexEntry::MergeFrom(const RowIndexEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.RowIndexEntry)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RowIndexEntry::UnsafeMergeFrom(const RowIndexEntry& from) {
  GOOGLE_DCHECK(&from != this);
  positions_.UnsafeMergeFrom(from.positions_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_statistics()) {
      mutable_statistics()->::orc::proto::ColumnStatistics::MergeFrom(from.statistics());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RowIndexEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.RowIndexEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowIndexEntry::CopyFrom(const RowIndexEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.RowIndexEntry)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RowIndexEntry::IsInitialized() const {

  return true;
}

void RowIndexEntry::Swap(RowIndexEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RowIndexEntry::InternalSwap(RowIndexEntry* other) {
  positions_.UnsafeArenaSwap(&other->positions_);
  std::swap(statistics_, other->statistics_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RowIndexEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RowIndexEntry_descriptor_;
  metadata.reflection = RowIndexEntry_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RowIndexEntry

// repeated uint64 positions = 1 [packed = true];
int RowIndexEntry::positions_size() const {
  return positions_.size();
}
void RowIndexEntry::clear_positions() {
  positions_.Clear();
}
::google::protobuf::uint64 RowIndexEntry::positions(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.RowIndexEntry.positions)
  return positions_.Get(index);
}
void RowIndexEntry::set_positions(int index, ::google::protobuf::uint64 value) {
  positions_.Set(index, value);
  // @@protoc_insertion_point(field_set:orc.proto.RowIndexEntry.positions)
}
void RowIndexEntry::add_positions(::google::protobuf::uint64 value) {
  positions_.Add(value);
  // @@protoc_insertion_point(field_add:orc.proto.RowIndexEntry.positions)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
RowIndexEntry::positions() const {
  // @@protoc_insertion_point(field_list:orc.proto.RowIndexEntry.positions)
  return positions_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
RowIndexEntry::mutable_positions() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.RowIndexEntry.positions)
  return &positions_;
}

// optional .orc.proto.ColumnStatistics statistics = 2;
bool RowIndexEntry::has_statistics() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RowIndexEntry::set_has_statistics() {
  _has_bits_[0] |= 0x00000002u;
}
void RowIndexEntry::clear_has_statistics() {
  _has_bits_[0] &= ~0x00000002u;
}
void RowIndexEntry::clear_statistics() {
  if (statistics_ != NULL) statistics_->::orc::proto::ColumnStatistics::Clear();
  clear_has_statistics();
}
const ::orc::proto::ColumnStatistics& RowIndexEntry::statistics() const {
  // @@protoc_insertion_point(field_get:orc.proto.RowIndexEntry.statistics)
  return statistics_ != NULL ? *statistics_
                         : *::orc::proto::ColumnStatistics::internal_default_instance();
}
::orc::proto::ColumnStatistics* RowIndexEntry::mutable_statistics() {
  set_has_statistics();
  if (statistics_ == NULL) {
    statistics_ = new ::orc::proto::ColumnStatistics;
  }
  // @@protoc_insertion_point(field_mutable:orc.proto.RowIndexEntry.statistics)
  return statistics_;
}
::orc::proto::ColumnStatistics* RowIndexEntry::release_statistics() {
  // @@protoc_insertion_point(field_release:orc.proto.RowIndexEntry.statistics)
  clear_has_statistics();
  ::orc::proto::ColumnStatistics* temp = statistics_;
  statistics_ = NULL;
  return temp;
}
void RowIndexEntry::set_allocated_statistics(::orc::proto::ColumnStatistics* statistics) {
  delete statistics_;
  statistics_ = statistics;
  if (statistics) {
    set_has_statistics();
  } else {
    clear_has_statistics();
  }
  // @@protoc_insertion_point(field_set_allocated:orc.proto.RowIndexEntry.statistics)
}

inline const RowIndexEntry* RowIndexEntry::internal_default_instance() {
  return &RowIndexEntry_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RowIndex::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RowIndex::RowIndex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.RowIndex)
}

void RowIndex::InitAsDefaultInstance() {
}

RowIndex::RowIndex(const RowIndex& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.RowIndex)
}

void RowIndex::SharedCtor() {
  _cached_size_ = 0;
}

RowIndex::~RowIndex() {
  // @@protoc_insertion_point(destructor:orc.proto.RowIndex)
  SharedDtor();
}

void RowIndex::SharedDtor() {
}

void RowIndex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RowIndex::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RowIndex_descriptor_;
}

const RowIndex& RowIndex::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RowIndex> RowIndex_default_instance_;

RowIndex* RowIndex::New(::google::protobuf::Arena* arena) const {
  RowIndex* n = new RowIndex;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RowIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.RowIndex)
  entry_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RowIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.RowIndex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .orc.proto.RowIndexEntry entry = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_entry:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entry()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_entry;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.RowIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.RowIndex)
  return false;
#undef DO_
}

void RowIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.RowIndex)
  // repeated .orc.proto.RowIndexEntry entry = 1;
  for (unsigned int i = 0, n = this->entry_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entry(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.RowIndex)
}

::google::protobuf::uint8* RowIndex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.RowIndex)
  // repeated .orc.proto.RowIndexEntry entry = 1;
  for (unsigned int i = 0, n = this->entry_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entry(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.RowIndex)
  return target;
}

size_t RowIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.RowIndex)
  size_t total_size = 0;

  // repeated .orc.proto.RowIndexEntry entry = 1;
  {
    unsigned int count = this->entry_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entry(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RowIndex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.RowIndex)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RowIndex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RowIndex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.RowIndex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.RowIndex)
    UnsafeMergeFrom(*source);
  }
}

void RowIndex::MergeFrom(const RowIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.RowIndex)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RowIndex::UnsafeMergeFrom(const RowIndex& from) {
  GOOGLE_DCHECK(&from != this);
  entry_.MergeFrom(from.entry_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RowIndex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.RowIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RowIndex::CopyFrom(const RowIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.RowIndex)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RowIndex::IsInitialized() const {

  return true;
}

void RowIndex::Swap(RowIndex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RowIndex::InternalSwap(RowIndex* other) {
  entry_.UnsafeArenaSwap(&other->entry_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RowIndex::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RowIndex_descriptor_;
  metadata.reflection = RowIndex_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RowIndex

// repeated .orc.proto.RowIndexEntry entry = 1;
int RowIndex::entry_size() const {
  return entry_.size();
}
void RowIndex::clear_entry() {
  entry_.Clear();
}
const ::orc::proto::RowIndexEntry& RowIndex::entry(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.RowIndex.entry)
  return entry_.Get(index);
}
::orc::proto::RowIndexEntry* RowIndex::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:orc.proto.RowIndex.entry)
  return entry_.Mutable(index);
}
::orc::proto::RowIndexEntry* RowIndex::add_entry() {
  // @@protoc_insertion_point(field_add:orc.proto.RowIndex.entry)
  return entry_.Add();
}
::google::protobuf::RepeatedPtrField< ::orc::proto::RowIndexEntry >*
RowIndex::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.RowIndex.entry)
  return &entry_;
}
const ::google::protobuf::RepeatedPtrField< ::orc::proto::RowIndexEntry >&
RowIndex::entry() const {
  // @@protoc_insertion_point(field_list:orc.proto.RowIndex.entry)
  return entry_;
}

inline const RowIndex* RowIndex::internal_default_instance() {
  return &RowIndex_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BloomFilter::kNumHashFunctionsFieldNumber;
const int BloomFilter::kBitsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BloomFilter::BloomFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.BloomFilter)
}

void BloomFilter::InitAsDefaultInstance() {
}

BloomFilter::BloomFilter(const BloomFilter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.BloomFilter)
}

void BloomFilter::SharedCtor() {
  _cached_size_ = 0;
  numhashfunctions_ = 0u;
}

BloomFilter::~BloomFilter() {
  // @@protoc_insertion_point(destructor:orc.proto.BloomFilter)
  SharedDtor();
}

void BloomFilter::SharedDtor() {
}

void BloomFilter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BloomFilter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BloomFilter_descriptor_;
}

const BloomFilter& BloomFilter::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BloomFilter> BloomFilter_default_instance_;

BloomFilter* BloomFilter::New(::google::protobuf::Arena* arena) const {
  BloomFilter* n = new BloomFilter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BloomFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.BloomFilter)
  numhashfunctions_ = 0u;
  bitset_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BloomFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.BloomFilter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 numHashFunctions = 1;
      case 1: {
        if (tag == 8) {
          set_has_numhashfunctions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numhashfunctions_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_bitset;
        break;
      }

      // repeated fixed64 bitset = 2;
      case 2: {
        if (tag == 17) {
         parse_bitset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 17, input, this->mutable_bitset())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_bitset())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_bitset;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.BloomFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.BloomFilter)
  return false;
#undef DO_
}

void BloomFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.BloomFilter)
  // optional uint32 numHashFunctions = 1;
  if (has_numhashfunctions()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->numhashfunctions(), output);
  }

  // repeated fixed64 bitset = 2;
  for (int i = 0; i < this->bitset_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      2, this->bitset(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.BloomFilter)
}

::google::protobuf::uint8* BloomFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.BloomFilter)
  // optional uint32 numHashFunctions = 1;
  if (has_numhashfunctions()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->numhashfunctions(), target);
  }

  // repeated fixed64 bitset = 2;
  for (int i = 0; i < this->bitset_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64ToArray(2, this->bitset(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.BloomFilter)
  return target;
}

size_t BloomFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.BloomFilter)
  size_t total_size = 0;

  // optional uint32 numHashFunctions = 1;
  if (has_numhashfunctions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numhashfunctions());
  }

  // repeated fixed64 bitset = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->bitset_size();
    data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->bitset_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BloomFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.BloomFilter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BloomFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BloomFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.BloomFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.BloomFilter)
    UnsafeMergeFrom(*source);
  }
}

void BloomFilter::MergeFrom(const BloomFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.BloomFilter)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BloomFilter::UnsafeMergeFrom(const BloomFilter& from) {
  GOOGLE_DCHECK(&from != this);
  bitset_.UnsafeMergeFrom(from.bitset_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_numhashfunctions()) {
      set_numhashfunctions(from.numhashfunctions());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void BloomFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.BloomFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BloomFilter::CopyFrom(const BloomFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.BloomFilter)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BloomFilter::IsInitialized() const {

  return true;
}

void BloomFilter::Swap(BloomFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BloomFilter::InternalSwap(BloomFilter* other) {
  std::swap(numhashfunctions_, other->numhashfunctions_);
  bitset_.UnsafeArenaSwap(&other->bitset_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BloomFilter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BloomFilter_descriptor_;
  metadata.reflection = BloomFilter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BloomFilter

// optional uint32 numHashFunctions = 1;
bool BloomFilter::has_numhashfunctions() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BloomFilter::set_has_numhashfunctions() {
  _has_bits_[0] |= 0x00000001u;
}
void BloomFilter::clear_has_numhashfunctions() {
  _has_bits_[0] &= ~0x00000001u;
}
void BloomFilter::clear_numhashfunctions() {
  numhashfunctions_ = 0u;
  clear_has_numhashfunctions();
}
::google::protobuf::uint32 BloomFilter::numhashfunctions() const {
  // @@protoc_insertion_point(field_get:orc.proto.BloomFilter.numHashFunctions)
  return numhashfunctions_;
}
void BloomFilter::set_numhashfunctions(::google::protobuf::uint32 value) {
  set_has_numhashfunctions();
  numhashfunctions_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.BloomFilter.numHashFunctions)
}

// repeated fixed64 bitset = 2;
int BloomFilter::bitset_size() const {
  return bitset_.size();
}
void BloomFilter::clear_bitset() {
  bitset_.Clear();
}
::google::protobuf::uint64 BloomFilter::bitset(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.BloomFilter.bitset)
  return bitset_.Get(index);
}
void BloomFilter::set_bitset(int index, ::google::protobuf::uint64 value) {
  bitset_.Set(index, value);
  // @@protoc_insertion_point(field_set:orc.proto.BloomFilter.bitset)
}
void BloomFilter::add_bitset(::google::protobuf::uint64 value) {
  bitset_.Add(value);
  // @@protoc_insertion_point(field_add:orc.proto.BloomFilter.bitset)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BloomFilter::bitset() const {
  // @@protoc_insertion_point(field_list:orc.proto.BloomFilter.bitset)
  return bitset_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BloomFilter::mutable_bitset() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.BloomFilter.bitset)
  return &bitset_;
}

inline const BloomFilter* BloomFilter::internal_default_instance() {
  return &BloomFilter_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BloomFilterIndex::kBloomFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BloomFilterIndex::BloomFilterIndex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.BloomFilterIndex)
}

void BloomFilterIndex::InitAsDefaultInstance() {
}

BloomFilterIndex::BloomFilterIndex(const BloomFilterIndex& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.BloomFilterIndex)
}

void BloomFilterIndex::SharedCtor() {
  _cached_size_ = 0;
}

BloomFilterIndex::~BloomFilterIndex() {
  // @@protoc_insertion_point(destructor:orc.proto.BloomFilterIndex)
  SharedDtor();
}

void BloomFilterIndex::SharedDtor() {
}

void BloomFilterIndex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BloomFilterIndex::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BloomFilterIndex_descriptor_;
}

const BloomFilterIndex& BloomFilterIndex::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BloomFilterIndex> BloomFilterIndex_default_instance_;

BloomFilterIndex* BloomFilterIndex::New(::google::protobuf::Arena* arena) const {
  BloomFilterIndex* n = new BloomFilterIndex;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BloomFilterIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.BloomFilterIndex)
  bloomfilter_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BloomFilterIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.BloomFilterIndex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .orc.proto.BloomFilter bloomFilter = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_bloomFilter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_bloomfilter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_bloomFilter;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.BloomFilterIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.BloomFilterIndex)
  return false;
#undef DO_
}

void BloomFilterIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.BloomFilterIndex)
  // repeated .orc.proto.BloomFilter bloomFilter = 1;
  for (unsigned int i = 0, n = this->bloomfilter_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bloomfilter(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.BloomFilterIndex)
}

::google::protobuf::uint8* BloomFilterIndex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.BloomFilterIndex)
  // repeated .orc.proto.BloomFilter bloomFilter = 1;
  for (unsigned int i = 0, n = this->bloomfilter_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->bloomfilter(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.BloomFilterIndex)
  return target;
}

size_t BloomFilterIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.BloomFilterIndex)
  size_t total_size = 0;

  // repeated .orc.proto.BloomFilter bloomFilter = 1;
  {
    unsigned int count = this->bloomfilter_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bloomfilter(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BloomFilterIndex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.BloomFilterIndex)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BloomFilterIndex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BloomFilterIndex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.BloomFilterIndex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.BloomFilterIndex)
    UnsafeMergeFrom(*source);
  }
}

void BloomFilterIndex::MergeFrom(const BloomFilterIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.BloomFilterIndex)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BloomFilterIndex::UnsafeMergeFrom(const BloomFilterIndex& from) {
  GOOGLE_DCHECK(&from != this);
  bloomfilter_.MergeFrom(from.bloomfilter_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void BloomFilterIndex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.BloomFilterIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BloomFilterIndex::CopyFrom(const BloomFilterIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.BloomFilterIndex)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BloomFilterIndex::IsInitialized() const {

  return true;
}

void BloomFilterIndex::Swap(BloomFilterIndex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BloomFilterIndex::InternalSwap(BloomFilterIndex* other) {
  bloomfilter_.UnsafeArenaSwap(&other->bloomfilter_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BloomFilterIndex::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BloomFilterIndex_descriptor_;
  metadata.reflection = BloomFilterIndex_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BloomFilterIndex

// repeated .orc.proto.BloomFilter bloomFilter = 1;
int BloomFilterIndex::bloomfilter_size() const {
  return bloomfilter_.size();
}
void BloomFilterIndex::clear_bloomfilter() {
  bloomfilter_.Clear();
}
const ::orc::proto::BloomFilter& BloomFilterIndex::bloomfilter(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.BloomFilterIndex.bloomFilter)
  return bloomfilter_.Get(index);
}
::orc::proto::BloomFilter* BloomFilterIndex::mutable_bloomfilter(int index) {
  // @@protoc_insertion_point(field_mutable:orc.proto.BloomFilterIndex.bloomFilter)
  return bloomfilter_.Mutable(index);
}
::orc::proto::BloomFilter* BloomFilterIndex::add_bloomfilter() {
  // @@protoc_insertion_point(field_add:orc.proto.BloomFilterIndex.bloomFilter)
  return bloomfilter_.Add();
}
::google::protobuf::RepeatedPtrField< ::orc::proto::BloomFilter >*
BloomFilterIndex::mutable_bloomfilter() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.BloomFilterIndex.bloomFilter)
  return &bloomfilter_;
}
const ::google::protobuf::RepeatedPtrField< ::orc::proto::BloomFilter >&
BloomFilterIndex::bloomfilter() const {
  // @@protoc_insertion_point(field_list:orc.proto.BloomFilterIndex.bloomFilter)
  return bloomfilter_;
}

inline const BloomFilterIndex* BloomFilterIndex::internal_default_instance() {
  return &BloomFilterIndex_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Stream_Kind_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Stream_Kind_descriptor_;
}
bool Stream_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Stream_Kind Stream::PRESENT;
const Stream_Kind Stream::DATA;
const Stream_Kind Stream::LENGTH;
const Stream_Kind Stream::DICTIONARY_DATA;
const Stream_Kind Stream::DICTIONARY_COUNT;
const Stream_Kind Stream::SECONDARY;
const Stream_Kind Stream::ROW_INDEX;
const Stream_Kind Stream::BLOOM_FILTER;
const Stream_Kind Stream::Kind_MIN;
const Stream_Kind Stream::Kind_MAX;
const int Stream::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stream::kKindFieldNumber;
const int Stream::kColumnFieldNumber;
const int Stream::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stream::Stream()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.Stream)
}

void Stream::InitAsDefaultInstance() {
}

Stream::Stream(const Stream& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.Stream)
}

void Stream::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&kind_, 0, reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&kind_) + sizeof(length_));
}

Stream::~Stream() {
  // @@protoc_insertion_point(destructor:orc.proto.Stream)
  SharedDtor();
}

void Stream::SharedDtor() {
}

void Stream::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stream::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Stream_descriptor_;
}

const Stream& Stream::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Stream> Stream_default_instance_;

Stream* Stream::New(::google::protobuf::Arena* arena) const {
  Stream* n = new Stream;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stream::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.Stream)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Stream, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Stream*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(kind_, length_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Stream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.Stream)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .orc.proto.Stream.Kind kind = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::orc::proto::Stream_Kind_IsValid(value)) {
            set_kind(static_cast< ::orc::proto::Stream_Kind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_column;
        break;
      }

      // optional uint32 column = 2;
      case 2: {
        if (tag == 16) {
         parse_column:
          set_has_column();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &column_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_length;
        break;
      }

      // optional uint64 length = 3;
      case 3: {
        if (tag == 24) {
         parse_length:
          set_has_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.Stream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.Stream)
  return false;
#undef DO_
}

void Stream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.Stream)
  // optional .orc.proto.Stream.Kind kind = 1;
  if (has_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // optional uint32 column = 2;
  if (has_column()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->column(), output);
  }

  // optional uint64 length = 3;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->length(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.Stream)
}

::google::protobuf::uint8* Stream::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.Stream)
  // optional .orc.proto.Stream.Kind kind = 1;
  if (has_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // optional uint32 column = 2;
  if (has_column()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->column(), target);
  }

  // optional uint64 length = 3;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->length(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.Stream)
  return target;
}

size_t Stream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.Stream)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional .orc.proto.Stream.Kind kind = 1;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
    }

    // optional uint32 column = 2;
    if (has_column()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->column());
    }

    // optional uint64 length = 3;
    if (has_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->length());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.Stream)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Stream* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stream>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.Stream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.Stream)
    UnsafeMergeFrom(*source);
  }
}

void Stream::MergeFrom(const Stream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.Stream)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Stream::UnsafeMergeFrom(const Stream& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kind()) {
      set_kind(from.kind());
    }
    if (from.has_column()) {
      set_column(from.column());
    }
    if (from.has_length()) {
      set_length(from.length());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Stream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.Stream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stream::CopyFrom(const Stream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.Stream)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Stream::IsInitialized() const {

  return true;
}

void Stream::Swap(Stream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stream::InternalSwap(Stream* other) {
  std::swap(kind_, other->kind_);
  std::swap(column_, other->column_);
  std::swap(length_, other->length_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stream::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Stream_descriptor_;
  metadata.reflection = Stream_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Stream

// optional .orc.proto.Stream.Kind kind = 1;
bool Stream::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Stream::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
void Stream::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
void Stream::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
::orc::proto::Stream_Kind Stream::kind() const {
  // @@protoc_insertion_point(field_get:orc.proto.Stream.kind)
  return static_cast< ::orc::proto::Stream_Kind >(kind_);
}
void Stream::set_kind(::orc::proto::Stream_Kind value) {
  assert(::orc::proto::Stream_Kind_IsValid(value));
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.Stream.kind)
}

// optional uint32 column = 2;
bool Stream::has_column() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Stream::set_has_column() {
  _has_bits_[0] |= 0x00000002u;
}
void Stream::clear_has_column() {
  _has_bits_[0] &= ~0x00000002u;
}
void Stream::clear_column() {
  column_ = 0u;
  clear_has_column();
}
::google::protobuf::uint32 Stream::column() const {
  // @@protoc_insertion_point(field_get:orc.proto.Stream.column)
  return column_;
}
void Stream::set_column(::google::protobuf::uint32 value) {
  set_has_column();
  column_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.Stream.column)
}

// optional uint64 length = 3;
bool Stream::has_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Stream::set_has_length() {
  _has_bits_[0] |= 0x00000004u;
}
void Stream::clear_has_length() {
  _has_bits_[0] &= ~0x00000004u;
}
void Stream::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
  clear_has_length();
}
::google::protobuf::uint64 Stream::length() const {
  // @@protoc_insertion_point(field_get:orc.proto.Stream.length)
  return length_;
}
void Stream::set_length(::google::protobuf::uint64 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.Stream.length)
}

inline const Stream* Stream::internal_default_instance() {
  return &Stream_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* ColumnEncoding_Kind_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ColumnEncoding_Kind_descriptor_;
}
bool ColumnEncoding_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ColumnEncoding_Kind ColumnEncoding::DIRECT;
const ColumnEncoding_Kind ColumnEncoding::DICTIONARY;
const ColumnEncoding_Kind ColumnEncoding::DIRECT_V2;
const ColumnEncoding_Kind ColumnEncoding::DICTIONARY_V2;
const ColumnEncoding_Kind ColumnEncoding::Kind_MIN;
const ColumnEncoding_Kind ColumnEncoding::Kind_MAX;
const int ColumnEncoding::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ColumnEncoding::kKindFieldNumber;
const int ColumnEncoding::kDictionarySizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ColumnEncoding::ColumnEncoding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.ColumnEncoding)
}

void ColumnEncoding::InitAsDefaultInstance() {
}

ColumnEncoding::ColumnEncoding(const ColumnEncoding& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.ColumnEncoding)
}

void ColumnEncoding::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&kind_, 0, reinterpret_cast<char*>(&dictionarysize_) -
    reinterpret_cast<char*>(&kind_) + sizeof(dictionarysize_));
}

ColumnEncoding::~ColumnEncoding() {
  // @@protoc_insertion_point(destructor:orc.proto.ColumnEncoding)
  SharedDtor();
}

void ColumnEncoding::SharedDtor() {
}

void ColumnEncoding::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ColumnEncoding::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ColumnEncoding_descriptor_;
}

const ColumnEncoding& ColumnEncoding::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ColumnEncoding> ColumnEncoding_default_instance_;

ColumnEncoding* ColumnEncoding::New(::google::protobuf::Arena* arena) const {
  ColumnEncoding* n = new ColumnEncoding;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ColumnEncoding::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.ColumnEncoding)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ColumnEncoding, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ColumnEncoding*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(kind_, dictionarysize_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ColumnEncoding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.ColumnEncoding)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .orc.proto.ColumnEncoding.Kind kind = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::orc::proto::ColumnEncoding_Kind_IsValid(value)) {
            set_kind(static_cast< ::orc::proto::ColumnEncoding_Kind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dictionarySize;
        break;
      }

      // optional uint32 dictionarySize = 2;
      case 2: {
        if (tag == 16) {
         parse_dictionarySize:
          set_has_dictionarysize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dictionarysize_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.ColumnEncoding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.ColumnEncoding)
  return false;
#undef DO_
}

void ColumnEncoding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.ColumnEncoding)
  // optional .orc.proto.ColumnEncoding.Kind kind = 1;
  if (has_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // optional uint32 dictionarySize = 2;
  if (has_dictionarysize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dictionarysize(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.ColumnEncoding)
}

::google::protobuf::uint8* ColumnEncoding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.ColumnEncoding)
  // optional .orc.proto.ColumnEncoding.Kind kind = 1;
  if (has_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // optional uint32 dictionarySize = 2;
  if (has_dictionarysize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dictionarysize(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.ColumnEncoding)
  return target;
}

size_t ColumnEncoding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.ColumnEncoding)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .orc.proto.ColumnEncoding.Kind kind = 1;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
    }

    // optional uint32 dictionarySize = 2;
    if (has_dictionarysize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dictionarysize());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ColumnEncoding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.ColumnEncoding)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ColumnEncoding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ColumnEncoding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.ColumnEncoding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.ColumnEncoding)
    UnsafeMergeFrom(*source);
  }
}

void ColumnEncoding::MergeFrom(const ColumnEncoding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.ColumnEncoding)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ColumnEncoding::UnsafeMergeFrom(const ColumnEncoding& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kind()) {
      set_kind(from.kind());
    }
    if (from.has_dictionarysize()) {
      set_dictionarysize(from.dictionarysize());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ColumnEncoding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.ColumnEncoding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ColumnEncoding::CopyFrom(const ColumnEncoding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.ColumnEncoding)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ColumnEncoding::IsInitialized() const {

  return true;
}

void ColumnEncoding::Swap(ColumnEncoding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ColumnEncoding::InternalSwap(ColumnEncoding* other) {
  std::swap(kind_, other->kind_);
  std::swap(dictionarysize_, other->dictionarysize_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ColumnEncoding::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ColumnEncoding_descriptor_;
  metadata.reflection = ColumnEncoding_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ColumnEncoding

// optional .orc.proto.ColumnEncoding.Kind kind = 1;
bool ColumnEncoding::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ColumnEncoding::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
void ColumnEncoding::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
void ColumnEncoding::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
::orc::proto::ColumnEncoding_Kind ColumnEncoding::kind() const {
  // @@protoc_insertion_point(field_get:orc.proto.ColumnEncoding.kind)
  return static_cast< ::orc::proto::ColumnEncoding_Kind >(kind_);
}
void ColumnEncoding::set_kind(::orc::proto::ColumnEncoding_Kind value) {
  assert(::orc::proto::ColumnEncoding_Kind_IsValid(value));
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.ColumnEncoding.kind)
}

// optional uint32 dictionarySize = 2;
bool ColumnEncoding::has_dictionarysize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ColumnEncoding::set_has_dictionarysize() {
  _has_bits_[0] |= 0x00000002u;
}
void ColumnEncoding::clear_has_dictionarysize() {
  _has_bits_[0] &= ~0x00000002u;
}
void ColumnEncoding::clear_dictionarysize() {
  dictionarysize_ = 0u;
  clear_has_dictionarysize();
}
::google::protobuf::uint32 ColumnEncoding::dictionarysize() const {
  // @@protoc_insertion_point(field_get:orc.proto.ColumnEncoding.dictionarySize)
  return dictionarysize_;
}
void ColumnEncoding::set_dictionarysize(::google::protobuf::uint32 value) {
  set_has_dictionarysize();
  dictionarysize_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.ColumnEncoding.dictionarySize)
}

inline const ColumnEncoding* ColumnEncoding::internal_default_instance() {
  return &ColumnEncoding_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StripeFooter::kStreamsFieldNumber;
const int StripeFooter::kColumnsFieldNumber;
const int StripeFooter::kWriterTimezoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StripeFooter::StripeFooter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.StripeFooter)
}

void StripeFooter::InitAsDefaultInstance() {
}

StripeFooter::StripeFooter(const StripeFooter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.StripeFooter)
}

void StripeFooter::SharedCtor() {
  _cached_size_ = 0;
  writertimezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StripeFooter::~StripeFooter() {
  // @@protoc_insertion_point(destructor:orc.proto.StripeFooter)
  SharedDtor();
}

void StripeFooter::SharedDtor() {
  writertimezone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StripeFooter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StripeFooter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StripeFooter_descriptor_;
}

const StripeFooter& StripeFooter::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<StripeFooter> StripeFooter_default_instance_;

StripeFooter* StripeFooter::New(::google::protobuf::Arena* arena) const {
  StripeFooter* n = new StripeFooter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StripeFooter::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.StripeFooter)
  if (has_writertimezone()) {
    writertimezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  streams_.Clear();
  columns_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StripeFooter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.StripeFooter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .orc.proto.Stream streams = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_streams:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_streams()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_streams;
        if (input->ExpectTag(18)) goto parse_loop_columns;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .orc.proto.ColumnEncoding columns = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_columns:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_columns()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_columns;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_writerTimezone;
        break;
      }

      // optional string writerTimezone = 3;
      case 3: {
        if (tag == 26) {
         parse_writerTimezone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_writertimezone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->writertimezone().data(), this->writertimezone().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orc.proto.StripeFooter.writerTimezone");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.StripeFooter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.StripeFooter)
  return false;
#undef DO_
}

void StripeFooter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.StripeFooter)
  // repeated .orc.proto.Stream streams = 1;
  for (unsigned int i = 0, n = this->streams_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->streams(i), output);
  }

  // repeated .orc.proto.ColumnEncoding columns = 2;
  for (unsigned int i = 0, n = this->columns_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->columns(i), output);
  }

  // optional string writerTimezone = 3;
  if (has_writertimezone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->writertimezone().data(), this->writertimezone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.StripeFooter.writerTimezone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->writertimezone(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.StripeFooter)
}

::google::protobuf::uint8* StripeFooter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.StripeFooter)
  // repeated .orc.proto.Stream streams = 1;
  for (unsigned int i = 0, n = this->streams_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->streams(i), false, target);
  }

  // repeated .orc.proto.ColumnEncoding columns = 2;
  for (unsigned int i = 0, n = this->columns_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->columns(i), false, target);
  }

  // optional string writerTimezone = 3;
  if (has_writertimezone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->writertimezone().data(), this->writertimezone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.StripeFooter.writerTimezone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->writertimezone(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.StripeFooter)
  return target;
}

size_t StripeFooter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.StripeFooter)
  size_t total_size = 0;

  // optional string writerTimezone = 3;
  if (has_writertimezone()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->writertimezone());
  }

  // repeated .orc.proto.Stream streams = 1;
  {
    unsigned int count = this->streams_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->streams(i));
    }
  }

  // repeated .orc.proto.ColumnEncoding columns = 2;
  {
    unsigned int count = this->columns_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->columns(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StripeFooter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.StripeFooter)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StripeFooter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StripeFooter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.StripeFooter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.StripeFooter)
    UnsafeMergeFrom(*source);
  }
}

void StripeFooter::MergeFrom(const StripeFooter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.StripeFooter)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void StripeFooter::UnsafeMergeFrom(const StripeFooter& from) {
  GOOGLE_DCHECK(&from != this);
  streams_.MergeFrom(from.streams_);
  columns_.MergeFrom(from.columns_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_writertimezone()) {
      set_has_writertimezone();
      writertimezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.writertimezone_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void StripeFooter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.StripeFooter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StripeFooter::CopyFrom(const StripeFooter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.StripeFooter)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool StripeFooter::IsInitialized() const {

  return true;
}

void StripeFooter::Swap(StripeFooter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StripeFooter::InternalSwap(StripeFooter* other) {
  streams_.UnsafeArenaSwap(&other->streams_);
  columns_.UnsafeArenaSwap(&other->columns_);
  writertimezone_.Swap(&other->writertimezone_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StripeFooter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StripeFooter_descriptor_;
  metadata.reflection = StripeFooter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StripeFooter

// repeated .orc.proto.Stream streams = 1;
int StripeFooter::streams_size() const {
  return streams_.size();
}
void StripeFooter::clear_streams() {
  streams_.Clear();
}
const ::orc::proto::Stream& StripeFooter::streams(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.StripeFooter.streams)
  return streams_.Get(index);
}
::orc::proto::Stream* StripeFooter::mutable_streams(int index) {
  // @@protoc_insertion_point(field_mutable:orc.proto.StripeFooter.streams)
  return streams_.Mutable(index);
}
::orc::proto::Stream* StripeFooter::add_streams() {
  // @@protoc_insertion_point(field_add:orc.proto.StripeFooter.streams)
  return streams_.Add();
}
::google::protobuf::RepeatedPtrField< ::orc::proto::Stream >*
StripeFooter::mutable_streams() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.StripeFooter.streams)
  return &streams_;
}
const ::google::protobuf::RepeatedPtrField< ::orc::proto::Stream >&
StripeFooter::streams() const {
  // @@protoc_insertion_point(field_list:orc.proto.StripeFooter.streams)
  return streams_;
}

// repeated .orc.proto.ColumnEncoding columns = 2;
int StripeFooter::columns_size() const {
  return columns_.size();
}
void StripeFooter::clear_columns() {
  columns_.Clear();
}
const ::orc::proto::ColumnEncoding& StripeFooter::columns(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.StripeFooter.columns)
  return columns_.Get(index);
}
::orc::proto::ColumnEncoding* StripeFooter::mutable_columns(int index) {
  // @@protoc_insertion_point(field_mutable:orc.proto.StripeFooter.columns)
  return columns_.Mutable(index);
}
::orc::proto::ColumnEncoding* StripeFooter::add_columns() {
  // @@protoc_insertion_point(field_add:orc.proto.StripeFooter.columns)
  return columns_.Add();
}
::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnEncoding >*
StripeFooter::mutable_columns() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.StripeFooter.columns)
  return &columns_;
}
const ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnEncoding >&
StripeFooter::columns() const {
  // @@protoc_insertion_point(field_list:orc.proto.StripeFooter.columns)
  return columns_;
}

// optional string writerTimezone = 3;
bool StripeFooter::has_writertimezone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void StripeFooter::set_has_writertimezone() {
  _has_bits_[0] |= 0x00000004u;
}
void StripeFooter::clear_has_writertimezone() {
  _has_bits_[0] &= ~0x00000004u;
}
void StripeFooter::clear_writertimezone() {
  writertimezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_writertimezone();
}
const ::std::string& StripeFooter::writertimezone() const {
  // @@protoc_insertion_point(field_get:orc.proto.StripeFooter.writerTimezone)
  return writertimezone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StripeFooter::set_writertimezone(const ::std::string& value) {
  set_has_writertimezone();
  writertimezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:orc.proto.StripeFooter.writerTimezone)
}
void StripeFooter::set_writertimezone(const char* value) {
  set_has_writertimezone();
  writertimezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:orc.proto.StripeFooter.writerTimezone)
}
void StripeFooter::set_writertimezone(const char* value, size_t size) {
  set_has_writertimezone();
  writertimezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:orc.proto.StripeFooter.writerTimezone)
}
::std::string* StripeFooter::mutable_writertimezone() {
  set_has_writertimezone();
  // @@protoc_insertion_point(field_mutable:orc.proto.StripeFooter.writerTimezone)
  return writertimezone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StripeFooter::release_writertimezone() {
  // @@protoc_insertion_point(field_release:orc.proto.StripeFooter.writerTimezone)
  clear_has_writertimezone();
  return writertimezone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StripeFooter::set_allocated_writertimezone(::std::string* writertimezone) {
  if (writertimezone != NULL) {
    set_has_writertimezone();
  } else {
    clear_has_writertimezone();
  }
  writertimezone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), writertimezone);
  // @@protoc_insertion_point(field_set_allocated:orc.proto.StripeFooter.writerTimezone)
}

inline const StripeFooter* StripeFooter::internal_default_instance() {
  return &StripeFooter_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Type_Kind_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type_Kind_descriptor_;
}
bool Type_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Type_Kind Type::BOOLEAN;
const Type_Kind Type::BYTE;
const Type_Kind Type::SHORT;
const Type_Kind Type::INT;
const Type_Kind Type::LONG;
const Type_Kind Type::FLOAT;
const Type_Kind Type::DOUBLE;
const Type_Kind Type::STRING;
const Type_Kind Type::BINARY;
const Type_Kind Type::TIMESTAMP;
const Type_Kind Type::LIST;
const Type_Kind Type::MAP;
const Type_Kind Type::STRUCT;
const Type_Kind Type::UNION;
const Type_Kind Type::DECIMAL;
const Type_Kind Type::DATE;
const Type_Kind Type::VARCHAR;
const Type_Kind Type::CHAR;
const Type_Kind Type::Kind_MIN;
const Type_Kind Type::Kind_MAX;
const int Type::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type::kKindFieldNumber;
const int Type::kSubtypesFieldNumber;
const int Type::kFieldNamesFieldNumber;
const int Type::kMaximumLengthFieldNumber;
const int Type::kPrecisionFieldNumber;
const int Type::kScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type::Type()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.Type)
}

void Type::InitAsDefaultInstance() {
}

Type::Type(const Type& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.Type)
}

void Type::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&kind_, 0, reinterpret_cast<char*>(&scale_) -
    reinterpret_cast<char*>(&kind_) + sizeof(scale_));
}

Type::~Type() {
  // @@protoc_insertion_point(destructor:orc.proto.Type)
  SharedDtor();
}

void Type::SharedDtor() {
}

void Type::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type_descriptor_;
}

const Type& Type::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Type> Type_default_instance_;

Type* Type::New(::google::protobuf::Arena* arena) const {
  Type* n = new Type;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.Type)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Type, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Type*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(kind_, scale_);

#undef ZR_HELPER_
#undef ZR_

  subtypes_.Clear();
  fieldnames_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.Type)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .orc.proto.Type.Kind kind = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::orc::proto::Type_Kind_IsValid(value)) {
            set_kind(static_cast< ::orc::proto::Type_Kind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_subtypes;
        break;
      }

      // repeated uint32 subtypes = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_subtypes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_subtypes())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_subtypes())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fieldNames;
        break;
      }

      // repeated string fieldNames = 3;
      case 3: {
        if (tag == 26) {
         parse_fieldNames:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fieldnames()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fieldnames(this->fieldnames_size() - 1).data(),
            this->fieldnames(this->fieldnames_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orc.proto.Type.fieldNames");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fieldNames;
        if (input->ExpectTag(32)) goto parse_maximumLength;
        break;
      }

      // optional uint32 maximumLength = 4;
      case 4: {
        if (tag == 32) {
         parse_maximumLength:
          set_has_maximumlength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maximumlength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_precision;
        break;
      }

      // optional uint32 precision = 5;
      case 5: {
        if (tag == 40) {
         parse_precision:
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_scale;
        break;
      }

      // optional uint32 scale = 6;
      case 6: {
        if (tag == 48) {
         parse_scale:
          set_has_scale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.Type)
  return false;
#undef DO_
}

void Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.Type)
  // optional .orc.proto.Type.Kind kind = 1;
  if (has_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // repeated uint32 subtypes = 2 [packed = true];
  if (this->subtypes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_subtypes_cached_byte_size_);
  }
  for (int i = 0; i < this->subtypes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->subtypes(i), output);
  }

  // repeated string fieldNames = 3;
  for (int i = 0; i < this->fieldnames_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fieldnames(i).data(), this->fieldnames(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.Type.fieldNames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->fieldnames(i), output);
  }

  // optional uint32 maximumLength = 4;
  if (has_maximumlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->maximumlength(), output);
  }

  // optional uint32 precision = 5;
  if (has_precision()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->precision(), output);
  }

  // optional uint32 scale = 6;
  if (has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->scale(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.Type)
}

::google::protobuf::uint8* Type::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.Type)
  // optional .orc.proto.Type.Kind kind = 1;
  if (has_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // repeated uint32 subtypes = 2 [packed = true];
  if (this->subtypes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _subtypes_cached_byte_size_, target);
  }
  for (int i = 0; i < this->subtypes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->subtypes(i), target);
  }

  // repeated string fieldNames = 3;
  for (int i = 0; i < this->fieldnames_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fieldnames(i).data(), this->fieldnames(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.Type.fieldNames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->fieldnames(i), target);
  }

  // optional uint32 maximumLength = 4;
  if (has_maximumlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->maximumlength(), target);
  }

  // optional uint32 precision = 5;
  if (has_precision()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->precision(), target);
  }

  // optional uint32 scale = 6;
  if (has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->scale(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.Type)
  return target;
}

size_t Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.Type)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 57u) {
    // optional .orc.proto.Type.Kind kind = 1;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
    }

    // optional uint32 maximumLength = 4;
    if (has_maximumlength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maximumlength());
    }

    // optional uint32 precision = 5;
    if (has_precision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->precision());
    }

    // optional uint32 scale = 6;
    if (has_scale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scale());
    }

  }
  // repeated uint32 subtypes = 2 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->subtypes_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->subtypes(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _subtypes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string fieldNames = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fieldnames_size());
  for (int i = 0; i < this->fieldnames_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fieldnames(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.Type)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Type* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.Type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.Type)
    UnsafeMergeFrom(*source);
  }
}

void Type::MergeFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.Type)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Type::UnsafeMergeFrom(const Type& from) {
  GOOGLE_DCHECK(&from != this);
  subtypes_.UnsafeMergeFrom(from.subtypes_);
  fieldnames_.UnsafeMergeFrom(from.fieldnames_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kind()) {
      set_kind(from.kind());
    }
    if (from.has_maximumlength()) {
      set_maximumlength(from.maximumlength());
    }
    if (from.has_precision()) {
      set_precision(from.precision());
    }
    if (from.has_scale()) {
      set_scale(from.scale());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type::CopyFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.Type)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Type::IsInitialized() const {

  return true;
}

void Type::Swap(Type* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type::InternalSwap(Type* other) {
  std::swap(kind_, other->kind_);
  subtypes_.UnsafeArenaSwap(&other->subtypes_);
  fieldnames_.UnsafeArenaSwap(&other->fieldnames_);
  std::swap(maximumlength_, other->maximumlength_);
  std::swap(precision_, other->precision_);
  std::swap(scale_, other->scale_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type_descriptor_;
  metadata.reflection = Type_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type

// optional .orc.proto.Type.Kind kind = 1;
bool Type::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
void Type::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type::clear_kind() {
  kind_ = 0;
  clear_has_kind();
}
::orc::proto::Type_Kind Type::kind() const {
  // @@protoc_insertion_point(field_get:orc.proto.Type.kind)
  return static_cast< ::orc::proto::Type_Kind >(kind_);
}
void Type::set_kind(::orc::proto::Type_Kind value) {
  assert(::orc::proto::Type_Kind_IsValid(value));
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.Type.kind)
}

// repeated uint32 subtypes = 2 [packed = true];
int Type::subtypes_size() const {
  return subtypes_.size();
}
void Type::clear_subtypes() {
  subtypes_.Clear();
}
::google::protobuf::uint32 Type::subtypes(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.Type.subtypes)
  return subtypes_.Get(index);
}
void Type::set_subtypes(int index, ::google::protobuf::uint32 value) {
  subtypes_.Set(index, value);
  // @@protoc_insertion_point(field_set:orc.proto.Type.subtypes)
}
void Type::add_subtypes(::google::protobuf::uint32 value) {
  subtypes_.Add(value);
  // @@protoc_insertion_point(field_add:orc.proto.Type.subtypes)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Type::subtypes() const {
  // @@protoc_insertion_point(field_list:orc.proto.Type.subtypes)
  return subtypes_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Type::mutable_subtypes() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.Type.subtypes)
  return &subtypes_;
}

// repeated string fieldNames = 3;
int Type::fieldnames_size() const {
  return fieldnames_.size();
}
void Type::clear_fieldnames() {
  fieldnames_.Clear();
}
const ::std::string& Type::fieldnames(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.Type.fieldNames)
  return fieldnames_.Get(index);
}
::std::string* Type::mutable_fieldnames(int index) {
  // @@protoc_insertion_point(field_mutable:orc.proto.Type.fieldNames)
  return fieldnames_.Mutable(index);
}
void Type::set_fieldnames(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:orc.proto.Type.fieldNames)
  fieldnames_.Mutable(index)->assign(value);
}
void Type::set_fieldnames(int index, const char* value) {
  fieldnames_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:orc.proto.Type.fieldNames)
}
void Type::set_fieldnames(int index, const char* value, size_t size) {
  fieldnames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:orc.proto.Type.fieldNames)
}
::std::string* Type::add_fieldnames() {
  // @@protoc_insertion_point(field_add_mutable:orc.proto.Type.fieldNames)
  return fieldnames_.Add();
}
void Type::add_fieldnames(const ::std::string& value) {
  fieldnames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:orc.proto.Type.fieldNames)
}
void Type::add_fieldnames(const char* value) {
  fieldnames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:orc.proto.Type.fieldNames)
}
void Type::add_fieldnames(const char* value, size_t size) {
  fieldnames_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:orc.proto.Type.fieldNames)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Type::fieldnames() const {
  // @@protoc_insertion_point(field_list:orc.proto.Type.fieldNames)
  return fieldnames_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Type::mutable_fieldnames() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.Type.fieldNames)
  return &fieldnames_;
}

// optional uint32 maximumLength = 4;
bool Type::has_maximumlength() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Type::set_has_maximumlength() {
  _has_bits_[0] |= 0x00000008u;
}
void Type::clear_has_maximumlength() {
  _has_bits_[0] &= ~0x00000008u;
}
void Type::clear_maximumlength() {
  maximumlength_ = 0u;
  clear_has_maximumlength();
}
::google::protobuf::uint32 Type::maximumlength() const {
  // @@protoc_insertion_point(field_get:orc.proto.Type.maximumLength)
  return maximumlength_;
}
void Type::set_maximumlength(::google::protobuf::uint32 value) {
  set_has_maximumlength();
  maximumlength_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.Type.maximumLength)
}

// optional uint32 precision = 5;
bool Type::has_precision() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Type::set_has_precision() {
  _has_bits_[0] |= 0x00000010u;
}
void Type::clear_has_precision() {
  _has_bits_[0] &= ~0x00000010u;
}
void Type::clear_precision() {
  precision_ = 0u;
  clear_has_precision();
}
::google::protobuf::uint32 Type::precision() const {
  // @@protoc_insertion_point(field_get:orc.proto.Type.precision)
  return precision_;
}
void Type::set_precision(::google::protobuf::uint32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.Type.precision)
}

// optional uint32 scale = 6;
bool Type::has_scale() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Type::set_has_scale() {
  _has_bits_[0] |= 0x00000020u;
}
void Type::clear_has_scale() {
  _has_bits_[0] &= ~0x00000020u;
}
void Type::clear_scale() {
  scale_ = 0u;
  clear_has_scale();
}
::google::protobuf::uint32 Type::scale() const {
  // @@protoc_insertion_point(field_get:orc.proto.Type.scale)
  return scale_;
}
void Type::set_scale(::google::protobuf::uint32 value) {
  set_has_scale();
  scale_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.Type.scale)
}

inline const Type* Type::internal_default_instance() {
  return &Type_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StripeInformation::kOffsetFieldNumber;
const int StripeInformation::kIndexLengthFieldNumber;
const int StripeInformation::kDataLengthFieldNumber;
const int StripeInformation::kFooterLengthFieldNumber;
const int StripeInformation::kNumberOfRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StripeInformation::StripeInformation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.StripeInformation)
}

void StripeInformation::InitAsDefaultInstance() {
}

StripeInformation::StripeInformation(const StripeInformation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.StripeInformation)
}

void StripeInformation::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&offset_, 0, reinterpret_cast<char*>(&numberofrows_) -
    reinterpret_cast<char*>(&offset_) + sizeof(numberofrows_));
}

StripeInformation::~StripeInformation() {
  // @@protoc_insertion_point(destructor:orc.proto.StripeInformation)
  SharedDtor();
}

void StripeInformation::SharedDtor() {
}

void StripeInformation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StripeInformation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StripeInformation_descriptor_;
}

const StripeInformation& StripeInformation::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<StripeInformation> StripeInformation_default_instance_;

StripeInformation* StripeInformation::New(::google::protobuf::Arena* arena) const {
  StripeInformation* n = new StripeInformation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StripeInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.StripeInformation)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(StripeInformation, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StripeInformation*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(offset_, numberofrows_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StripeInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.StripeInformation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 offset = 1;
      case 1: {
        if (tag == 8) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_indexLength;
        break;
      }

      // optional uint64 indexLength = 2;
      case 2: {
        if (tag == 16) {
         parse_indexLength:
          set_has_indexlength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &indexlength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_dataLength;
        break;
      }

      // optional uint64 dataLength = 3;
      case 3: {
        if (tag == 24) {
         parse_dataLength:
          set_has_datalength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &datalength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_footerLength;
        break;
      }

      // optional uint64 footerLength = 4;
      case 4: {
        if (tag == 32) {
         parse_footerLength:
          set_has_footerlength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &footerlength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_numberOfRows;
        break;
      }

      // optional uint64 numberOfRows = 5;
      case 5: {
        if (tag == 40) {
         parse_numberOfRows:
          set_has_numberofrows();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numberofrows_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.StripeInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.StripeInformation)
  return false;
#undef DO_
}

void StripeInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.StripeInformation)
  // optional uint64 offset = 1;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->offset(), output);
  }

  // optional uint64 indexLength = 2;
  if (has_indexlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->indexlength(), output);
  }

  // optional uint64 dataLength = 3;
  if (has_datalength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->datalength(), output);
  }

  // optional uint64 footerLength = 4;
  if (has_footerlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->footerlength(), output);
  }

  // optional uint64 numberOfRows = 5;
  if (has_numberofrows()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->numberofrows(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.StripeInformation)
}

::google::protobuf::uint8* StripeInformation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.StripeInformation)
  // optional uint64 offset = 1;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->offset(), target);
  }

  // optional uint64 indexLength = 2;
  if (has_indexlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->indexlength(), target);
  }

  // optional uint64 dataLength = 3;
  if (has_datalength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->datalength(), target);
  }

  // optional uint64 footerLength = 4;
  if (has_footerlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->footerlength(), target);
  }

  // optional uint64 numberOfRows = 5;
  if (has_numberofrows()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->numberofrows(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.StripeInformation)
  return target;
}

size_t StripeInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.StripeInformation)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint64 offset = 1;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

    // optional uint64 indexLength = 2;
    if (has_indexlength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->indexlength());
    }

    // optional uint64 dataLength = 3;
    if (has_datalength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->datalength());
    }

    // optional uint64 footerLength = 4;
    if (has_footerlength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->footerlength());
    }

    // optional uint64 numberOfRows = 5;
    if (has_numberofrows()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->numberofrows());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StripeInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.StripeInformation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StripeInformation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StripeInformation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.StripeInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.StripeInformation)
    UnsafeMergeFrom(*source);
  }
}

void StripeInformation::MergeFrom(const StripeInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.StripeInformation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void StripeInformation::UnsafeMergeFrom(const StripeInformation& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_indexlength()) {
      set_indexlength(from.indexlength());
    }
    if (from.has_datalength()) {
      set_datalength(from.datalength());
    }
    if (from.has_footerlength()) {
      set_footerlength(from.footerlength());
    }
    if (from.has_numberofrows()) {
      set_numberofrows(from.numberofrows());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void StripeInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.StripeInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StripeInformation::CopyFrom(const StripeInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.StripeInformation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool StripeInformation::IsInitialized() const {

  return true;
}

void StripeInformation::Swap(StripeInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StripeInformation::InternalSwap(StripeInformation* other) {
  std::swap(offset_, other->offset_);
  std::swap(indexlength_, other->indexlength_);
  std::swap(datalength_, other->datalength_);
  std::swap(footerlength_, other->footerlength_);
  std::swap(numberofrows_, other->numberofrows_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StripeInformation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StripeInformation_descriptor_;
  metadata.reflection = StripeInformation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StripeInformation

// optional uint64 offset = 1;
bool StripeInformation::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StripeInformation::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
void StripeInformation::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
void StripeInformation::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
::google::protobuf::uint64 StripeInformation::offset() const {
  // @@protoc_insertion_point(field_get:orc.proto.StripeInformation.offset)
  return offset_;
}
void StripeInformation::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.StripeInformation.offset)
}

// optional uint64 indexLength = 2;
bool StripeInformation::has_indexlength() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StripeInformation::set_has_indexlength() {
  _has_bits_[0] |= 0x00000002u;
}
void StripeInformation::clear_has_indexlength() {
  _has_bits_[0] &= ~0x00000002u;
}
void StripeInformation::clear_indexlength() {
  indexlength_ = GOOGLE_ULONGLONG(0);
  clear_has_indexlength();
}
::google::protobuf::uint64 StripeInformation::indexlength() const {
  // @@protoc_insertion_point(field_get:orc.proto.StripeInformation.indexLength)
  return indexlength_;
}
void StripeInformation::set_indexlength(::google::protobuf::uint64 value) {
  set_has_indexlength();
  indexlength_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.StripeInformation.indexLength)
}

// optional uint64 dataLength = 3;
bool StripeInformation::has_datalength() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void StripeInformation::set_has_datalength() {
  _has_bits_[0] |= 0x00000004u;
}
void StripeInformation::clear_has_datalength() {
  _has_bits_[0] &= ~0x00000004u;
}
void StripeInformation::clear_datalength() {
  datalength_ = GOOGLE_ULONGLONG(0);
  clear_has_datalength();
}
::google::protobuf::uint64 StripeInformation::datalength() const {
  // @@protoc_insertion_point(field_get:orc.proto.StripeInformation.dataLength)
  return datalength_;
}
void StripeInformation::set_datalength(::google::protobuf::uint64 value) {
  set_has_datalength();
  datalength_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.StripeInformation.dataLength)
}

// optional uint64 footerLength = 4;
bool StripeInformation::has_footerlength() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void StripeInformation::set_has_footerlength() {
  _has_bits_[0] |= 0x00000008u;
}
void StripeInformation::clear_has_footerlength() {
  _has_bits_[0] &= ~0x00000008u;
}
void StripeInformation::clear_footerlength() {
  footerlength_ = GOOGLE_ULONGLONG(0);
  clear_has_footerlength();
}
::google::protobuf::uint64 StripeInformation::footerlength() const {
  // @@protoc_insertion_point(field_get:orc.proto.StripeInformation.footerLength)
  return footerlength_;
}
void StripeInformation::set_footerlength(::google::protobuf::uint64 value) {
  set_has_footerlength();
  footerlength_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.StripeInformation.footerLength)
}

// optional uint64 numberOfRows = 5;
bool StripeInformation::has_numberofrows() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void StripeInformation::set_has_numberofrows() {
  _has_bits_[0] |= 0x00000010u;
}
void StripeInformation::clear_has_numberofrows() {
  _has_bits_[0] &= ~0x00000010u;
}
void StripeInformation::clear_numberofrows() {
  numberofrows_ = GOOGLE_ULONGLONG(0);
  clear_has_numberofrows();
}
::google::protobuf::uint64 StripeInformation::numberofrows() const {
  // @@protoc_insertion_point(field_get:orc.proto.StripeInformation.numberOfRows)
  return numberofrows_;
}
void StripeInformation::set_numberofrows(::google::protobuf::uint64 value) {
  set_has_numberofrows();
  numberofrows_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.StripeInformation.numberOfRows)
}

inline const StripeInformation* StripeInformation::internal_default_instance() {
  return &StripeInformation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserMetadataItem::kNameFieldNumber;
const int UserMetadataItem::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserMetadataItem::UserMetadataItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.UserMetadataItem)
}

void UserMetadataItem::InitAsDefaultInstance() {
}

UserMetadataItem::UserMetadataItem(const UserMetadataItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.UserMetadataItem)
}

void UserMetadataItem::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserMetadataItem::~UserMetadataItem() {
  // @@protoc_insertion_point(destructor:orc.proto.UserMetadataItem)
  SharedDtor();
}

void UserMetadataItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserMetadataItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserMetadataItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserMetadataItem_descriptor_;
}

const UserMetadataItem& UserMetadataItem::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UserMetadataItem> UserMetadataItem_default_instance_;

UserMetadataItem* UserMetadataItem::New(::google::protobuf::Arena* arena) const {
  UserMetadataItem* n = new UserMetadataItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserMetadataItem::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.UserMetadataItem)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UserMetadataItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.UserMetadataItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orc.proto.UserMetadataItem.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.UserMetadataItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.UserMetadataItem)
  return false;
#undef DO_
}

void UserMetadataItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.UserMetadataItem)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.UserMetadataItem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.UserMetadataItem)
}

::google::protobuf::uint8* UserMetadataItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.UserMetadataItem)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.UserMetadataItem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bytes value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.UserMetadataItem)
  return target;
}

size_t UserMetadataItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.UserMetadataItem)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserMetadataItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.UserMetadataItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UserMetadataItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserMetadataItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.UserMetadataItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.UserMetadataItem)
    UnsafeMergeFrom(*source);
  }
}

void UserMetadataItem::MergeFrom(const UserMetadataItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.UserMetadataItem)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UserMetadataItem::UnsafeMergeFrom(const UserMetadataItem& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void UserMetadataItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.UserMetadataItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserMetadataItem::CopyFrom(const UserMetadataItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.UserMetadataItem)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UserMetadataItem::IsInitialized() const {

  return true;
}

void UserMetadataItem::Swap(UserMetadataItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserMetadataItem::InternalSwap(UserMetadataItem* other) {
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserMetadataItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserMetadataItem_descriptor_;
  metadata.reflection = UserMetadataItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserMetadataItem

// optional string name = 1;
bool UserMetadataItem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserMetadataItem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void UserMetadataItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserMetadataItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& UserMetadataItem::name() const {
  // @@protoc_insertion_point(field_get:orc.proto.UserMetadataItem.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserMetadataItem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:orc.proto.UserMetadataItem.name)
}
void UserMetadataItem::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:orc.proto.UserMetadataItem.name)
}
void UserMetadataItem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:orc.proto.UserMetadataItem.name)
}
::std::string* UserMetadataItem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:orc.proto.UserMetadataItem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserMetadataItem::release_name() {
  // @@protoc_insertion_point(field_release:orc.proto.UserMetadataItem.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserMetadataItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:orc.proto.UserMetadataItem.name)
}

// optional bytes value = 2;
bool UserMetadataItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserMetadataItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void UserMetadataItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserMetadataItem::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& UserMetadataItem::value() const {
  // @@protoc_insertion_point(field_get:orc.proto.UserMetadataItem.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserMetadataItem::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:orc.proto.UserMetadataItem.value)
}
void UserMetadataItem::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:orc.proto.UserMetadataItem.value)
}
void UserMetadataItem::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:orc.proto.UserMetadataItem.value)
}
::std::string* UserMetadataItem::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:orc.proto.UserMetadataItem.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserMetadataItem::release_value() {
  // @@protoc_insertion_point(field_release:orc.proto.UserMetadataItem.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserMetadataItem::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:orc.proto.UserMetadataItem.value)
}

inline const UserMetadataItem* UserMetadataItem::internal_default_instance() {
  return &UserMetadataItem_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StripeStatistics::kColStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StripeStatistics::StripeStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.StripeStatistics)
}

void StripeStatistics::InitAsDefaultInstance() {
}

StripeStatistics::StripeStatistics(const StripeStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.StripeStatistics)
}

void StripeStatistics::SharedCtor() {
  _cached_size_ = 0;
}

StripeStatistics::~StripeStatistics() {
  // @@protoc_insertion_point(destructor:orc.proto.StripeStatistics)
  SharedDtor();
}

void StripeStatistics::SharedDtor() {
}

void StripeStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StripeStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StripeStatistics_descriptor_;
}

const StripeStatistics& StripeStatistics::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<StripeStatistics> StripeStatistics_default_instance_;

StripeStatistics* StripeStatistics::New(::google::protobuf::Arena* arena) const {
  StripeStatistics* n = new StripeStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StripeStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.StripeStatistics)
  colstats_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StripeStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.StripeStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .orc.proto.ColumnStatistics colStats = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_colStats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_colstats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_colStats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.StripeStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.StripeStatistics)
  return false;
#undef DO_
}

void StripeStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.StripeStatistics)
  // repeated .orc.proto.ColumnStatistics colStats = 1;
  for (unsigned int i = 0, n = this->colstats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->colstats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.StripeStatistics)
}

::google::protobuf::uint8* StripeStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.StripeStatistics)
  // repeated .orc.proto.ColumnStatistics colStats = 1;
  for (unsigned int i = 0, n = this->colstats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->colstats(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.StripeStatistics)
  return target;
}

size_t StripeStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.StripeStatistics)
  size_t total_size = 0;

  // repeated .orc.proto.ColumnStatistics colStats = 1;
  {
    unsigned int count = this->colstats_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->colstats(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StripeStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.StripeStatistics)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StripeStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StripeStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.StripeStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.StripeStatistics)
    UnsafeMergeFrom(*source);
  }
}

void StripeStatistics::MergeFrom(const StripeStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.StripeStatistics)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void StripeStatistics::UnsafeMergeFrom(const StripeStatistics& from) {
  GOOGLE_DCHECK(&from != this);
  colstats_.MergeFrom(from.colstats_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void StripeStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.StripeStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StripeStatistics::CopyFrom(const StripeStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.StripeStatistics)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool StripeStatistics::IsInitialized() const {

  return true;
}

void StripeStatistics::Swap(StripeStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StripeStatistics::InternalSwap(StripeStatistics* other) {
  colstats_.UnsafeArenaSwap(&other->colstats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StripeStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StripeStatistics_descriptor_;
  metadata.reflection = StripeStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StripeStatistics

// repeated .orc.proto.ColumnStatistics colStats = 1;
int StripeStatistics::colstats_size() const {
  return colstats_.size();
}
void StripeStatistics::clear_colstats() {
  colstats_.Clear();
}
const ::orc::proto::ColumnStatistics& StripeStatistics::colstats(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.StripeStatistics.colStats)
  return colstats_.Get(index);
}
::orc::proto::ColumnStatistics* StripeStatistics::mutable_colstats(int index) {
  // @@protoc_insertion_point(field_mutable:orc.proto.StripeStatistics.colStats)
  return colstats_.Mutable(index);
}
::orc::proto::ColumnStatistics* StripeStatistics::add_colstats() {
  // @@protoc_insertion_point(field_add:orc.proto.StripeStatistics.colStats)
  return colstats_.Add();
}
::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics >*
StripeStatistics::mutable_colstats() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.StripeStatistics.colStats)
  return &colstats_;
}
const ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics >&
StripeStatistics::colstats() const {
  // @@protoc_insertion_point(field_list:orc.proto.StripeStatistics.colStats)
  return colstats_;
}

inline const StripeStatistics* StripeStatistics::internal_default_instance() {
  return &StripeStatistics_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metadata::kStripeStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metadata::Metadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.Metadata)
}

void Metadata::InitAsDefaultInstance() {
}

Metadata::Metadata(const Metadata& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.Metadata)
}

void Metadata::SharedCtor() {
  _cached_size_ = 0;
}

Metadata::~Metadata() {
  // @@protoc_insertion_point(destructor:orc.proto.Metadata)
  SharedDtor();
}

void Metadata::SharedDtor() {
}

void Metadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Metadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Metadata_descriptor_;
}

const Metadata& Metadata::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Metadata> Metadata_default_instance_;

Metadata* Metadata::New(::google::protobuf::Arena* arena) const {
  Metadata* n = new Metadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.Metadata)
  stripestats_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Metadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.Metadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .orc.proto.StripeStatistics stripeStats = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_stripeStats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_stripestats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_stripeStats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.Metadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.Metadata)
  return false;
#undef DO_
}

void Metadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.Metadata)
  // repeated .orc.proto.StripeStatistics stripeStats = 1;
  for (unsigned int i = 0, n = this->stripestats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->stripestats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.Metadata)
}

::google::protobuf::uint8* Metadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.Metadata)
  // repeated .orc.proto.StripeStatistics stripeStats = 1;
  for (unsigned int i = 0, n = this->stripestats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->stripestats(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.Metadata)
  return target;
}

size_t Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.Metadata)
  size_t total_size = 0;

  // repeated .orc.proto.StripeStatistics stripeStats = 1;
  {
    unsigned int count = this->stripestats_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stripestats(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Metadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.Metadata)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Metadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.Metadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.Metadata)
    UnsafeMergeFrom(*source);
  }
}

void Metadata::MergeFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.Metadata)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Metadata::UnsafeMergeFrom(const Metadata& from) {
  GOOGLE_DCHECK(&from != this);
  stripestats_.MergeFrom(from.stripestats_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Metadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metadata::CopyFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.Metadata)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Metadata::IsInitialized() const {

  return true;
}

void Metadata::Swap(Metadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metadata::InternalSwap(Metadata* other) {
  stripestats_.UnsafeArenaSwap(&other->stripestats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Metadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Metadata_descriptor_;
  metadata.reflection = Metadata_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Metadata

// repeated .orc.proto.StripeStatistics stripeStats = 1;
int Metadata::stripestats_size() const {
  return stripestats_.size();
}
void Metadata::clear_stripestats() {
  stripestats_.Clear();
}
const ::orc::proto::StripeStatistics& Metadata::stripestats(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.Metadata.stripeStats)
  return stripestats_.Get(index);
}
::orc::proto::StripeStatistics* Metadata::mutable_stripestats(int index) {
  // @@protoc_insertion_point(field_mutable:orc.proto.Metadata.stripeStats)
  return stripestats_.Mutable(index);
}
::orc::proto::StripeStatistics* Metadata::add_stripestats() {
  // @@protoc_insertion_point(field_add:orc.proto.Metadata.stripeStats)
  return stripestats_.Add();
}
::google::protobuf::RepeatedPtrField< ::orc::proto::StripeStatistics >*
Metadata::mutable_stripestats() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.Metadata.stripeStats)
  return &stripestats_;
}
const ::google::protobuf::RepeatedPtrField< ::orc::proto::StripeStatistics >&
Metadata::stripestats() const {
  // @@protoc_insertion_point(field_list:orc.proto.Metadata.stripeStats)
  return stripestats_;
}

inline const Metadata* Metadata::internal_default_instance() {
  return &Metadata_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Footer::kHeaderLengthFieldNumber;
const int Footer::kContentLengthFieldNumber;
const int Footer::kStripesFieldNumber;
const int Footer::kTypesFieldNumber;
const int Footer::kMetadataFieldNumber;
const int Footer::kNumberOfRowsFieldNumber;
const int Footer::kStatisticsFieldNumber;
const int Footer::kRowIndexStrideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Footer::Footer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.Footer)
}

void Footer::InitAsDefaultInstance() {
}

Footer::Footer(const Footer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.Footer)
}

void Footer::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&headerlength_, 0, reinterpret_cast<char*>(&rowindexstride_) -
    reinterpret_cast<char*>(&headerlength_) + sizeof(rowindexstride_));
}

Footer::~Footer() {
  // @@protoc_insertion_point(destructor:orc.proto.Footer)
  SharedDtor();
}

void Footer::SharedDtor() {
}

void Footer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Footer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Footer_descriptor_;
}

const Footer& Footer::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Footer> Footer_default_instance_;

Footer* Footer::New(::google::protobuf::Arena* arena) const {
  Footer* n = new Footer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Footer::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.Footer)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Footer, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Footer*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(headerlength_, rowindexstride_);

#undef ZR_HELPER_
#undef ZR_

  stripes_.Clear();
  types_.Clear();
  metadata_.Clear();
  statistics_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Footer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.Footer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 headerLength = 1;
      case 1: {
        if (tag == 8) {
          set_has_headerlength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &headerlength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_contentLength;
        break;
      }

      // optional uint64 contentLength = 2;
      case 2: {
        if (tag == 16) {
         parse_contentLength:
          set_has_contentlength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &contentlength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_stripes;
        break;
      }

      // repeated .orc.proto.StripeInformation stripes = 3;
      case 3: {
        if (tag == 26) {
         parse_stripes:
          DO_(input->IncrementRecursionDepth());
         parse_loop_stripes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_stripes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_stripes;
        if (input->ExpectTag(34)) goto parse_loop_types;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .orc.proto.Type types = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_types:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_types;
        if (input->ExpectTag(42)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .orc.proto.UserMetadataItem metadata = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_metadata;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(48)) goto parse_numberOfRows;
        break;
      }

      // optional uint64 numberOfRows = 6;
      case 6: {
        if (tag == 48) {
         parse_numberOfRows:
          set_has_numberofrows();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &numberofrows_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_statistics;
        break;
      }

      // repeated .orc.proto.ColumnStatistics statistics = 7;
      case 7: {
        if (tag == 58) {
         parse_statistics:
          DO_(input->IncrementRecursionDepth());
         parse_loop_statistics:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_statistics()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_statistics;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(64)) goto parse_rowIndexStride;
        break;
      }

      // optional uint32 rowIndexStride = 8;
      case 8: {
        if (tag == 64) {
         parse_rowIndexStride:
          set_has_rowindexstride();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rowindexstride_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.Footer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.Footer)
  return false;
#undef DO_
}

void Footer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.Footer)
  // optional uint64 headerLength = 1;
  if (has_headerlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->headerlength(), output);
  }

  // optional uint64 contentLength = 2;
  if (has_contentlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->contentlength(), output);
  }

  // repeated .orc.proto.StripeInformation stripes = 3;
  for (unsigned int i = 0, n = this->stripes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stripes(i), output);
  }

  // repeated .orc.proto.Type types = 4;
  for (unsigned int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->types(i), output);
  }

  // repeated .orc.proto.UserMetadataItem metadata = 5;
  for (unsigned int i = 0, n = this->metadata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->metadata(i), output);
  }

  // optional uint64 numberOfRows = 6;
  if (has_numberofrows()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->numberofrows(), output);
  }

  // repeated .orc.proto.ColumnStatistics statistics = 7;
  for (unsigned int i = 0, n = this->statistics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->statistics(i), output);
  }

  // optional uint32 rowIndexStride = 8;
  if (has_rowindexstride()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->rowindexstride(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.Footer)
}

::google::protobuf::uint8* Footer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.Footer)
  // optional uint64 headerLength = 1;
  if (has_headerlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->headerlength(), target);
  }

  // optional uint64 contentLength = 2;
  if (has_contentlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->contentlength(), target);
  }

  // repeated .orc.proto.StripeInformation stripes = 3;
  for (unsigned int i = 0, n = this->stripes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->stripes(i), false, target);
  }

  // repeated .orc.proto.Type types = 4;
  for (unsigned int i = 0, n = this->types_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->types(i), false, target);
  }

  // repeated .orc.proto.UserMetadataItem metadata = 5;
  for (unsigned int i = 0, n = this->metadata_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->metadata(i), false, target);
  }

  // optional uint64 numberOfRows = 6;
  if (has_numberofrows()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->numberofrows(), target);
  }

  // repeated .orc.proto.ColumnStatistics statistics = 7;
  for (unsigned int i = 0, n = this->statistics_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->statistics(i), false, target);
  }

  // optional uint32 rowIndexStride = 8;
  if (has_rowindexstride()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->rowindexstride(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.Footer)
  return target;
}

size_t Footer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.Footer)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 163u) {
    // optional uint64 headerLength = 1;
    if (has_headerlength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->headerlength());
    }

    // optional uint64 contentLength = 2;
    if (has_contentlength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->contentlength());
    }

    // optional uint64 numberOfRows = 6;
    if (has_numberofrows()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->numberofrows());
    }

    // optional uint32 rowIndexStride = 8;
    if (has_rowindexstride()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rowindexstride());
    }

  }
  // repeated .orc.proto.StripeInformation stripes = 3;
  {
    unsigned int count = this->stripes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stripes(i));
    }
  }

  // repeated .orc.proto.Type types = 4;
  {
    unsigned int count = this->types_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->types(i));
    }
  }

  // repeated .orc.proto.UserMetadataItem metadata = 5;
  {
    unsigned int count = this->metadata_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metadata(i));
    }
  }

  // repeated .orc.proto.ColumnStatistics statistics = 7;
  {
    unsigned int count = this->statistics_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->statistics(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Footer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.Footer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Footer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Footer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.Footer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.Footer)
    UnsafeMergeFrom(*source);
  }
}

void Footer::MergeFrom(const Footer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.Footer)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Footer::UnsafeMergeFrom(const Footer& from) {
  GOOGLE_DCHECK(&from != this);
  stripes_.MergeFrom(from.stripes_);
  types_.MergeFrom(from.types_);
  metadata_.MergeFrom(from.metadata_);
  statistics_.MergeFrom(from.statistics_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_headerlength()) {
      set_headerlength(from.headerlength());
    }
    if (from.has_contentlength()) {
      set_contentlength(from.contentlength());
    }
    if (from.has_numberofrows()) {
      set_numberofrows(from.numberofrows());
    }
    if (from.has_rowindexstride()) {
      set_rowindexstride(from.rowindexstride());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Footer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.Footer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Footer::CopyFrom(const Footer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.Footer)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Footer::IsInitialized() const {

  return true;
}

void Footer::Swap(Footer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Footer::InternalSwap(Footer* other) {
  std::swap(headerlength_, other->headerlength_);
  std::swap(contentlength_, other->contentlength_);
  stripes_.UnsafeArenaSwap(&other->stripes_);
  types_.UnsafeArenaSwap(&other->types_);
  metadata_.UnsafeArenaSwap(&other->metadata_);
  std::swap(numberofrows_, other->numberofrows_);
  statistics_.UnsafeArenaSwap(&other->statistics_);
  std::swap(rowindexstride_, other->rowindexstride_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Footer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Footer_descriptor_;
  metadata.reflection = Footer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Footer

// optional uint64 headerLength = 1;
bool Footer::has_headerlength() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Footer::set_has_headerlength() {
  _has_bits_[0] |= 0x00000001u;
}
void Footer::clear_has_headerlength() {
  _has_bits_[0] &= ~0x00000001u;
}
void Footer::clear_headerlength() {
  headerlength_ = GOOGLE_ULONGLONG(0);
  clear_has_headerlength();
}
::google::protobuf::uint64 Footer::headerlength() const {
  // @@protoc_insertion_point(field_get:orc.proto.Footer.headerLength)
  return headerlength_;
}
void Footer::set_headerlength(::google::protobuf::uint64 value) {
  set_has_headerlength();
  headerlength_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.Footer.headerLength)
}

// optional uint64 contentLength = 2;
bool Footer::has_contentlength() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Footer::set_has_contentlength() {
  _has_bits_[0] |= 0x00000002u;
}
void Footer::clear_has_contentlength() {
  _has_bits_[0] &= ~0x00000002u;
}
void Footer::clear_contentlength() {
  contentlength_ = GOOGLE_ULONGLONG(0);
  clear_has_contentlength();
}
::google::protobuf::uint64 Footer::contentlength() const {
  // @@protoc_insertion_point(field_get:orc.proto.Footer.contentLength)
  return contentlength_;
}
void Footer::set_contentlength(::google::protobuf::uint64 value) {
  set_has_contentlength();
  contentlength_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.Footer.contentLength)
}

// repeated .orc.proto.StripeInformation stripes = 3;
int Footer::stripes_size() const {
  return stripes_.size();
}
void Footer::clear_stripes() {
  stripes_.Clear();
}
const ::orc::proto::StripeInformation& Footer::stripes(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.Footer.stripes)
  return stripes_.Get(index);
}
::orc::proto::StripeInformation* Footer::mutable_stripes(int index) {
  // @@protoc_insertion_point(field_mutable:orc.proto.Footer.stripes)
  return stripes_.Mutable(index);
}
::orc::proto::StripeInformation* Footer::add_stripes() {
  // @@protoc_insertion_point(field_add:orc.proto.Footer.stripes)
  return stripes_.Add();
}
::google::protobuf::RepeatedPtrField< ::orc::proto::StripeInformation >*
Footer::mutable_stripes() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.Footer.stripes)
  return &stripes_;
}
const ::google::protobuf::RepeatedPtrField< ::orc::proto::StripeInformation >&
Footer::stripes() const {
  // @@protoc_insertion_point(field_list:orc.proto.Footer.stripes)
  return stripes_;
}

// repeated .orc.proto.Type types = 4;
int Footer::types_size() const {
  return types_.size();
}
void Footer::clear_types() {
  types_.Clear();
}
const ::orc::proto::Type& Footer::types(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.Footer.types)
  return types_.Get(index);
}
::orc::proto::Type* Footer::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:orc.proto.Footer.types)
  return types_.Mutable(index);
}
::orc::proto::Type* Footer::add_types() {
  // @@protoc_insertion_point(field_add:orc.proto.Footer.types)
  return types_.Add();
}
::google::protobuf::RepeatedPtrField< ::orc::proto::Type >*
Footer::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.Footer.types)
  return &types_;
}
const ::google::protobuf::RepeatedPtrField< ::orc::proto::Type >&
Footer::types() const {
  // @@protoc_insertion_point(field_list:orc.proto.Footer.types)
  return types_;
}

// repeated .orc.proto.UserMetadataItem metadata = 5;
int Footer::metadata_size() const {
  return metadata_.size();
}
void Footer::clear_metadata() {
  metadata_.Clear();
}
const ::orc::proto::UserMetadataItem& Footer::metadata(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.Footer.metadata)
  return metadata_.Get(index);
}
::orc::proto::UserMetadataItem* Footer::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:orc.proto.Footer.metadata)
  return metadata_.Mutable(index);
}
::orc::proto::UserMetadataItem* Footer::add_metadata() {
  // @@protoc_insertion_point(field_add:orc.proto.Footer.metadata)
  return metadata_.Add();
}
::google::protobuf::RepeatedPtrField< ::orc::proto::UserMetadataItem >*
Footer::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.Footer.metadata)
  return &metadata_;
}
const ::google::protobuf::RepeatedPtrField< ::orc::proto::UserMetadataItem >&
Footer::metadata() const {
  // @@protoc_insertion_point(field_list:orc.proto.Footer.metadata)
  return metadata_;
}

// optional uint64 numberOfRows = 6;
bool Footer::has_numberofrows() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Footer::set_has_numberofrows() {
  _has_bits_[0] |= 0x00000020u;
}
void Footer::clear_has_numberofrows() {
  _has_bits_[0] &= ~0x00000020u;
}
void Footer::clear_numberofrows() {
  numberofrows_ = GOOGLE_ULONGLONG(0);
  clear_has_numberofrows();
}
::google::protobuf::uint64 Footer::numberofrows() const {
  // @@protoc_insertion_point(field_get:orc.proto.Footer.numberOfRows)
  return numberofrows_;
}
void Footer::set_numberofrows(::google::protobuf::uint64 value) {
  set_has_numberofrows();
  numberofrows_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.Footer.numberOfRows)
}

// repeated .orc.proto.ColumnStatistics statistics = 7;
int Footer::statistics_size() const {
  return statistics_.size();
}
void Footer::clear_statistics() {
  statistics_.Clear();
}
const ::orc::proto::ColumnStatistics& Footer::statistics(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.Footer.statistics)
  return statistics_.Get(index);
}
::orc::proto::ColumnStatistics* Footer::mutable_statistics(int index) {
  // @@protoc_insertion_point(field_mutable:orc.proto.Footer.statistics)
  return statistics_.Mutable(index);
}
::orc::proto::ColumnStatistics* Footer::add_statistics() {
  // @@protoc_insertion_point(field_add:orc.proto.Footer.statistics)
  return statistics_.Add();
}
::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics >*
Footer::mutable_statistics() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.Footer.statistics)
  return &statistics_;
}
const ::google::protobuf::RepeatedPtrField< ::orc::proto::ColumnStatistics >&
Footer::statistics() const {
  // @@protoc_insertion_point(field_list:orc.proto.Footer.statistics)
  return statistics_;
}

// optional uint32 rowIndexStride = 8;
bool Footer::has_rowindexstride() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Footer::set_has_rowindexstride() {
  _has_bits_[0] |= 0x00000080u;
}
void Footer::clear_has_rowindexstride() {
  _has_bits_[0] &= ~0x00000080u;
}
void Footer::clear_rowindexstride() {
  rowindexstride_ = 0u;
  clear_has_rowindexstride();
}
::google::protobuf::uint32 Footer::rowindexstride() const {
  // @@protoc_insertion_point(field_get:orc.proto.Footer.rowIndexStride)
  return rowindexstride_;
}
void Footer::set_rowindexstride(::google::protobuf::uint32 value) {
  set_has_rowindexstride();
  rowindexstride_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.Footer.rowIndexStride)
}

inline const Footer* Footer::internal_default_instance() {
  return &Footer_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PostScript::kFooterLengthFieldNumber;
const int PostScript::kCompressionFieldNumber;
const int PostScript::kCompressionBlockSizeFieldNumber;
const int PostScript::kVersionFieldNumber;
const int PostScript::kMetadataLengthFieldNumber;
const int PostScript::kWriterVersionFieldNumber;
const int PostScript::kMagicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PostScript::PostScript()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.PostScript)
}

void PostScript::InitAsDefaultInstance() {
}

PostScript::PostScript(const PostScript& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.PostScript)
}

void PostScript::SharedCtor() {
  _cached_size_ = 0;
  magic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&footerlength_, 0, reinterpret_cast<char*>(&metadatalength_) -
    reinterpret_cast<char*>(&footerlength_) + sizeof(metadatalength_));
}

PostScript::~PostScript() {
  // @@protoc_insertion_point(destructor:orc.proto.PostScript)
  SharedDtor();
}

void PostScript::SharedDtor() {
  magic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PostScript::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PostScript::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PostScript_descriptor_;
}

const PostScript& PostScript::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PostScript> PostScript_default_instance_;

PostScript* PostScript::New(::google::protobuf::Arena* arena) const {
  PostScript* n = new PostScript;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PostScript::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.PostScript)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PostScript, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PostScript*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 119u) {
    ZR_(footerlength_, metadatalength_);
    if (has_magic()) {
      magic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  version_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PostScript::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.PostScript)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(64002);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 footerLength = 1;
      case 1: {
        if (tag == 8) {
          set_has_footerlength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &footerlength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_compression;
        break;
      }

      // optional .orc.proto.CompressionKind compression = 2;
      case 2: {
        if (tag == 16) {
         parse_compression:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::orc::proto::CompressionKind_IsValid(value)) {
            set_compression(static_cast< ::orc::proto::CompressionKind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_compressionBlockSize;
        break;
      }

      // optional uint64 compressionBlockSize = 3;
      case 3: {
        if (tag == 24) {
         parse_compressionBlockSize:
          set_has_compressionblocksize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &compressionblocksize_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_version;
        break;
      }

      // repeated uint32 version = 4 [packed = true];
      case 4: {
        if (tag == 34) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_version())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34, input, this->mutable_version())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_metadataLength;
        break;
      }

      // optional uint64 metadataLength = 5;
      case 5: {
        if (tag == 40) {
         parse_metadataLength:
          set_has_metadatalength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &metadatalength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_writerVersion;
        break;
      }

      // optional uint32 writerVersion = 6;
      case 6: {
        if (tag == 48) {
         parse_writerVersion:
          set_has_writerversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &writerversion_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64002)) goto parse_magic;
        break;
      }

      // optional string magic = 8000;
      case 8000: {
        if (tag == 64002) {
         parse_magic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_magic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->magic().data(), this->magic().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "orc.proto.PostScript.magic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.PostScript)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.PostScript)
  return false;
#undef DO_
}

void PostScript::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.PostScript)
  // optional uint64 footerLength = 1;
  if (has_footerlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->footerlength(), output);
  }

  // optional .orc.proto.CompressionKind compression = 2;
  if (has_compression()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->compression(), output);
  }

  // optional uint64 compressionBlockSize = 3;
  if (has_compressionblocksize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->compressionblocksize(), output);
  }

  // repeated uint32 version = 4 [packed = true];
  if (this->version_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_version_cached_byte_size_);
  }
  for (int i = 0; i < this->version_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->version(i), output);
  }

  // optional uint64 metadataLength = 5;
  if (has_metadatalength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->metadatalength(), output);
  }

  // optional uint32 writerVersion = 6;
  if (has_writerversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->writerversion(), output);
  }

  // optional string magic = 8000;
  if (has_magic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->magic().data(), this->magic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.PostScript.magic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8000, this->magic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.PostScript)
}

::google::protobuf::uint8* PostScript::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.PostScript)
  // optional uint64 footerLength = 1;
  if (has_footerlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->footerlength(), target);
  }

  // optional .orc.proto.CompressionKind compression = 2;
  if (has_compression()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->compression(), target);
  }

  // optional uint64 compressionBlockSize = 3;
  if (has_compressionblocksize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->compressionblocksize(), target);
  }

  // repeated uint32 version = 4 [packed = true];
  if (this->version_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _version_cached_byte_size_, target);
  }
  for (int i = 0; i < this->version_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->version(i), target);
  }

  // optional uint64 metadataLength = 5;
  if (has_metadatalength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->metadatalength(), target);
  }

  // optional uint32 writerVersion = 6;
  if (has_writerversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->writerversion(), target);
  }

  // optional string magic = 8000;
  if (has_magic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->magic().data(), this->magic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "orc.proto.PostScript.magic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8000, this->magic(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.PostScript)
  return target;
}

size_t PostScript::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.PostScript)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 119u) {
    // optional uint64 footerLength = 1;
    if (has_footerlength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->footerlength());
    }

    // optional .orc.proto.CompressionKind compression = 2;
    if (has_compression()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->compression());
    }

    // optional uint64 compressionBlockSize = 3;
    if (has_compressionblocksize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->compressionblocksize());
    }

    // optional uint64 metadataLength = 5;
    if (has_metadatalength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->metadatalength());
    }

    // optional uint32 writerVersion = 6;
    if (has_writerversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->writerversion());
    }

    // optional string magic = 8000;
    if (has_magic()) {
      total_size += 3 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->magic());
    }

  }
  // repeated uint32 version = 4 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->version_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->version(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _version_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PostScript::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.PostScript)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PostScript* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PostScript>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.PostScript)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.PostScript)
    UnsafeMergeFrom(*source);
  }
}

void PostScript::MergeFrom(const PostScript& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.PostScript)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PostScript::UnsafeMergeFrom(const PostScript& from) {
  GOOGLE_DCHECK(&from != this);
  version_.UnsafeMergeFrom(from.version_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_footerlength()) {
      set_footerlength(from.footerlength());
    }
    if (from.has_compression()) {
      set_compression(from.compression());
    }
    if (from.has_compressionblocksize()) {
      set_compressionblocksize(from.compressionblocksize());
    }
    if (from.has_metadatalength()) {
      set_metadatalength(from.metadatalength());
    }
    if (from.has_writerversion()) {
      set_writerversion(from.writerversion());
    }
    if (from.has_magic()) {
      set_has_magic();
      magic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.magic_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PostScript::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.PostScript)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostScript::CopyFrom(const PostScript& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.PostScript)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PostScript::IsInitialized() const {

  return true;
}

void PostScript::Swap(PostScript* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PostScript::InternalSwap(PostScript* other) {
  std::swap(footerlength_, other->footerlength_);
  std::swap(compression_, other->compression_);
  std::swap(compressionblocksize_, other->compressionblocksize_);
  version_.UnsafeArenaSwap(&other->version_);
  std::swap(metadatalength_, other->metadatalength_);
  std::swap(writerversion_, other->writerversion_);
  magic_.Swap(&other->magic_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PostScript::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PostScript_descriptor_;
  metadata.reflection = PostScript_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PostScript

// optional uint64 footerLength = 1;
bool PostScript::has_footerlength() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PostScript::set_has_footerlength() {
  _has_bits_[0] |= 0x00000001u;
}
void PostScript::clear_has_footerlength() {
  _has_bits_[0] &= ~0x00000001u;
}
void PostScript::clear_footerlength() {
  footerlength_ = GOOGLE_ULONGLONG(0);
  clear_has_footerlength();
}
::google::protobuf::uint64 PostScript::footerlength() const {
  // @@protoc_insertion_point(field_get:orc.proto.PostScript.footerLength)
  return footerlength_;
}
void PostScript::set_footerlength(::google::protobuf::uint64 value) {
  set_has_footerlength();
  footerlength_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.PostScript.footerLength)
}

// optional .orc.proto.CompressionKind compression = 2;
bool PostScript::has_compression() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PostScript::set_has_compression() {
  _has_bits_[0] |= 0x00000002u;
}
void PostScript::clear_has_compression() {
  _has_bits_[0] &= ~0x00000002u;
}
void PostScript::clear_compression() {
  compression_ = 0;
  clear_has_compression();
}
::orc::proto::CompressionKind PostScript::compression() const {
  // @@protoc_insertion_point(field_get:orc.proto.PostScript.compression)
  return static_cast< ::orc::proto::CompressionKind >(compression_);
}
void PostScript::set_compression(::orc::proto::CompressionKind value) {
  assert(::orc::proto::CompressionKind_IsValid(value));
  set_has_compression();
  compression_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.PostScript.compression)
}

// optional uint64 compressionBlockSize = 3;
bool PostScript::has_compressionblocksize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PostScript::set_has_compressionblocksize() {
  _has_bits_[0] |= 0x00000004u;
}
void PostScript::clear_has_compressionblocksize() {
  _has_bits_[0] &= ~0x00000004u;
}
void PostScript::clear_compressionblocksize() {
  compressionblocksize_ = GOOGLE_ULONGLONG(0);
  clear_has_compressionblocksize();
}
::google::protobuf::uint64 PostScript::compressionblocksize() const {
  // @@protoc_insertion_point(field_get:orc.proto.PostScript.compressionBlockSize)
  return compressionblocksize_;
}
void PostScript::set_compressionblocksize(::google::protobuf::uint64 value) {
  set_has_compressionblocksize();
  compressionblocksize_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.PostScript.compressionBlockSize)
}

// repeated uint32 version = 4 [packed = true];
int PostScript::version_size() const {
  return version_.size();
}
void PostScript::clear_version() {
  version_.Clear();
}
::google::protobuf::uint32 PostScript::version(int index) const {
  // @@protoc_insertion_point(field_get:orc.proto.PostScript.version)
  return version_.Get(index);
}
void PostScript::set_version(int index, ::google::protobuf::uint32 value) {
  version_.Set(index, value);
  // @@protoc_insertion_point(field_set:orc.proto.PostScript.version)
}
void PostScript::add_version(::google::protobuf::uint32 value) {
  version_.Add(value);
  // @@protoc_insertion_point(field_add:orc.proto.PostScript.version)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PostScript::version() const {
  // @@protoc_insertion_point(field_list:orc.proto.PostScript.version)
  return version_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PostScript::mutable_version() {
  // @@protoc_insertion_point(field_mutable_list:orc.proto.PostScript.version)
  return &version_;
}

// optional uint64 metadataLength = 5;
bool PostScript::has_metadatalength() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PostScript::set_has_metadatalength() {
  _has_bits_[0] |= 0x00000010u;
}
void PostScript::clear_has_metadatalength() {
  _has_bits_[0] &= ~0x00000010u;
}
void PostScript::clear_metadatalength() {
  metadatalength_ = GOOGLE_ULONGLONG(0);
  clear_has_metadatalength();
}
::google::protobuf::uint64 PostScript::metadatalength() const {
  // @@protoc_insertion_point(field_get:orc.proto.PostScript.metadataLength)
  return metadatalength_;
}
void PostScript::set_metadatalength(::google::protobuf::uint64 value) {
  set_has_metadatalength();
  metadatalength_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.PostScript.metadataLength)
}

// optional uint32 writerVersion = 6;
bool PostScript::has_writerversion() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PostScript::set_has_writerversion() {
  _has_bits_[0] |= 0x00000020u;
}
void PostScript::clear_has_writerversion() {
  _has_bits_[0] &= ~0x00000020u;
}
void PostScript::clear_writerversion() {
  writerversion_ = 0u;
  clear_has_writerversion();
}
::google::protobuf::uint32 PostScript::writerversion() const {
  // @@protoc_insertion_point(field_get:orc.proto.PostScript.writerVersion)
  return writerversion_;
}
void PostScript::set_writerversion(::google::protobuf::uint32 value) {
  set_has_writerversion();
  writerversion_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.PostScript.writerVersion)
}

// optional string magic = 8000;
bool PostScript::has_magic() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PostScript::set_has_magic() {
  _has_bits_[0] |= 0x00000040u;
}
void PostScript::clear_has_magic() {
  _has_bits_[0] &= ~0x00000040u;
}
void PostScript::clear_magic() {
  magic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_magic();
}
const ::std::string& PostScript::magic() const {
  // @@protoc_insertion_point(field_get:orc.proto.PostScript.magic)
  return magic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PostScript::set_magic(const ::std::string& value) {
  set_has_magic();
  magic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:orc.proto.PostScript.magic)
}
void PostScript::set_magic(const char* value) {
  set_has_magic();
  magic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:orc.proto.PostScript.magic)
}
void PostScript::set_magic(const char* value, size_t size) {
  set_has_magic();
  magic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:orc.proto.PostScript.magic)
}
::std::string* PostScript::mutable_magic() {
  set_has_magic();
  // @@protoc_insertion_point(field_mutable:orc.proto.PostScript.magic)
  return magic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PostScript::release_magic() {
  // @@protoc_insertion_point(field_release:orc.proto.PostScript.magic)
  clear_has_magic();
  return magic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PostScript::set_allocated_magic(::std::string* magic) {
  if (magic != NULL) {
    set_has_magic();
  } else {
    clear_has_magic();
  }
  magic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), magic);
  // @@protoc_insertion_point(field_set_allocated:orc.proto.PostScript.magic)
}

inline const PostScript* PostScript::internal_default_instance() {
  return &PostScript_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileTail::kPostscriptFieldNumber;
const int FileTail::kFooterFieldNumber;
const int FileTail::kFileLengthFieldNumber;
const int FileTail::kPostscriptLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileTail::FileTail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_orc_5fproto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:orc.proto.FileTail)
}

void FileTail::InitAsDefaultInstance() {
  postscript_ = const_cast< ::orc::proto::PostScript*>(
      ::orc::proto::PostScript::internal_default_instance());
  footer_ = const_cast< ::orc::proto::Footer*>(
      ::orc::proto::Footer::internal_default_instance());
}

FileTail::FileTail(const FileTail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:orc.proto.FileTail)
}

void FileTail::SharedCtor() {
  _cached_size_ = 0;
  postscript_ = NULL;
  footer_ = NULL;
  ::memset(&filelength_, 0, reinterpret_cast<char*>(&postscriptlength_) -
    reinterpret_cast<char*>(&filelength_) + sizeof(postscriptlength_));
}

FileTail::~FileTail() {
  // @@protoc_insertion_point(destructor:orc.proto.FileTail)
  SharedDtor();
}

void FileTail::SharedDtor() {
  if (this != &FileTail_default_instance_.get()) {
    delete postscript_;
    delete footer_;
  }
}

void FileTail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileTail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileTail_descriptor_;
}

const FileTail& FileTail::default_instance() {
  protobuf_InitDefaults_orc_5fproto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FileTail> FileTail_default_instance_;

FileTail* FileTail::New(::google::protobuf::Arena* arena) const {
  FileTail* n = new FileTail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileTail::Clear() {
// @@protoc_insertion_point(message_clear_start:orc.proto.FileTail)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FileTail, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FileTail*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(filelength_, postscriptlength_);
    if (has_postscript()) {
      if (postscript_ != NULL) postscript_->::orc::proto::PostScript::Clear();
    }
    if (has_footer()) {
      if (footer_ != NULL) footer_->::orc::proto::Footer::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FileTail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:orc.proto.FileTail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .orc.proto.PostScript postscript = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_postscript()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_footer;
        break;
      }

      // optional .orc.proto.Footer footer = 2;
      case 2: {
        if (tag == 18) {
         parse_footer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_footer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_fileLength;
        break;
      }

      // optional uint64 fileLength = 3;
      case 3: {
        if (tag == 24) {
         parse_fileLength:
          set_has_filelength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &filelength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_postscriptLength;
        break;
      }

      // optional uint64 postscriptLength = 4;
      case 4: {
        if (tag == 32) {
         parse_postscriptLength:
          set_has_postscriptlength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &postscriptlength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:orc.proto.FileTail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:orc.proto.FileTail)
  return false;
#undef DO_
}

void FileTail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:orc.proto.FileTail)
  // optional .orc.proto.PostScript postscript = 1;
  if (has_postscript()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->postscript_, output);
  }

  // optional .orc.proto.Footer footer = 2;
  if (has_footer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->footer_, output);
  }

  // optional uint64 fileLength = 3;
  if (has_filelength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->filelength(), output);
  }

  // optional uint64 postscriptLength = 4;
  if (has_postscriptlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->postscriptlength(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:orc.proto.FileTail)
}

::google::protobuf::uint8* FileTail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:orc.proto.FileTail)
  // optional .orc.proto.PostScript postscript = 1;
  if (has_postscript()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->postscript_, false, target);
  }

  // optional .orc.proto.Footer footer = 2;
  if (has_footer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->footer_, false, target);
  }

  // optional uint64 fileLength = 3;
  if (has_filelength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->filelength(), target);
  }

  // optional uint64 postscriptLength = 4;
  if (has_postscriptlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->postscriptlength(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:orc.proto.FileTail)
  return target;
}

size_t FileTail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:orc.proto.FileTail)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional .orc.proto.PostScript postscript = 1;
    if (has_postscript()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->postscript_);
    }

    // optional .orc.proto.Footer footer = 2;
    if (has_footer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->footer_);
    }

    // optional uint64 fileLength = 3;
    if (has_filelength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->filelength());
    }

    // optional uint64 postscriptLength = 4;
    if (has_postscriptlength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->postscriptlength());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileTail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:orc.proto.FileTail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FileTail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileTail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:orc.proto.FileTail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:orc.proto.FileTail)
    UnsafeMergeFrom(*source);
  }
}

void FileTail::MergeFrom(const FileTail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:orc.proto.FileTail)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FileTail::UnsafeMergeFrom(const FileTail& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_postscript()) {
      mutable_postscript()->::orc::proto::PostScript::MergeFrom(from.postscript());
    }
    if (from.has_footer()) {
      mutable_footer()->::orc::proto::Footer::MergeFrom(from.footer());
    }
    if (from.has_filelength()) {
      set_filelength(from.filelength());
    }
    if (from.has_postscriptlength()) {
      set_postscriptlength(from.postscriptlength());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FileTail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:orc.proto.FileTail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileTail::CopyFrom(const FileTail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:orc.proto.FileTail)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FileTail::IsInitialized() const {

  return true;
}

void FileTail::Swap(FileTail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileTail::InternalSwap(FileTail* other) {
  std::swap(postscript_, other->postscript_);
  std::swap(footer_, other->footer_);
  std::swap(filelength_, other->filelength_);
  std::swap(postscriptlength_, other->postscriptlength_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileTail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileTail_descriptor_;
  metadata.reflection = FileTail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileTail

// optional .orc.proto.PostScript postscript = 1;
bool FileTail::has_postscript() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FileTail::set_has_postscript() {
  _has_bits_[0] |= 0x00000001u;
}
void FileTail::clear_has_postscript() {
  _has_bits_[0] &= ~0x00000001u;
}
void FileTail::clear_postscript() {
  if (postscript_ != NULL) postscript_->::orc::proto::PostScript::Clear();
  clear_has_postscript();
}
const ::orc::proto::PostScript& FileTail::postscript() const {
  // @@protoc_insertion_point(field_get:orc.proto.FileTail.postscript)
  return postscript_ != NULL ? *postscript_
                         : *::orc::proto::PostScript::internal_default_instance();
}
::orc::proto::PostScript* FileTail::mutable_postscript() {
  set_has_postscript();
  if (postscript_ == NULL) {
    postscript_ = new ::orc::proto::PostScript;
  }
  // @@protoc_insertion_point(field_mutable:orc.proto.FileTail.postscript)
  return postscript_;
}
::orc::proto::PostScript* FileTail::release_postscript() {
  // @@protoc_insertion_point(field_release:orc.proto.FileTail.postscript)
  clear_has_postscript();
  ::orc::proto::PostScript* temp = postscript_;
  postscript_ = NULL;
  return temp;
}
void FileTail::set_allocated_postscript(::orc::proto::PostScript* postscript) {
  delete postscript_;
  postscript_ = postscript;
  if (postscript) {
    set_has_postscript();
  } else {
    clear_has_postscript();
  }
  // @@protoc_insertion_point(field_set_allocated:orc.proto.FileTail.postscript)
}

// optional .orc.proto.Footer footer = 2;
bool FileTail::has_footer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FileTail::set_has_footer() {
  _has_bits_[0] |= 0x00000002u;
}
void FileTail::clear_has_footer() {
  _has_bits_[0] &= ~0x00000002u;
}
void FileTail::clear_footer() {
  if (footer_ != NULL) footer_->::orc::proto::Footer::Clear();
  clear_has_footer();
}
const ::orc::proto::Footer& FileTail::footer() const {
  // @@protoc_insertion_point(field_get:orc.proto.FileTail.footer)
  return footer_ != NULL ? *footer_
                         : *::orc::proto::Footer::internal_default_instance();
}
::orc::proto::Footer* FileTail::mutable_footer() {
  set_has_footer();
  if (footer_ == NULL) {
    footer_ = new ::orc::proto::Footer;
  }
  // @@protoc_insertion_point(field_mutable:orc.proto.FileTail.footer)
  return footer_;
}
::orc::proto::Footer* FileTail::release_footer() {
  // @@protoc_insertion_point(field_release:orc.proto.FileTail.footer)
  clear_has_footer();
  ::orc::proto::Footer* temp = footer_;
  footer_ = NULL;
  return temp;
}
void FileTail::set_allocated_footer(::orc::proto::Footer* footer) {
  delete footer_;
  footer_ = footer;
  if (footer) {
    set_has_footer();
  } else {
    clear_has_footer();
  }
  // @@protoc_insertion_point(field_set_allocated:orc.proto.FileTail.footer)
}

// optional uint64 fileLength = 3;
bool FileTail::has_filelength() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FileTail::set_has_filelength() {
  _has_bits_[0] |= 0x00000004u;
}
void FileTail::clear_has_filelength() {
  _has_bits_[0] &= ~0x00000004u;
}
void FileTail::clear_filelength() {
  filelength_ = GOOGLE_ULONGLONG(0);
  clear_has_filelength();
}
::google::protobuf::uint64 FileTail::filelength() const {
  // @@protoc_insertion_point(field_get:orc.proto.FileTail.fileLength)
  return filelength_;
}
void FileTail::set_filelength(::google::protobuf::uint64 value) {
  set_has_filelength();
  filelength_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.FileTail.fileLength)
}

// optional uint64 postscriptLength = 4;
bool FileTail::has_postscriptlength() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FileTail::set_has_postscriptlength() {
  _has_bits_[0] |= 0x00000008u;
}
void FileTail::clear_has_postscriptlength() {
  _has_bits_[0] &= ~0x00000008u;
}
void FileTail::clear_postscriptlength() {
  postscriptlength_ = GOOGLE_ULONGLONG(0);
  clear_has_postscriptlength();
}
::google::protobuf::uint64 FileTail::postscriptlength() const {
  // @@protoc_insertion_point(field_get:orc.proto.FileTail.postscriptLength)
  return postscriptlength_;
}
void FileTail::set_postscriptlength(::google::protobuf::uint64 value) {
  set_has_postscriptlength();
  postscriptlength_ = value;
  // @@protoc_insertion_point(field_set:orc.proto.FileTail.postscriptLength)
}

inline const FileTail* FileTail::internal_default_instance() {
  return &FileTail_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace orc

// @@protoc_insertion_point(global_scope)
