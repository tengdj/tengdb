// Generated by llvm2cpp - DO NOT MODIFY!

#include <llvm/Pass.h>
#include <llvm/ADT/SmallVector.h>
#include <llvm/Analysis/Verifier.h>
#include <llvm/IR/BasicBlock.h>
#include <llvm/IR/CallingConv.h>
#include <llvm/IR/Constants.h>
#include <llvm/IR/DerivedTypes.h>
#include <llvm/IR/Function.h>
#include <llvm/IR/GlobalVariable.h>
#include <llvm/IR/IRPrintingPasses.h>
#include <llvm/IR/InlineAsm.h>
#include <llvm/IR/Instructions.h>
#include <llvm/IR/LLVMContext.h>
#include <llvm/IR/LegacyPassManager.h>
#include <llvm/IR/Module.h>
#include <llvm/Support/FormattedStream.h>
#include <llvm/Support/MathExtras.h>
#include <algorithm>
using namespace llvm;

Module* makeLLVMModule();

int main(int argc, char**argv) {
  Module* Mod = makeLLVMModule();
  verifyModule(*Mod, PrintMessageAction);
  PassManager PM;
  PM.add(createPrintModulePass(&outs()));
  PM.run(*Mod);
  return 0;
}


Module* makeLLVMModule() {
 // Module Construction
 Module* mod = new Module("shuffle256.ll", getGlobalContext());
 mod->setDataLayout("");
 mod->setTargetTriple("x86_64-unknown-linux-gnu");
 
 // Type Definitions
 std::vector<Type*>FuncTy_0_args;
 PointerType* PointerTy_1 = PointerType::get(IntegerType::get(mod->getContext(), 32), 0);
 
 FuncTy_0_args.push_back(PointerTy_1);
 PointerType* PointerTy_2 = PointerType::get(IntegerType::get(mod->getContext(), 8), 0);
 
 FuncTy_0_args.push_back(PointerTy_2);
 FunctionType* FuncTy_0 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_0_args,
  /*isVarArg=*/false);
 
 VectorType* VectorTy_4 = VectorType::get(IntegerType::get(mod->getContext(), 8), 32);
 
 PointerType* PointerTy_3 = PointerType::get(VectorTy_4, 0);
 
 VectorType* VectorTy_7 = VectorType::get(IntegerType::get(mod->getContext(), 64), 4);
 
 PointerType* PointerTy_6 = PointerType::get(VectorTy_7, 0);
 
 PointerType* PointerTy_5 = PointerType::get(PointerTy_6, 0);
 
 VectorType* VectorTy_9 = VectorType::get(IntegerType::get(mod->getContext(), 32), 8);
 
 PointerType* PointerTy_8 = PointerType::get(VectorTy_9, 0);
 
 PointerType* PointerTy_10 = PointerType::get(PointerTy_1, 0);
 
 PointerType* PointerTy_11 = PointerType::get(PointerTy_2, 0);
 
 StructType *StructTy_struct___loadu_si256 = mod->getTypeByName("struct.__loadu_si256");
 if (!StructTy_struct___loadu_si256) {
 StructTy_struct___loadu_si256 = StructType::create(mod->getContext(), "struct.__loadu_si256");
 }
 std::vector<Type*>StructTy_struct___loadu_si256_fields;
 StructTy_struct___loadu_si256_fields.push_back(VectorTy_7);
 if (StructTy_struct___loadu_si256->isOpaque()) {
 StructTy_struct___loadu_si256->setBody(StructTy_struct___loadu_si256_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_12 = PointerType::get(StructTy_struct___loadu_si256, 0);
 
 std::vector<Type*>FuncTy_14_args;
 FuncTy_14_args.push_back(VectorTy_9);
 FuncTy_14_args.push_back(VectorTy_9);
 FunctionType* FuncTy_14 = FunctionType::get(
  /*Result=*/VectorTy_9,
  /*Params=*/FuncTy_14_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_13 = PointerType::get(FuncTy_14, 0);
 
 std::vector<Type*>FuncTy_16_args;
 FuncTy_16_args.push_back(VectorTy_4);
 FuncTy_16_args.push_back(VectorTy_4);
 FunctionType* FuncTy_16 = FunctionType::get(
  /*Result=*/VectorTy_4,
  /*Params=*/FuncTy_16_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_15 = PointerType::get(FuncTy_16, 0);
 
 std::vector<Type*>FuncTy_18_args;
 FuncTy_18_args.push_back(PointerTy_2);
 FuncTy_18_args.push_back(VectorTy_4);
 FunctionType* FuncTy_18 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_18_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_17 = PointerType::get(FuncTy_18, 0);
 
 
 // Function Declarations
 
 Function* func__Z10shuffle256PjPh = mod->getFunction("_Z10shuffle256PjPh");
 if (!func__Z10shuffle256PjPh) {
 func__Z10shuffle256PjPh = Function::Create(
  /*Type=*/FuncTy_0,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_Z10shuffle256PjPh", mod); 
 func__Z10shuffle256PjPh->setCallingConv(CallingConv::C);
 }
 AttributeSet func__Z10shuffle256PjPh_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::UWTable);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__Z10shuffle256PjPh_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__Z10shuffle256PjPh->setAttributes(func__Z10shuffle256PjPh_PAL);
 
 Function* func_llvm_x86_avx2_permd = mod->getFunction("llvm.x86.avx2.permd");
 if (!func_llvm_x86_avx2_permd) {
 func_llvm_x86_avx2_permd = Function::Create(
  /*Type=*/FuncTy_14,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"llvm.x86.avx2.permd", mod); // (external, no body)
 func_llvm_x86_avx2_permd->setCallingConv(CallingConv::C);
 }
 AttributeSet func_llvm_x86_avx2_permd_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::ReadNone);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func_llvm_x86_avx2_permd_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func_llvm_x86_avx2_permd->setAttributes(func_llvm_x86_avx2_permd_PAL);
 
 Function* func_llvm_x86_avx2_pshuf_b = mod->getFunction("llvm.x86.avx2.pshuf.b");
 if (!func_llvm_x86_avx2_pshuf_b) {
 func_llvm_x86_avx2_pshuf_b = Function::Create(
  /*Type=*/FuncTy_16,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"llvm.x86.avx2.pshuf.b", mod); // (external, no body)
 func_llvm_x86_avx2_pshuf_b->setCallingConv(CallingConv::C);
 }
 AttributeSet func_llvm_x86_avx2_pshuf_b_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::ReadNone);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func_llvm_x86_avx2_pshuf_b_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func_llvm_x86_avx2_pshuf_b->setAttributes(func_llvm_x86_avx2_pshuf_b_PAL);
 
 Function* func_llvm_x86_avx_storeu_dq_256 = mod->getFunction("llvm.x86.avx.storeu.dq.256");
 if (!func_llvm_x86_avx_storeu_dq_256) {
 func_llvm_x86_avx_storeu_dq_256 = Function::Create(
  /*Type=*/FuncTy_18,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"llvm.x86.avx.storeu.dq.256", mod); // (external, no body)
 func_llvm_x86_avx_storeu_dq_256->setCallingConv(CallingConv::C);
 }
 AttributeSet func_llvm_x86_avx_storeu_dq_256_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func_llvm_x86_avx_storeu_dq_256_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func_llvm_x86_avx_storeu_dq_256->setAttributes(func_llvm_x86_avx_storeu_dq_256_PAL);
 
 // Global Variable Declarations

 
 // Constant Definitions
 ConstantInt* const_int32_19 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("1"), 10));
 ConstantInt* const_int32_20 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("6"), 10));
 ConstantInt* const_int32_21 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("5"), 10));
 ConstantInt* const_int32_22 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("4"), 10));
 ConstantInt* const_int32_23 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("3"), 10));
 ConstantInt* const_int32_24 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("2"), 10));
 ConstantInt* const_int32_25 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("0"), 10));
 UndefValue* const_packed_26 = UndefValue::get(VectorTy_9);
 ConstantInt* const_int32_27 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("7"), 10));
 ConstantInt* const_int8_28 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("-1"), 10));
 ConstantInt* const_int8_29 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("9"), 10));
 ConstantInt* const_int8_30 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("10"), 10));
 ConstantInt* const_int8_31 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("11"), 10));
 ConstantInt* const_int8_32 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("6"), 10));
 ConstantInt* const_int8_33 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("7"), 10));
 ConstantInt* const_int8_34 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("8"), 10));
 ConstantInt* const_int8_35 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("3"), 10));
 ConstantInt* const_int8_36 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("4"), 10));
 ConstantInt* const_int8_37 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("5"), 10));
 ConstantInt* const_int8_38 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("0"), 10));
 ConstantInt* const_int8_39 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("1"), 10));
 ConstantInt* const_int8_40 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("2"), 10));
 UndefValue* const_packed_41 = UndefValue::get(VectorTy_4);
 ConstantInt* const_int32_42 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("8"), 10));
 ConstantInt* const_int32_43 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("9"), 10));
 ConstantInt* const_int32_44 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("10"), 10));
 ConstantInt* const_int32_45 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("11"), 10));
 ConstantInt* const_int32_46 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("12"), 10));
 ConstantInt* const_int32_47 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("13"), 10));
 ConstantInt* const_int32_48 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("14"), 10));
 ConstantInt* const_int32_49 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("15"), 10));
 ConstantInt* const_int32_50 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("16"), 10));
 ConstantInt* const_int32_51 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("17"), 10));
 ConstantInt* const_int32_52 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("18"), 10));
 ConstantInt* const_int32_53 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("19"), 10));
 ConstantInt* const_int32_54 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("20"), 10));
 ConstantInt* const_int32_55 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("21"), 10));
 ConstantInt* const_int32_56 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("22"), 10));
 ConstantInt* const_int32_57 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("23"), 10));
 ConstantInt* const_int32_58 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("24"), 10));
 ConstantInt* const_int32_59 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("25"), 10));
 ConstantInt* const_int32_60 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("26"), 10));
 ConstantInt* const_int32_61 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("27"), 10));
 ConstantInt* const_int32_62 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("28"), 10));
 ConstantInt* const_int32_63 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("29"), 10));
 ConstantInt* const_int32_64 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("30"), 10));
 ConstantInt* const_int32_65 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("31"), 10));
 ConstantInt* const_int64_66 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("0"), 10));
 
 // Global Variable Definitions
 
 // Function Definitions
 
 // Function: _Z10shuffle256PjPh (func__Z10shuffle256PjPh)
 {
  Function::arg_iterator args = func__Z10shuffle256PjPh->arg_begin();
  Value* ptr_result = args++;
  ptr_result->setName("result");
  Value* ptr_byte = args++;
  ptr_byte->setName("byte");
  
  BasicBlock* label_67 = BasicBlock::Create(mod->getContext(), "",func__Z10shuffle256PjPh,0);
  
  // Block  (label_67)
  AllocaInst* ptr_68 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_68->setAlignment(1);
  AllocaInst* ptr_69 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_69->setAlignment(1);
  AllocaInst* ptr_70 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_70->setAlignment(1);
  AllocaInst* ptr_71 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_71->setAlignment(1);
  AllocaInst* ptr_72 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_72->setAlignment(1);
  AllocaInst* ptr_73 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_73->setAlignment(1);
  AllocaInst* ptr_74 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_74->setAlignment(1);
  AllocaInst* ptr_75 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_75->setAlignment(1);
  AllocaInst* ptr_76 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_76->setAlignment(1);
  AllocaInst* ptr_77 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_77->setAlignment(1);
  AllocaInst* ptr_78 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_78->setAlignment(1);
  AllocaInst* ptr_79 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_79->setAlignment(1);
  AllocaInst* ptr_80 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_80->setAlignment(1);
  AllocaInst* ptr_81 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_81->setAlignment(1);
  AllocaInst* ptr_82 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_82->setAlignment(1);
  AllocaInst* ptr_83 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_83->setAlignment(1);
  AllocaInst* ptr_84 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_84->setAlignment(1);
  AllocaInst* ptr_85 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_85->setAlignment(1);
  AllocaInst* ptr_86 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_86->setAlignment(1);
  AllocaInst* ptr_87 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_87->setAlignment(1);
  AllocaInst* ptr_88 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_88->setAlignment(1);
  AllocaInst* ptr_89 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_89->setAlignment(1);
  AllocaInst* ptr_90 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_90->setAlignment(1);
  AllocaInst* ptr_91 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_91->setAlignment(1);
  AllocaInst* ptr_92 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_92->setAlignment(1);
  AllocaInst* ptr_93 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_93->setAlignment(1);
  AllocaInst* ptr_94 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_94->setAlignment(1);
  AllocaInst* ptr_95 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_95->setAlignment(1);
  AllocaInst* ptr_96 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_96->setAlignment(1);
  AllocaInst* ptr_97 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_97->setAlignment(1);
  AllocaInst* ptr_98 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_98->setAlignment(1);
  AllocaInst* ptr_99 = new AllocaInst(IntegerType::get(mod->getContext(), 8), "", label_67);
  ptr_99->setAlignment(1);
  AllocaInst* ptr_100 = new AllocaInst(VectorTy_4, "", label_67);
  ptr_100->setAlignment(32);
  AllocaInst* ptr_101 = new AllocaInst(PointerTy_6, "", label_67);
  ptr_101->setAlignment(8);
  AllocaInst* ptr_102 = new AllocaInst(VectorTy_7, "", label_67);
  ptr_102->setAlignment(32);
  AllocaInst* ptr_103 = new AllocaInst(VectorTy_7, "", label_67);
  ptr_103->setAlignment(32);
  AllocaInst* ptr_104 = new AllocaInst(VectorTy_7, "", label_67);
  ptr_104->setAlignment(32);
  AllocaInst* ptr_105 = new AllocaInst(VectorTy_7, "", label_67);
  ptr_105->setAlignment(32);
  AllocaInst* ptr_106 = new AllocaInst(PointerTy_6, "", label_67);
  ptr_106->setAlignment(8);
  AllocaInst* ptr_107 = new AllocaInst(VectorTy_7, "", label_67);
  ptr_107->setAlignment(32);
  AllocaInst* ptr_108 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "", label_67);
  ptr_108->setAlignment(4);
  AllocaInst* ptr_109 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "", label_67);
  ptr_109->setAlignment(4);
  AllocaInst* ptr_110 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "", label_67);
  ptr_110->setAlignment(4);
  AllocaInst* ptr_111 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "", label_67);
  ptr_111->setAlignment(4);
  AllocaInst* ptr_112 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "", label_67);
  ptr_112->setAlignment(4);
  AllocaInst* ptr_113 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "", label_67);
  ptr_113->setAlignment(4);
  AllocaInst* ptr_114 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "", label_67);
  ptr_114->setAlignment(4);
  AllocaInst* ptr_115 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "", label_67);
  ptr_115->setAlignment(4);
  AllocaInst* ptr_116 = new AllocaInst(VectorTy_9, "", label_67);
  ptr_116->setAlignment(32);
  AllocaInst* ptr_117 = new AllocaInst(PointerTy_1, "", label_67);
  ptr_117->setAlignment(8);
  AllocaInst* ptr_118 = new AllocaInst(PointerTy_2, "", label_67);
  ptr_118->setAlignment(8);
  AllocaInst* ptr_mask0 = new AllocaInst(VectorTy_7, "mask0", label_67);
  ptr_mask0->setAlignment(32);
  AllocaInst* ptr_mask1 = new AllocaInst(VectorTy_7, "mask1", label_67);
  ptr_mask1->setAlignment(32);
  AllocaInst* ptr_byte_value = new AllocaInst(VectorTy_7, "byte_value", label_67);
  ptr_byte_value->setAlignment(32);
  AllocaInst* ptr_permute_var = new AllocaInst(VectorTy_7, "permute_var", label_67);
  ptr_permute_var->setAlignment(32);
  AllocaInst* ptr_shuffle_value = new AllocaInst(VectorTy_7, "shuffle_value", label_67);
  ptr_shuffle_value->setAlignment(32);
  StoreInst* void_119 = new StoreInst(ptr_result, ptr_117, false, label_67);
  void_119->setAlignment(8);
  StoreInst* void_120 = new StoreInst(ptr_byte, ptr_118, false, label_67);
  void_120->setAlignment(8);
  StoreInst* void_121 = new StoreInst(const_int32_20, ptr_108, false, label_67);
  void_121->setAlignment(4);
  StoreInst* void_122 = new StoreInst(const_int32_21, ptr_109, false, label_67);
  void_122->setAlignment(4);
  StoreInst* void_123 = new StoreInst(const_int32_22, ptr_110, false, label_67);
  void_123->setAlignment(4);
  StoreInst* void_124 = new StoreInst(const_int32_23, ptr_111, false, label_67);
  void_124->setAlignment(4);
  StoreInst* void_125 = new StoreInst(const_int32_23, ptr_112, false, label_67);
  void_125->setAlignment(4);
  StoreInst* void_126 = new StoreInst(const_int32_24, ptr_113, false, label_67);
  void_126->setAlignment(4);
  StoreInst* void_127 = new StoreInst(const_int32_19, ptr_114, false, label_67);
  void_127->setAlignment(4);
  StoreInst* void_128 = new StoreInst(const_int32_25, ptr_115, false, label_67);
  void_128->setAlignment(4);
  LoadInst* int32_129 = new LoadInst(ptr_115, "", false, label_67);
  int32_129->setAlignment(4);
  InsertElementInst* packed_130 = InsertElementInst::Create(const_packed_26, int32_129, const_int32_25, "", label_67);
  LoadInst* int32_131 = new LoadInst(ptr_114, "", false, label_67);
  int32_131->setAlignment(4);
  InsertElementInst* packed_132 = InsertElementInst::Create(packed_130, int32_131, const_int32_19, "", label_67);
  LoadInst* int32_133 = new LoadInst(ptr_113, "", false, label_67);
  int32_133->setAlignment(4);
  InsertElementInst* packed_134 = InsertElementInst::Create(packed_132, int32_133, const_int32_24, "", label_67);
  LoadInst* int32_135 = new LoadInst(ptr_112, "", false, label_67);
  int32_135->setAlignment(4);
  InsertElementInst* packed_136 = InsertElementInst::Create(packed_134, int32_135, const_int32_23, "", label_67);
  LoadInst* int32_137 = new LoadInst(ptr_111, "", false, label_67);
  int32_137->setAlignment(4);
  InsertElementInst* packed_138 = InsertElementInst::Create(packed_136, int32_137, const_int32_22, "", label_67);
  LoadInst* int32_139 = new LoadInst(ptr_110, "", false, label_67);
  int32_139->setAlignment(4);
  InsertElementInst* packed_140 = InsertElementInst::Create(packed_138, int32_139, const_int32_21, "", label_67);
  LoadInst* int32_141 = new LoadInst(ptr_109, "", false, label_67);
  int32_141->setAlignment(4);
  InsertElementInst* packed_142 = InsertElementInst::Create(packed_140, int32_141, const_int32_20, "", label_67);
  LoadInst* int32_143 = new LoadInst(ptr_108, "", false, label_67);
  int32_143->setAlignment(4);
  InsertElementInst* packed_144 = InsertElementInst::Create(packed_142, int32_143, const_int32_27, "", label_67);
  StoreInst* void_145 = new StoreInst(packed_144, ptr_116, false, label_67);
  void_145->setAlignment(32);
  LoadInst* packed_146 = new LoadInst(ptr_116, "", false, label_67);
  packed_146->setAlignment(32);
  CastInst* packed_147 = new BitCastInst(packed_146, VectorTy_7, "", label_67);
  StoreInst* void_148 = new StoreInst(packed_147, ptr_mask0, false, label_67);
  void_148->setAlignment(32);
  StoreInst* void_149 = new StoreInst(const_int8_28, ptr_68, false, label_67);
  void_149->setAlignment(1);
  StoreInst* void_150 = new StoreInst(const_int8_29, ptr_69, false, label_67);
  void_150->setAlignment(1);
  StoreInst* void_151 = new StoreInst(const_int8_30, ptr_70, false, label_67);
  void_151->setAlignment(1);
  StoreInst* void_152 = new StoreInst(const_int8_31, ptr_71, false, label_67);
  void_152->setAlignment(1);
  StoreInst* void_153 = new StoreInst(const_int8_28, ptr_72, false, label_67);
  void_153->setAlignment(1);
  StoreInst* void_154 = new StoreInst(const_int8_32, ptr_73, false, label_67);
  void_154->setAlignment(1);
  StoreInst* void_155 = new StoreInst(const_int8_33, ptr_74, false, label_67);
  void_155->setAlignment(1);
  StoreInst* void_156 = new StoreInst(const_int8_34, ptr_75, false, label_67);
  void_156->setAlignment(1);
  StoreInst* void_157 = new StoreInst(const_int8_28, ptr_76, false, label_67);
  void_157->setAlignment(1);
  StoreInst* void_158 = new StoreInst(const_int8_35, ptr_77, false, label_67);
  void_158->setAlignment(1);
  StoreInst* void_159 = new StoreInst(const_int8_36, ptr_78, false, label_67);
  void_159->setAlignment(1);
  StoreInst* void_160 = new StoreInst(const_int8_37, ptr_79, false, label_67);
  void_160->setAlignment(1);
  StoreInst* void_161 = new StoreInst(const_int8_28, ptr_80, false, label_67);
  void_161->setAlignment(1);
  StoreInst* void_162 = new StoreInst(const_int8_38, ptr_81, false, label_67);
  void_162->setAlignment(1);
  StoreInst* void_163 = new StoreInst(const_int8_39, ptr_82, false, label_67);
  void_163->setAlignment(1);
  StoreInst* void_164 = new StoreInst(const_int8_40, ptr_83, false, label_67);
  void_164->setAlignment(1);
  StoreInst* void_165 = new StoreInst(const_int8_28, ptr_84, false, label_67);
  void_165->setAlignment(1);
  StoreInst* void_166 = new StoreInst(const_int8_29, ptr_85, false, label_67);
  void_166->setAlignment(1);
  StoreInst* void_167 = new StoreInst(const_int8_30, ptr_86, false, label_67);
  void_167->setAlignment(1);
  StoreInst* void_168 = new StoreInst(const_int8_31, ptr_87, false, label_67);
  void_168->setAlignment(1);
  StoreInst* void_169 = new StoreInst(const_int8_28, ptr_88, false, label_67);
  void_169->setAlignment(1);
  StoreInst* void_170 = new StoreInst(const_int8_32, ptr_89, false, label_67);
  void_170->setAlignment(1);
  StoreInst* void_171 = new StoreInst(const_int8_33, ptr_90, false, label_67);
  void_171->setAlignment(1);
  StoreInst* void_172 = new StoreInst(const_int8_34, ptr_91, false, label_67);
  void_172->setAlignment(1);
  StoreInst* void_173 = new StoreInst(const_int8_28, ptr_92, false, label_67);
  void_173->setAlignment(1);
  StoreInst* void_174 = new StoreInst(const_int8_35, ptr_93, false, label_67);
  void_174->setAlignment(1);
  StoreInst* void_175 = new StoreInst(const_int8_36, ptr_94, false, label_67);
  void_175->setAlignment(1);
  StoreInst* void_176 = new StoreInst(const_int8_37, ptr_95, false, label_67);
  void_176->setAlignment(1);
  StoreInst* void_177 = new StoreInst(const_int8_28, ptr_96, false, label_67);
  void_177->setAlignment(1);
  StoreInst* void_178 = new StoreInst(const_int8_38, ptr_97, false, label_67);
  void_178->setAlignment(1);
  StoreInst* void_179 = new StoreInst(const_int8_39, ptr_98, false, label_67);
  void_179->setAlignment(1);
  StoreInst* void_180 = new StoreInst(const_int8_40, ptr_99, false, label_67);
  void_180->setAlignment(1);
  LoadInst* int8_181 = new LoadInst(ptr_99, "", false, label_67);
  int8_181->setAlignment(1);
  InsertElementInst* packed_182 = InsertElementInst::Create(const_packed_41, int8_181, const_int32_25, "", label_67);
  LoadInst* int8_183 = new LoadInst(ptr_98, "", false, label_67);
  int8_183->setAlignment(1);
  InsertElementInst* packed_184 = InsertElementInst::Create(packed_182, int8_183, const_int32_19, "", label_67);
  LoadInst* int8_185 = new LoadInst(ptr_97, "", false, label_67);
  int8_185->setAlignment(1);
  InsertElementInst* packed_186 = InsertElementInst::Create(packed_184, int8_185, const_int32_24, "", label_67);
  LoadInst* int8_187 = new LoadInst(ptr_96, "", false, label_67);
  int8_187->setAlignment(1);
  InsertElementInst* packed_188 = InsertElementInst::Create(packed_186, int8_187, const_int32_23, "", label_67);
  LoadInst* int8_189 = new LoadInst(ptr_95, "", false, label_67);
  int8_189->setAlignment(1);
  InsertElementInst* packed_190 = InsertElementInst::Create(packed_188, int8_189, const_int32_22, "", label_67);
  LoadInst* int8_191 = new LoadInst(ptr_94, "", false, label_67);
  int8_191->setAlignment(1);
  InsertElementInst* packed_192 = InsertElementInst::Create(packed_190, int8_191, const_int32_21, "", label_67);
  LoadInst* int8_193 = new LoadInst(ptr_93, "", false, label_67);
  int8_193->setAlignment(1);
  InsertElementInst* packed_194 = InsertElementInst::Create(packed_192, int8_193, const_int32_20, "", label_67);
  LoadInst* int8_195 = new LoadInst(ptr_92, "", false, label_67);
  int8_195->setAlignment(1);
  InsertElementInst* packed_196 = InsertElementInst::Create(packed_194, int8_195, const_int32_27, "", label_67);
  LoadInst* int8_197 = new LoadInst(ptr_91, "", false, label_67);
  int8_197->setAlignment(1);
  InsertElementInst* packed_198 = InsertElementInst::Create(packed_196, int8_197, const_int32_42, "", label_67);
  LoadInst* int8_199 = new LoadInst(ptr_90, "", false, label_67);
  int8_199->setAlignment(1);
  InsertElementInst* packed_200 = InsertElementInst::Create(packed_198, int8_199, const_int32_43, "", label_67);
  LoadInst* int8_201 = new LoadInst(ptr_89, "", false, label_67);
  int8_201->setAlignment(1);
  InsertElementInst* packed_202 = InsertElementInst::Create(packed_200, int8_201, const_int32_44, "", label_67);
  LoadInst* int8_203 = new LoadInst(ptr_88, "", false, label_67);
  int8_203->setAlignment(1);
  InsertElementInst* packed_204 = InsertElementInst::Create(packed_202, int8_203, const_int32_45, "", label_67);
  LoadInst* int8_205 = new LoadInst(ptr_87, "", false, label_67);
  int8_205->setAlignment(1);
  InsertElementInst* packed_206 = InsertElementInst::Create(packed_204, int8_205, const_int32_46, "", label_67);
  LoadInst* int8_207 = new LoadInst(ptr_86, "", false, label_67);
  int8_207->setAlignment(1);
  InsertElementInst* packed_208 = InsertElementInst::Create(packed_206, int8_207, const_int32_47, "", label_67);
  LoadInst* int8_209 = new LoadInst(ptr_85, "", false, label_67);
  int8_209->setAlignment(1);
  InsertElementInst* packed_210 = InsertElementInst::Create(packed_208, int8_209, const_int32_48, "", label_67);
  LoadInst* int8_211 = new LoadInst(ptr_84, "", false, label_67);
  int8_211->setAlignment(1);
  InsertElementInst* packed_212 = InsertElementInst::Create(packed_210, int8_211, const_int32_49, "", label_67);
  LoadInst* int8_213 = new LoadInst(ptr_83, "", false, label_67);
  int8_213->setAlignment(1);
  InsertElementInst* packed_214 = InsertElementInst::Create(packed_212, int8_213, const_int32_50, "", label_67);
  LoadInst* int8_215 = new LoadInst(ptr_82, "", false, label_67);
  int8_215->setAlignment(1);
  InsertElementInst* packed_216 = InsertElementInst::Create(packed_214, int8_215, const_int32_51, "", label_67);
  LoadInst* int8_217 = new LoadInst(ptr_81, "", false, label_67);
  int8_217->setAlignment(1);
  InsertElementInst* packed_218 = InsertElementInst::Create(packed_216, int8_217, const_int32_52, "", label_67);
  LoadInst* int8_219 = new LoadInst(ptr_80, "", false, label_67);
  int8_219->setAlignment(1);
  InsertElementInst* packed_220 = InsertElementInst::Create(packed_218, int8_219, const_int32_53, "", label_67);
  LoadInst* int8_221 = new LoadInst(ptr_79, "", false, label_67);
  int8_221->setAlignment(1);
  InsertElementInst* packed_222 = InsertElementInst::Create(packed_220, int8_221, const_int32_54, "", label_67);
  LoadInst* int8_223 = new LoadInst(ptr_78, "", false, label_67);
  int8_223->setAlignment(1);
  InsertElementInst* packed_224 = InsertElementInst::Create(packed_222, int8_223, const_int32_55, "", label_67);
  LoadInst* int8_225 = new LoadInst(ptr_77, "", false, label_67);
  int8_225->setAlignment(1);
  InsertElementInst* packed_226 = InsertElementInst::Create(packed_224, int8_225, const_int32_56, "", label_67);
  LoadInst* int8_227 = new LoadInst(ptr_76, "", false, label_67);
  int8_227->setAlignment(1);
  InsertElementInst* packed_228 = InsertElementInst::Create(packed_226, int8_227, const_int32_57, "", label_67);
  LoadInst* int8_229 = new LoadInst(ptr_75, "", false, label_67);
  int8_229->setAlignment(1);
  InsertElementInst* packed_230 = InsertElementInst::Create(packed_228, int8_229, const_int32_58, "", label_67);
  LoadInst* int8_231 = new LoadInst(ptr_74, "", false, label_67);
  int8_231->setAlignment(1);
  InsertElementInst* packed_232 = InsertElementInst::Create(packed_230, int8_231, const_int32_59, "", label_67);
  LoadInst* int8_233 = new LoadInst(ptr_73, "", false, label_67);
  int8_233->setAlignment(1);
  InsertElementInst* packed_234 = InsertElementInst::Create(packed_232, int8_233, const_int32_60, "", label_67);
  LoadInst* int8_235 = new LoadInst(ptr_72, "", false, label_67);
  int8_235->setAlignment(1);
  InsertElementInst* packed_236 = InsertElementInst::Create(packed_234, int8_235, const_int32_61, "", label_67);
  LoadInst* int8_237 = new LoadInst(ptr_71, "", false, label_67);
  int8_237->setAlignment(1);
  InsertElementInst* packed_238 = InsertElementInst::Create(packed_236, int8_237, const_int32_62, "", label_67);
  LoadInst* int8_239 = new LoadInst(ptr_70, "", false, label_67);
  int8_239->setAlignment(1);
  InsertElementInst* packed_240 = InsertElementInst::Create(packed_238, int8_239, const_int32_63, "", label_67);
  LoadInst* int8_241 = new LoadInst(ptr_69, "", false, label_67);
  int8_241->setAlignment(1);
  InsertElementInst* packed_242 = InsertElementInst::Create(packed_240, int8_241, const_int32_64, "", label_67);
  LoadInst* int8_243 = new LoadInst(ptr_68, "", false, label_67);
  int8_243->setAlignment(1);
  InsertElementInst* packed_244 = InsertElementInst::Create(packed_242, int8_243, const_int32_65, "", label_67);
  StoreInst* void_245 = new StoreInst(packed_244, ptr_100, false, label_67);
  void_245->setAlignment(32);
  LoadInst* packed_246 = new LoadInst(ptr_100, "", false, label_67);
  packed_246->setAlignment(32);
  CastInst* packed_247 = new BitCastInst(packed_246, VectorTy_7, "", label_67);
  StoreInst* void_248 = new StoreInst(packed_247, ptr_mask1, false, label_67);
  void_248->setAlignment(32);
  LoadInst* ptr_249 = new LoadInst(ptr_118, "", false, label_67);
  ptr_249->setAlignment(8);
  GetElementPtrInst* ptr_250 = GetElementPtrInst::Create(IntegerType::get(mod->getContext(), 8), ptr_249, {
   const_int64_66
  }, "", label_67);
  CastInst* ptr_251 = new BitCastInst(ptr_250, PointerTy_6, "", label_67);
  StoreInst* void_252 = new StoreInst(ptr_251, ptr_101, false, label_67);
  void_252->setAlignment(8);
  LoadInst* ptr_253 = new LoadInst(ptr_101, "", false, label_67);
  ptr_253->setAlignment(8);
  CastInst* ptr_254 = new BitCastInst(ptr_253, PointerTy_12, "", label_67);
  GetElementPtrInst* ptr_255 = GetElementPtrInst::Create(StructTy_struct___loadu_si256, ptr_254, {
   const_int32_25, 
   const_int32_25
  }, "", label_67);
  LoadInst* packed_256 = new LoadInst(ptr_255, "", false, label_67);
  packed_256->setAlignment(1);
  StoreInst* void_257 = new StoreInst(packed_256, ptr_byte_value, false, label_67);
  void_257->setAlignment(32);
  LoadInst* packed_258 = new LoadInst(ptr_byte_value, "", false, label_67);
  packed_258->setAlignment(32);
  LoadInst* packed_259 = new LoadInst(ptr_mask0, "", false, label_67);
  packed_259->setAlignment(32);
  StoreInst* void_260 = new StoreInst(packed_258, ptr_102, false, label_67);
  void_260->setAlignment(32);
  StoreInst* void_261 = new StoreInst(packed_259, ptr_103, false, label_67);
  void_261->setAlignment(32);
  LoadInst* packed_262 = new LoadInst(ptr_102, "", false, label_67);
  packed_262->setAlignment(32);
  CastInst* packed_263 = new BitCastInst(packed_262, VectorTy_9, "", label_67);
  LoadInst* packed_264 = new LoadInst(ptr_103, "", false, label_67);
  packed_264->setAlignment(32);
  CastInst* packed_265 = new BitCastInst(packed_264, VectorTy_9, "", label_67);
  std::vector<Value*> packed_266_params;
  packed_266_params.push_back(packed_263);
  packed_266_params.push_back(packed_265);
  CallInst* packed_266 = CallInst::Create(func_llvm_x86_avx2_permd, packed_266_params, "", label_67);
  packed_266->setCallingConv(CallingConv::C);
  packed_266->setTailCall(false);
  AttributeSet packed_266_PAL;
  {
   SmallVector<AttributeSet, 4> Attrs;
   AttributeSet PAS;
    {
     AttrBuilder B;
     B.addAttribute(Attribute::NoUnwind);
     PAS = AttributeSet::get(mod->getContext(), ~0U, B);
    }
   
   Attrs.push_back(PAS);
   packed_266_PAL = AttributeSet::get(mod->getContext(), Attrs);
   
  }
  packed_266->setAttributes(packed_266_PAL);
  
  CastInst* packed_267 = new BitCastInst(packed_266, VectorTy_7, "", label_67);
  StoreInst* void_268 = new StoreInst(packed_267, ptr_permute_var, false, label_67);
  void_268->setAlignment(32);
  LoadInst* packed_269 = new LoadInst(ptr_permute_var, "", false, label_67);
  packed_269->setAlignment(32);
  LoadInst* packed_270 = new LoadInst(ptr_mask1, "", false, label_67);
  packed_270->setAlignment(32);
  StoreInst* void_271 = new StoreInst(packed_269, ptr_104, false, label_67);
  void_271->setAlignment(32);
  StoreInst* void_272 = new StoreInst(packed_270, ptr_105, false, label_67);
  void_272->setAlignment(32);
  LoadInst* packed_273 = new LoadInst(ptr_104, "", false, label_67);
  packed_273->setAlignment(32);
  CastInst* packed_274 = new BitCastInst(packed_273, VectorTy_4, "", label_67);
  LoadInst* packed_275 = new LoadInst(ptr_105, "", false, label_67);
  packed_275->setAlignment(32);
  CastInst* packed_276 = new BitCastInst(packed_275, VectorTy_4, "", label_67);
  std::vector<Value*> packed_277_params;
  packed_277_params.push_back(packed_274);
  packed_277_params.push_back(packed_276);
  CallInst* packed_277 = CallInst::Create(func_llvm_x86_avx2_pshuf_b, packed_277_params, "", label_67);
  packed_277->setCallingConv(CallingConv::C);
  packed_277->setTailCall(false);
  AttributeSet packed_277_PAL;
  {
   SmallVector<AttributeSet, 4> Attrs;
   AttributeSet PAS;
    {
     AttrBuilder B;
     B.addAttribute(Attribute::NoUnwind);
     PAS = AttributeSet::get(mod->getContext(), ~0U, B);
    }
   
   Attrs.push_back(PAS);
   packed_277_PAL = AttributeSet::get(mod->getContext(), Attrs);
   
  }
  packed_277->setAttributes(packed_277_PAL);
  
  CastInst* packed_278 = new BitCastInst(packed_277, VectorTy_7, "", label_67);
  StoreInst* void_279 = new StoreInst(packed_278, ptr_shuffle_value, false, label_67);
  void_279->setAlignment(32);
  LoadInst* ptr_280 = new LoadInst(ptr_117, "", false, label_67);
  ptr_280->setAlignment(8);
  GetElementPtrInst* ptr_281 = GetElementPtrInst::Create(IntegerType::get(mod->getContext(), 32), ptr_280, {
   const_int64_66
  }, "", label_67);
  CastInst* ptr_282 = new BitCastInst(ptr_281, PointerTy_6, "", label_67);
  LoadInst* packed_283 = new LoadInst(ptr_shuffle_value, "", false, label_67);
  packed_283->setAlignment(32);
  StoreInst* void_284 = new StoreInst(ptr_282, ptr_106, false, label_67);
  void_284->setAlignment(8);
  StoreInst* void_285 = new StoreInst(packed_283, ptr_107, false, label_67);
  void_285->setAlignment(32);
  LoadInst* ptr_286 = new LoadInst(ptr_106, "", false, label_67);
  ptr_286->setAlignment(8);
  CastInst* ptr_287 = new BitCastInst(ptr_286, PointerTy_2, "", label_67);
  LoadInst* packed_288 = new LoadInst(ptr_107, "", false, label_67);
  packed_288->setAlignment(32);
  CastInst* packed_289 = new BitCastInst(packed_288, VectorTy_4, "", label_67);
  std::vector<Value*> void_290_params;
  void_290_params.push_back(ptr_287);
  void_290_params.push_back(packed_289);
  CallInst* void_290 = CallInst::Create(func_llvm_x86_avx_storeu_dq_256, void_290_params, "", label_67);
  void_290->setCallingConv(CallingConv::C);
  void_290->setTailCall(false);
  AttributeSet void_290_PAL;
  {
   SmallVector<AttributeSet, 4> Attrs;
   AttributeSet PAS;
    {
     AttrBuilder B;
     B.addAttribute(Attribute::NoUnwind);
     PAS = AttributeSet::get(mod->getContext(), ~0U, B);
    }
   
   Attrs.push_back(PAS);
   void_290_PAL = AttributeSet::get(mod->getContext(), Attrs);
   
  }
  void_290->setAttributes(void_290_PAL);
  
  ReturnInst::Create(mod->getContext(), label_67);
  
 }
 
 return mod;
}
